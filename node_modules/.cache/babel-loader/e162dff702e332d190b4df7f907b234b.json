{"ast":null,"code":"import * as types from '../types';\nimport { ENDPOINT } from '../../../utils/endpoint';\nimport { getOptions } from '../../../utils/httpConfig';\nimport request from '../../../utils/request'; // Get project detail\n\nexport function getUserProjectDetail() {\n  return {\n    type: types.GET_USER_PROJECT_DETAILS_REQUEST\n  };\n}\nexport function getProjectDetail() {\n  return {\n    type: types.GET_PROJECT_DETAILS_REQUEST\n  };\n}\nexport function getUserProjectDetailSuccess(data) {\n  return {\n    type: types.GET_USER_PROJECT_DETAILS_REQUEST_SUCCESS,\n    payload: data\n  };\n}\nexport function getProjectDetailSuccess(data) {\n  return {\n    type: types.GET_PROJECT_DETAILS_REQUEST_SUCCESS,\n    payload: data\n  };\n}\nexport function getUserProjectDetailFailure(data) {\n  return {\n    type: types.GET_USER_PROJECT_DETAILS_REQUEST_FAILED,\n    payload: data\n  };\n} //Get project contract detail\n\nexport function getProjectDetailFailure(data) {\n  return {\n    type: types.GET_PROJECT_DETAILS_REQUEST_FAILED,\n    payload: data\n  };\n}\nexport function getUserProjectContractDetail() {\n  return {\n    type: types.GET_USER_PROJECT_CONTRACT_DETAILS_REQUEST\n  };\n}\nexport function getUserProjectContractDetailSuccess(data) {\n  return {\n    type: types.GET_USER_PROJECT_CONTRACT_DETAILS_REQUEST_SUCCESS,\n    payload: data\n  };\n}\nexport function getUserProjectContractDetailFailure(data) {\n  return {\n    type: types.GET_USER_PROJECT_CONTRACT_DETAILS_REQUEST_FAILED,\n    payload: data\n  };\n} //#region  Project Post - Post\n\nexport const projectPost_updateField = (field, value) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_FIELD,\n    payload: {\n      [field]: value\n    }\n  };\n};\nexport const projectPost_updateProjectType = projectType => {\n  return {\n    type: types.PROJECT_POST_UPDATE_PROJECT_TYPE,\n    payload: {\n      projectType\n    }\n  };\n};\nexport const projectPost_updateProjectScope = projectScope => {\n  return {\n    type: types.PROJECT_POST_UPDATE_PROJECT_SCOPE,\n    payload: {\n      projectScope\n    }\n  };\n};\nexport const projectPost_updateSelectedServices = services => {\n  return {\n    type: types.PROJECT_POST_UPDATE_SELECTED_SERVICES,\n    payload: services\n  };\n};\nexport const projectPost_updateProjectSubScope = projectSubScope => {\n  return {\n    type: types.PROJECT_POST_UPDATE_PROJECT_SUB_SCOPE,\n    payload: {\n      projectSubScope\n    }\n  };\n};\nexport const projectPost_getProjectDetails = projectId => async dispatch => {\n  const result = await request(`${ENDPOINT['GetProjectDetails']}?projectId=` + projectId, getOptions({}));\n  const {\n    projectType,\n    jobTitle,\n    jobDescription\n  } = result.result.data.projectResponse;\n  dispatch({\n    type: types.PROJECT_POST_GET_PROJECT_DETAILS,\n    payload: {\n      projectId,\n      projectType,\n      jobTitle,\n      jobDescription\n    }\n  });\n};\nexport const projectPost_jobTitleChanged = jobTitle => {\n  return {\n    type: types.PROJECT_POST_JOB_TITLE_CHANGED,\n    payload: {\n      jobTitle\n    }\n  };\n};\nexport const projectPost_jobDescriptionChanged = jobDescription => {\n  return {\n    type: types.PROJECT_POST_JOB_DESCRIPTION_CHANGED,\n    payload: {\n      jobDescription\n    }\n  };\n};\nexport const projectPost_addDocument = document => {\n  return {\n    type: types.PROJECT_POST_ADD_DOCUMENT,\n    payload: {\n      document\n    }\n  };\n};\nexport const projectPost_removeDocument = documentId => {\n  return {\n    type: types.PROJECT_POST_REMOVE_DOCUMENT,\n    payload: {\n      documentId\n    }\n  };\n};\nexport const projectPost_addSkill = skill => {\n  return {\n    type: types.PROJECT_POST_ADD_SKILL,\n    payload: {\n      skill\n    }\n  };\n};\nexport const projectPost_removeSkill = skill => {\n  return {\n    type: types.PROJECT_POST_REMOVE_SKILL,\n    payload: {\n      skill\n    }\n  };\n};\nexport const projectPost_updateFreelancerType = freelancerType => {\n  return {\n    type: types.PROJECT_POST_UPDATE_FREELANCER_TYPE,\n    payload: {\n      freelancerType\n    }\n  };\n};\nexport const projectPost_updateFreelancerCount = freelancerCount => {\n  return {\n    type: types.PROJECT_POST_UPDATE_FREELANCER_COUNT,\n    payload: {\n      freelancerCount\n    }\n  };\n};\nexport const projectPost_updatePeriod = period => {\n  return {\n    type: types.PROJECT_POST_UPDATE_PERIOD,\n    payload: {\n      period\n    }\n  };\n};\nexport const projectPost_updateCurrency = currency => {\n  return {\n    type: types.PROJECT_POST_UPDATE_CURRENCY,\n    payload: {\n      currency\n    }\n  };\n};\nexport const projectPost_updateAmount = amount => {\n  return {\n    type: types.PROJECT_POST_UPDATE_AMOUNT,\n    payload: {\n      amount\n    }\n  };\n};\nexport const projectPost_updateMaxWeekHours = maximumWeekHours => {\n  return {\n    type: types.PROJECT_POST_UPDATE_MAX_WEEK_HOURS,\n    payload: {\n      maximumWeekHours\n    }\n  };\n};\nexport const projectPost_updateNoOfDay = noOfDay => {\n  return {\n    type: types.PROJECT_POST_UPDATE_NO_OF_DAY,\n    payload: {\n      noOfDay\n    }\n  };\n};\nexport const projectPost_updateAmountPerDay = amountPerDay => {\n  return {\n    type: types.PROJECT_POST_UPDATE_AMOUNT_PER_DAY,\n    payload: {\n      amountPerDay\n    }\n  };\n};\nexport const projectPost_updateSalaryType = salaryType => {\n  return {\n    type: types.PROJECT_POST_UPDATE_SALARY_TYPE,\n    payload: {\n      salaryType\n    }\n  };\n};\nexport const projectPost_updateFromSalary = fromSalary => {\n  return {\n    type: types.PROJECT_POST_UPDATE_FROM_SALARY,\n    payload: {\n      fromSalary\n    }\n  };\n};\nexport const projectPost_updateToSalary = toSalary => {\n  return {\n    type: types.PROJECT_POST_UPDATE_TO_SALARY,\n    payload: {\n      toSalary\n    }\n  };\n};\nexport const projectPost_updatePositionAvailableDate = positionAvailableDate => {\n  return {\n    type: types.PROJECT_POST_UPDATE_POSITION_AVAILABLE_DATE,\n    payload: {\n      positionAvailableDate\n    }\n  };\n};\nexport const projectPost_UpdateAmountFreeContract = (field, value) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_AMOUNT_FREE_CONTRACT,\n    payload: {\n      [field]: value\n    }\n  };\n};\nexport const projectPost_updateLifecycleStage = lifecycleStage => {\n  return {\n    type: types.PROJECT_POST_UPDATE_LIFECYCLE_STAGE,\n    payload: {\n      lifecycleStage\n    }\n  };\n};\nexport const projectPost_updateMinimunRequirementField = (field, value) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_MINIMUM_REQUIREMENT_FIELD,\n    payload: {\n      [field]: value\n    }\n  };\n};\nexport const projectPost_updatePerHourAmount = (field, value) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_PER_HOUR_AMOUNT,\n    payload: {\n      [field]: value\n    }\n  };\n};\nexport const projectPost_updateProbationPeriod = (field, value) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_PROBATION_PERIOD,\n    payload: {\n      [field]: value\n    }\n  };\n};\nexport const projectPost_updateSuccessfully = () => {\n  return {\n    type: types.PROJECT_POST_SUCCESSFULLY_DONE,\n    payload: {\n      success: true\n    }\n  };\n};\nexport const projectPost_updateScreeningQuestions = screeningQuestions => {\n  return {\n    type: types.PROJECT_POST_UPDATE_SCREENING_QUESTIONS,\n    payload: {\n      screeningQuestions\n    }\n  };\n};\nexport const projectPost_updateOfferedMilestones = milestones => {\n  return {\n    type: types.PROJECT_POST_UPDATE_OFFERED_MILESTONE,\n    payload: milestones\n  };\n};\nexport const projectPost_updateIsCoverLetterRequired = isCoverLetterRequired => {\n  return {\n    type: types.PROJECT_POST_UPDATE_IS_COVER_LETTER_REQUIRED,\n    payload: {\n      isCoverLetterRequired\n    }\n  };\n}; //#endregion","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/store/action/Project/projectActions.js"],"names":["types","ENDPOINT","getOptions","request","getUserProjectDetail","type","GET_USER_PROJECT_DETAILS_REQUEST","getProjectDetail","GET_PROJECT_DETAILS_REQUEST","getUserProjectDetailSuccess","data","GET_USER_PROJECT_DETAILS_REQUEST_SUCCESS","payload","getProjectDetailSuccess","GET_PROJECT_DETAILS_REQUEST_SUCCESS","getUserProjectDetailFailure","GET_USER_PROJECT_DETAILS_REQUEST_FAILED","getProjectDetailFailure","GET_PROJECT_DETAILS_REQUEST_FAILED","getUserProjectContractDetail","GET_USER_PROJECT_CONTRACT_DETAILS_REQUEST","getUserProjectContractDetailSuccess","GET_USER_PROJECT_CONTRACT_DETAILS_REQUEST_SUCCESS","getUserProjectContractDetailFailure","GET_USER_PROJECT_CONTRACT_DETAILS_REQUEST_FAILED","projectPost_updateField","field","value","PROJECT_POST_UPDATE_FIELD","projectPost_updateProjectType","projectType","PROJECT_POST_UPDATE_PROJECT_TYPE","projectPost_updateProjectScope","projectScope","PROJECT_POST_UPDATE_PROJECT_SCOPE","projectPost_updateSelectedServices","services","PROJECT_POST_UPDATE_SELECTED_SERVICES","projectPost_updateProjectSubScope","projectSubScope","PROJECT_POST_UPDATE_PROJECT_SUB_SCOPE","projectPost_getProjectDetails","projectId","dispatch","result","jobTitle","jobDescription","projectResponse","PROJECT_POST_GET_PROJECT_DETAILS","projectPost_jobTitleChanged","PROJECT_POST_JOB_TITLE_CHANGED","projectPost_jobDescriptionChanged","PROJECT_POST_JOB_DESCRIPTION_CHANGED","projectPost_addDocument","document","PROJECT_POST_ADD_DOCUMENT","projectPost_removeDocument","documentId","PROJECT_POST_REMOVE_DOCUMENT","projectPost_addSkill","skill","PROJECT_POST_ADD_SKILL","projectPost_removeSkill","PROJECT_POST_REMOVE_SKILL","projectPost_updateFreelancerType","freelancerType","PROJECT_POST_UPDATE_FREELANCER_TYPE","projectPost_updateFreelancerCount","freelancerCount","PROJECT_POST_UPDATE_FREELANCER_COUNT","projectPost_updatePeriod","period","PROJECT_POST_UPDATE_PERIOD","projectPost_updateCurrency","currency","PROJECT_POST_UPDATE_CURRENCY","projectPost_updateAmount","amount","PROJECT_POST_UPDATE_AMOUNT","projectPost_updateMaxWeekHours","maximumWeekHours","PROJECT_POST_UPDATE_MAX_WEEK_HOURS","projectPost_updateNoOfDay","noOfDay","PROJECT_POST_UPDATE_NO_OF_DAY","projectPost_updateAmountPerDay","amountPerDay","PROJECT_POST_UPDATE_AMOUNT_PER_DAY","projectPost_updateSalaryType","salaryType","PROJECT_POST_UPDATE_SALARY_TYPE","projectPost_updateFromSalary","fromSalary","PROJECT_POST_UPDATE_FROM_SALARY","projectPost_updateToSalary","toSalary","PROJECT_POST_UPDATE_TO_SALARY","projectPost_updatePositionAvailableDate","positionAvailableDate","PROJECT_POST_UPDATE_POSITION_AVAILABLE_DATE","projectPost_UpdateAmountFreeContract","PROJECT_POST_UPDATE_AMOUNT_FREE_CONTRACT","projectPost_updateLifecycleStage","lifecycleStage","PROJECT_POST_UPDATE_LIFECYCLE_STAGE","projectPost_updateMinimunRequirementField","PROJECT_POST_UPDATE_MINIMUM_REQUIREMENT_FIELD","projectPost_updatePerHourAmount","PROJECT_POST_UPDATE_PER_HOUR_AMOUNT","projectPost_updateProbationPeriod","PROJECT_POST_UPDATE_PROBATION_PERIOD","projectPost_updateSuccessfully","PROJECT_POST_SUCCESSFULLY_DONE","success","projectPost_updateScreeningQuestions","screeningQuestions","PROJECT_POST_UPDATE_SCREENING_QUESTIONS","projectPost_updateOfferedMilestones","milestones","PROJECT_POST_UPDATE_OFFERED_MILESTONE","projectPost_updateIsCoverLetterRequired","isCoverLetterRequired","PROJECT_POST_UPDATE_IS_COVER_LETTER_REQUIRED"],"mappings":"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","sourcesContent":["import * as types from '../types';\nimport { ENDPOINT } from '../../../utils/endpoint';\nimport { getOptions } from '../../../utils/httpConfig';\nimport request from '../../../utils/request';\n\n// Get project detail\nexport function getUserProjectDetail() {\n  return {\n    type: types.GET_USER_PROJECT_DETAILS_REQUEST,\n  };\n}\nexport function getProjectDetail() {\n  return {\n    type: types.GET_PROJECT_DETAILS_REQUEST,\n  };\n}\nexport function getUserProjectDetailSuccess(data) {\n  return {\n    type: types.GET_USER_PROJECT_DETAILS_REQUEST_SUCCESS,\n    payload: data,\n  };\n}\nexport function getProjectDetailSuccess(data) {\n  return {\n    type: types.GET_PROJECT_DETAILS_REQUEST_SUCCESS,\n    payload: data,\n  };\n}\nexport function getUserProjectDetailFailure(data) {\n  return {\n    type: types.GET_USER_PROJECT_DETAILS_REQUEST_FAILED,\n    payload: data,\n  };\n}\n\n//Get project contract detail\nexport function getProjectDetailFailure(data) {\n  return {\n    type: types.GET_PROJECT_DETAILS_REQUEST_FAILED,\n    payload: data,\n  };\n}\nexport function getUserProjectContractDetail() {\n  return {\n    type: types.GET_USER_PROJECT_CONTRACT_DETAILS_REQUEST,\n  };\n}\n\nexport function getUserProjectContractDetailSuccess(data) {\n  return {\n    type: types.GET_USER_PROJECT_CONTRACT_DETAILS_REQUEST_SUCCESS,\n    payload: data,\n  };\n}\n\nexport function getUserProjectContractDetailFailure(data) {\n  return {\n    type: types.GET_USER_PROJECT_CONTRACT_DETAILS_REQUEST_FAILED,\n    payload: data,\n  };\n}\n\n//#region  Project Post - Post\nexport const projectPost_updateField = (field, value) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_FIELD,\n    payload: { [field]: value },\n  };\n};\n\nexport const projectPost_updateProjectType = (projectType) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_PROJECT_TYPE,\n    payload: { projectType },\n  };\n};\n\nexport const projectPost_updateProjectScope = (projectScope) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_PROJECT_SCOPE,\n    payload: { projectScope },\n  };\n};\nexport const projectPost_updateSelectedServices = (services) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_SELECTED_SERVICES,\n    payload: services,\n  };\n};\n\nexport const projectPost_updateProjectSubScope = (projectSubScope) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_PROJECT_SUB_SCOPE,\n    payload: { projectSubScope },\n  };\n};\n\nexport const projectPost_getProjectDetails = (projectId) => async (dispatch) => {\n  const result = await request(`${ENDPOINT['GetProjectDetails']}?projectId=` + projectId, getOptions({}));\n  const { projectType, jobTitle, jobDescription } = result.result.data.projectResponse;\n\n  dispatch({\n    type: types.PROJECT_POST_GET_PROJECT_DETAILS,\n    payload: {\n      projectId,\n      projectType,\n      jobTitle,\n      jobDescription,\n    },\n  });\n};\n\nexport const projectPost_jobTitleChanged = (jobTitle) => {\n  return {\n    type: types.PROJECT_POST_JOB_TITLE_CHANGED,\n    payload: {\n      jobTitle,\n    },\n  };\n};\n\nexport const projectPost_jobDescriptionChanged = (jobDescription) => {\n  return {\n    type: types.PROJECT_POST_JOB_DESCRIPTION_CHANGED,\n    payload: {\n      jobDescription,\n    },\n  };\n};\n\nexport const projectPost_addDocument = (document) => {\n  return {\n    type: types.PROJECT_POST_ADD_DOCUMENT,\n    payload: { document },\n  };\n};\n\nexport const projectPost_removeDocument = (documentId) => {\n  return {\n    type: types.PROJECT_POST_REMOVE_DOCUMENT,\n    payload: { documentId },\n  };\n};\n\nexport const projectPost_addSkill = (skill) => {\n  return {\n    type: types.PROJECT_POST_ADD_SKILL,\n    payload: { skill },\n  };\n};\n\nexport const projectPost_removeSkill = (skill) => {\n  return {\n    type: types.PROJECT_POST_REMOVE_SKILL,\n    payload: { skill },\n  };\n};\n\nexport const projectPost_updateFreelancerType = (freelancerType) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_FREELANCER_TYPE,\n    payload: { freelancerType },\n  };\n};\n\nexport const projectPost_updateFreelancerCount = (freelancerCount) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_FREELANCER_COUNT,\n    payload: { freelancerCount },\n  };\n};\n\nexport const projectPost_updatePeriod = (period) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_PERIOD,\n    payload: { period },\n  };\n};\n\nexport const projectPost_updateCurrency = (currency) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_CURRENCY,\n    payload: { currency },\n  };\n};\n\nexport const projectPost_updateAmount = (amount) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_AMOUNT,\n    payload: { amount },\n  };\n};\n\nexport const projectPost_updateMaxWeekHours = (maximumWeekHours) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_MAX_WEEK_HOURS,\n    payload: { maximumWeekHours },\n  };\n};\n\nexport const projectPost_updateNoOfDay = (noOfDay) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_NO_OF_DAY,\n    payload: { noOfDay },\n  };\n};\n\nexport const projectPost_updateAmountPerDay = (amountPerDay) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_AMOUNT_PER_DAY,\n    payload: { amountPerDay },\n  };\n};\n\nexport const projectPost_updateSalaryType = (salaryType) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_SALARY_TYPE,\n    payload: { salaryType },\n  };\n};\n\nexport const projectPost_updateFromSalary = (fromSalary) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_FROM_SALARY,\n    payload: { fromSalary },\n  };\n};\n\nexport const projectPost_updateToSalary = (toSalary) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_TO_SALARY,\n    payload: { toSalary },\n  };\n};\n\nexport const projectPost_updatePositionAvailableDate = (positionAvailableDate) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_POSITION_AVAILABLE_DATE,\n    payload: { positionAvailableDate },\n  };\n};\nexport const projectPost_UpdateAmountFreeContract=(field, value) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_AMOUNT_FREE_CONTRACT,\n    payload: { [field]: value },\n  };\n};\nexport const projectPost_updateLifecycleStage = (lifecycleStage) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_LIFECYCLE_STAGE,\n    payload: { lifecycleStage },\n  };\n};\n\nexport const projectPost_updateMinimunRequirementField = (field, value) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_MINIMUM_REQUIREMENT_FIELD,\n    payload: { [field]: value },\n  };\n};\nexport const projectPost_updatePerHourAmount = (field, value) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_PER_HOUR_AMOUNT,\n    payload: { [field]: value },\n  };\n};\nexport const projectPost_updateProbationPeriod = (field, value) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_PROBATION_PERIOD,\n    payload: { [field]: value },\n  };\n};\nexport const projectPost_updateSuccessfully = () => {\n  return {\n    type: types.PROJECT_POST_SUCCESSFULLY_DONE,\n    payload: {success:true},\n  };\n};\n\nexport const projectPost_updateScreeningQuestions = (screeningQuestions) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_SCREENING_QUESTIONS,\n    payload: { screeningQuestions },\n  };\n};\nexport const  projectPost_updateOfferedMilestones= (milestones) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_OFFERED_MILESTONE,\n    payload: milestones,\n  };\n};\nexport const projectPost_updateIsCoverLetterRequired = (isCoverLetterRequired) => {\n  return {\n    type: types.PROJECT_POST_UPDATE_IS_COVER_LETTER_REQUIRED,\n    payload: { isCoverLetterRequired },\n  };\n};\n//#endregion\n"]},"metadata":{},"sourceType":"module"}
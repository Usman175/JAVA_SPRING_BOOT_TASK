{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/profession.jsx\";\nimport React, { Component } from \"react\";\nimport notifications from \"../utils/notifications\";\nimport request from \"../utils/request\";\nimport { ENDPOINT } from \"../utils/endpoint\";\nimport { getOptions, postOptions } from \"../utils/httpConfig\";\nimport { ProjectTypeConst, ProjectStepConst } from \"../utils/projectConst\";\nimport RightTop from \"../components/rightbar/rightTop\";\nimport RightBottom from \"../components/rightbar/rightBottom\";\nimport SubHeader from \"../components/subHeader\";\nimport { onReduxLangaugeChange } from \"./../store/action/action\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass Profession extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLangaugeDataChange = language => {\n      localStorage.setItem(\"langauge\", JSON.stringify(language));\n      this.props.onLangaugeChange(language);\n    };\n\n    this.handleCheckBoxClick = e => {\n      const {\n        languageType\n      } = this.props;\n      const {\n        selectedProfession,\n        activeTab\n      } = this.state;\n\n      if (!e.target.checked) {\n        selectedProfession[activeTab] = selectedProfession[activeTab].filter(sp => sp.value !== e.target.value);\n        this.setState({\n          selectedProfession\n        });\n      } else {\n        if (selectedProfession[activeTab] && selectedProfession[activeTab].length === 3) {\n          notifications.showError(languageType.YOU_SELECT_CATEGORY);\n          e.target.checked = false;\n        } else if (Object.entries(selectedProfession).filter(([k, v]) => v.length > 0).length === 2 && Object.entries(selectedProfession).filter(([key, val]) => val.length > 0).map(([key, val]) => key).indexOf(activeTab) === -1) {\n          notifications.showError(languageType.YOU_SELECT_CATE_MAX);\n          e.target.checked = false;\n        } else {\n          if (!selectedProfession[activeTab]) {\n            selectedProfession[activeTab] = [{\n              value: e.target.value,\n              text: e.target.name\n            }];\n          } else {\n            selectedProfession[activeTab].push({\n              value: e.target.value,\n              text: e.target.name\n            });\n          }\n\n          this.setState({\n            selectedProfession\n          });\n        }\n      }\n    };\n\n    this.onPageRedirectHandle = async () => {\n      let IsValidate = true;\n      const {\n        languageType\n      } = this.props;\n      let newValuesIndex = Object.keys(this.state.selectedProfession);\n      newValuesIndex.map(item => {\n        if (this.state.selectedProfession[item].length === 0) {\n          IsValidate = false;\n        }\n      });\n\n      if (Object.keys(this.state.selectedProfession).length > 0 && IsValidate) {\n        let professions = JSON.stringify(this.state.selectedProfession) && this.state.selectedProfession;\n        this.props.history.push({\n          pathname: \"/create-fulltime-Offer\",\n          state: professions\n        });\n        let param = {\n          projectId: this.state.projectId,\n          projectType: this.state.projectType,\n          professions: professions\n        };\n        let result = await request(ENDPOINT[\"UpdateFreeContractProfessions\"], postOptions(param));\n        if (result.success) this.props.history.push(\"/project-post-details?id=\" + this.state.projectId);else notifications.showError(result.message);\n      } else {\n        notifications.showError(languageType.PLEASE_SELECT_ONE);\n      }\n    };\n\n    this.handleRemoveCategory = (innerValue, outerValue) => {\n      let profession = this.state.selectedProfession;\n      let newProfession = profession[outerValue].filter(item => item.value != innerValue.value);\n      this.setState({\n        selectedProfession: { ...profession,\n          [outerValue]: newProfession\n        }\n      });\n    };\n\n    var editType = new URLSearchParams(this.props.location.search).get(\"type\") !== null && new URLSearchParams(this.props.location.search).get(\"type\") !== \"\" ? new URLSearchParams(this.props.location.search).get(\"type\") : \"\";\n    this.state = {\n      isProjectEdit: editType === \"edit\" ? true : false,\n      projectId: new URLSearchParams(this.props.location.search).get(\"id\"),\n      projectType: \"\",\n      projectScope: \"\",\n      activeTab: \"design\",\n      selectedProfession: {},\n      project: {}\n    };\n  }\n\n  componentWillMount() {\n    this.getProjectDetail();\n  }\n\n  componentWillMount() {\n    let data = localStorage.getItem(\"langauge\");\n    let langauge = JSON.parse(data);\n\n    if (langauge) {\n      this.props.onLangaugeChange(langauge);\n    }\n  } //#region Bind Methods\n\n\n  async getProjectDetail() {// let result = await request(`${ENDPOINT[\"GetProjectDetails\"]}?projectId=` + this.state.projectId, getOptions({}));\n    // if (result.success) {\n    //     if (result.result.data !== null && result.result.data !== \"\") {\n    //         this.setState({ project: result.result.data.projectResponse });\n    //         this.setState({ projectType: result.result.data.projectResponse.projectType });\n    //         this.setState({ projectScope: result.result.data.projectResponse.projectScope });\n    //         if (result.result.data.projectResponse.professions.trim() !== \"\") {\n    //             this.setState({ selectedProfession: JSON.parse(result.result.data.projectResponse.professions) });\n    //             let obj = Object.keys(JSON.parse(result.result.data.projectResponse.professions))\n    //             this.setState({ activeTab: obj[obj.length - 1] });\n    //         }\n    //\n    //         if (!this.state.isProjectEdit) {\n    //             let redirectTo = '';\n    //             if (this.state.project.lastCompletedStep === ProjectStepConst.Step1 && this.state.project.projectType !== ProjectTypeConst.FreeContract)\n    //                 redirectTo = \"/project-post-details?id=\" + this.state.project.projectId;\n    //             else if (this.state.project.lastCompletedStep === ProjectStepConst.Profession)\n    //                 redirectTo = \"/project-post-details?id=\" + this.state.project.projectId;\n    //             else if (this.state.project.lastCompletedStep === ProjectStepConst.Step2 && this.state.project.projectType === ProjectTypeConst.Milestone)\n    //                 redirectTo = \"/project-post-milestone?id=\" + this.state.project.projectId;\n    //             else if (this.state.project.lastCompletedStep === ProjectStepConst.Step2 && this.state.project.projectType === ProjectTypeConst.Hourly)\n    //                 redirectTo = \"/project-post-hourly?id=\" + this.state.project.projectId;\n    //             else if (this.state.project.lastCompletedStep === ProjectStepConst.Step2 && this.state.project.projectType === ProjectTypeConst.FreeContract)\n    //                 redirectTo = \"/project-post-free-contract?id=\" + this.state.project.projectId;\n    //             else if (this.state.project.lastCompletedStep === ProjectStepConst.Step2 && this.state.project.projectType === ProjectTypeConst.OfficeWork)\n    //                 redirectTo = \"/project-post-office?id=\" + this.state.project.projectId;\n    //             else if (this.state.project.lastCompletedStep === ProjectStepConst.Step2 && this.state.project.projectType === ProjectTypeConst.Contest)\n    //                 redirectTo = \"/contest-detail?id=\" + this.state.project.projectId;\n    //             else if (this.state.project.lastCompletedStep === ProjectStepConst.Step3)\n    //                 redirectTo = \"/confirm-project?id=\" + this.state.project.projectId;\n    //\n    //             if (redirectTo !== '')\n    //                 this.props.history.push(redirectTo);\n    //         }\n    //     }\n    // else\n    //     this.props.history.push(\"/project-post\");\n    // }\n  } //#endregion Bind Methods\n  //#region Validation Methods\n\n\n  //#endregion Submit Method\n  render() {\n    const professionList = this.props.projectScopes;\n    const {\n      activeTab,\n      selectedProfession,\n      language\n    } = this.state;\n    const {\n      languageType\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SubHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"card_sec\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bcknd_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-8 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project_post professio_nal professionMobile_query\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }\n    }, \" \", languageType.PROFESSIOANL_AREA, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      className: \"professionMobile_query_lineBreak\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 54\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, languageType.POST_FULL_JOB_TEXT)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex professionFlex_Mobile_query\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"aside_menu list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, professionList.map(profession => /*#__PURE__*/React.createElement(\"li\", {\n      className: activeTab === profession.value ? \"active\" : \"\",\n      onClick: () => this.setState({\n        activeTab: profession.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 27\n      }\n    }, profession.text)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right_content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dev_box post_form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }\n    }, professionList.find(item => item.value === activeTab).subScopes.map(profession => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox mr-5 pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: profession.text,\n      required: \"\",\n      name: profession.text,\n      value: profession.value,\n      onChange: this.handleCheckBoxClick,\n      checked: selectedProfession[activeTab] && selectedProfession[activeTab].findIndex(item => item.value === profession.value) >= 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: profession.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 33\n      }\n    }, profession.text))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"skill_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 23\n      }\n    }, Object.keys(selectedProfession).map((key, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: `profession${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 27\n      }\n    }, selectedProfession[key].map(prof => /*#__PURE__*/React.createElement(\"a\", {\n      key: prof,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 31\n      }\n    }, prof.text, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => this.handleRemoveCategory(prof, key),\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 33\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right save_cancel btnSpaceTop2 NextBtnProjectPostMobileB\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn save_btn\",\n      onClick: this.onPageRedirectHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    }, \" \", languageType.CONTINUE_TEXT, \" \")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n} // export default Profession;\n\n\nfunction mapStateToProps(state) {\n  return {\n    languageType: state.languageReducer.languageType,\n    projectScopes: state.languageReducer.projectScopes\n  };\n}\n\nfunction mapDispatchProps(dispatch) {\n  return {\n    onLangaugeChange: langauge => {\n      dispatch(onReduxLangaugeChange(langauge));\n    }\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(Profession));","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/profession.jsx"],"names":["React","Component","notifications","request","ENDPOINT","getOptions","postOptions","ProjectTypeConst","ProjectStepConst","RightTop","RightBottom","SubHeader","onReduxLangaugeChange","withRouter","connect","Profession","constructor","props","onLangaugeDataChange","language","localStorage","setItem","JSON","stringify","onLangaugeChange","handleCheckBoxClick","e","languageType","selectedProfession","activeTab","state","target","checked","filter","sp","value","setState","length","showError","YOU_SELECT_CATEGORY","Object","entries","k","v","key","val","map","indexOf","YOU_SELECT_CATE_MAX","text","name","push","onPageRedirectHandle","IsValidate","newValuesIndex","keys","item","professions","history","pathname","param","projectId","projectType","result","success","message","PLEASE_SELECT_ONE","handleRemoveCategory","innerValue","outerValue","profession","newProfession","editType","URLSearchParams","location","search","get","isProjectEdit","projectScope","project","componentWillMount","getProjectDetail","data","getItem","langauge","parse","render","professionList","projectScopes","minHeight","PROFESSIOANL_AREA","POST_FULL_JOB_TEXT","find","subScopes","findIndex","index","prof","cursor","CONTINUE_TEXT","mapStateToProps","languageReducer","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport notifications from \"../utils/notifications\";\nimport request from \"../utils/request\";\nimport { ENDPOINT } from \"../utils/endpoint\";\nimport { getOptions, postOptions } from \"../utils/httpConfig\";\nimport { ProjectTypeConst, ProjectStepConst } from \"../utils/projectConst\";\nimport RightTop from \"../components/rightbar/rightTop\";\nimport RightBottom from \"../components/rightbar/rightBottom\";\nimport SubHeader from \"../components/subHeader\";\nimport { onReduxLangaugeChange } from \"./../store/action/action\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n\nclass Profession extends Component {\n  constructor(props) {\n    super(props);\n    var editType =\n      new URLSearchParams(this.props.location.search).get(\"type\") !== null &&\n        new URLSearchParams(this.props.location.search).get(\"type\") !== \"\"\n        ? new URLSearchParams(this.props.location.search).get(\"type\")\n        : \"\";\n    this.state = {\n      isProjectEdit: editType === \"edit\" ? true : false,\n      projectId: new URLSearchParams(this.props.location.search).get(\"id\"),\n      projectType: \"\",\n      projectScope: \"\",\n      activeTab: \"design\",\n      selectedProfession: {},\n      project: {},\n\n    };\n  }\n\n  componentWillMount() {\n    this.getProjectDetail();\n  }\n  componentWillMount() {\n    let data = localStorage.getItem(\"langauge\");\n    let langauge = JSON.parse(data);\n    if (langauge) {\n      this.props.onLangaugeChange(langauge);\n    }\n  }\n  //#region Bind Methods\n  onLangaugeDataChange = (language) => {\n    localStorage.setItem(\"langauge\", JSON.stringify(language));\n    this.props.onLangaugeChange(language);\n  };\n  async getProjectDetail() {\n    // let result = await request(`${ENDPOINT[\"GetProjectDetails\"]}?projectId=` + this.state.projectId, getOptions({}));\n    // if (result.success) {\n    //     if (result.result.data !== null && result.result.data !== \"\") {\n    //         this.setState({ project: result.result.data.projectResponse });\n    //         this.setState({ projectType: result.result.data.projectResponse.projectType });\n    //         this.setState({ projectScope: result.result.data.projectResponse.projectScope });\n    //         if (result.result.data.projectResponse.professions.trim() !== \"\") {\n    //             this.setState({ selectedProfession: JSON.parse(result.result.data.projectResponse.professions) });\n    //             let obj = Object.keys(JSON.parse(result.result.data.projectResponse.professions))\n    //             this.setState({ activeTab: obj[obj.length - 1] });\n    //         }\n    //\n    //         if (!this.state.isProjectEdit) {\n    //             let redirectTo = '';\n    //             if (this.state.project.lastCompletedStep === ProjectStepConst.Step1 && this.state.project.projectType !== ProjectTypeConst.FreeContract)\n    //                 redirectTo = \"/project-post-details?id=\" + this.state.project.projectId;\n    //             else if (this.state.project.lastCompletedStep === ProjectStepConst.Profession)\n    //                 redirectTo = \"/project-post-details?id=\" + this.state.project.projectId;\n    //             else if (this.state.project.lastCompletedStep === ProjectStepConst.Step2 && this.state.project.projectType === ProjectTypeConst.Milestone)\n    //                 redirectTo = \"/project-post-milestone?id=\" + this.state.project.projectId;\n    //             else if (this.state.project.lastCompletedStep === ProjectStepConst.Step2 && this.state.project.projectType === ProjectTypeConst.Hourly)\n    //                 redirectTo = \"/project-post-hourly?id=\" + this.state.project.projectId;\n    //             else if (this.state.project.lastCompletedStep === ProjectStepConst.Step2 && this.state.project.projectType === ProjectTypeConst.FreeContract)\n    //                 redirectTo = \"/project-post-free-contract?id=\" + this.state.project.projectId;\n    //             else if (this.state.project.lastCompletedStep === ProjectStepConst.Step2 && this.state.project.projectType === ProjectTypeConst.OfficeWork)\n    //                 redirectTo = \"/project-post-office?id=\" + this.state.project.projectId;\n    //             else if (this.state.project.lastCompletedStep === ProjectStepConst.Step2 && this.state.project.projectType === ProjectTypeConst.Contest)\n    //                 redirectTo = \"/contest-detail?id=\" + this.state.project.projectId;\n    //             else if (this.state.project.lastCompletedStep === ProjectStepConst.Step3)\n    //                 redirectTo = \"/confirm-project?id=\" + this.state.project.projectId;\n    //\n    //             if (redirectTo !== '')\n    //                 this.props.history.push(redirectTo);\n    //         }\n    //     }\n    // else\n    //     this.props.history.push(\"/project-post\");\n    // }\n  }\n\n  //#endregion Bind Methods\n\n  //#region Validation Methods\n\n  handleCheckBoxClick = (e) => {\n    const { languageType } = this.props;\n    const { selectedProfession, activeTab } = this.state;\n    if (!e.target.checked) {\n      selectedProfession[activeTab] = selectedProfession[activeTab].filter(\n        (sp) => sp.value !== e.target.value\n      );\n      this.setState({ selectedProfession });\n    } else {\n      if (\n        selectedProfession[activeTab] &&\n        selectedProfession[activeTab].length === 3\n      ) {\n        notifications.showError(languageType.YOU_SELECT_CATEGORY);\n        e.target.checked = false;\n      } else if (\n        Object.entries(selectedProfession).filter(([k, v]) => v.length > 0)\n          .length === 2 &&\n        Object.entries(selectedProfession)\n          .filter(([key, val]) => val.length > 0)\n          .map(([key, val]) => key)\n          .indexOf(activeTab) === -1\n      ) {\n        notifications.showError(languageType.YOU_SELECT_CATE_MAX);\n        e.target.checked = false;\n      } else {\n        if (!selectedProfession[activeTab]) {\n          selectedProfession[activeTab] = [{ value: e.target.value, text: e.target.name }];\n        } else {\n          selectedProfession[activeTab].push({ value: e.target.value, text: e.target.name });\n        }\n        this.setState({ selectedProfession });\n      }\n    }\n  };\n\n  //#endregion Validation Methods\n\n  //#region Submit Method\n\n  onPageRedirectHandle = async () => {    \n    let IsValidate = true;\n    const { languageType } = this.props;\n    let newValuesIndex = Object.keys(this.state.selectedProfession);\n    newValuesIndex.map((item) => {\n      if (this.state.selectedProfession[item].length === 0) {\n        IsValidate = false;\n      }\n    });\n\n    if (Object.keys(this.state.selectedProfession).length > 0 && IsValidate) {\n      let professions =\n        JSON.stringify(this.state.selectedProfession) &&\n        this.state.selectedProfession;\n      this.props.history.push({\n        pathname: \"/create-fulltime-Offer\",\n        state: professions,\n      });\n\n      let param = {\n        projectId: this.state.projectId,\n        projectType: this.state.projectType,\n        professions: professions,\n      };\n      let result = await request(\n        ENDPOINT[\"UpdateFreeContractProfessions\"],\n        postOptions(param)\n      );\n      if (result.success)\n        this.props.history.push(\n          \"/project-post-details?id=\" + this.state.projectId\n        );\n      else notifications.showError(result.message);\n    } else {\n      notifications.showError(languageType.PLEASE_SELECT_ONE);\n    }\n  };\n\n  handleRemoveCategory = (innerValue, outerValue) => {\n    let profession = this.state.selectedProfession;\n\n    let newProfession = profession[outerValue].filter(\n      (item) => item.value != innerValue.value\n    );\n    this.setState({\n      selectedProfession: {\n        ...profession,\n        [outerValue]: newProfession,\n      },\n    });\n  };\n  //#endregion Submit Method\n\n  render() {\n    const professionList = this.props.projectScopes;\n    const { activeTab, selectedProfession, language } = this.state;\n    const { languageType } = this.props;\n    return (\n      <>\n        <SubHeader />\n        <section className=\"card_sec\" style={{ minHeight: \"100vh\" }}>\n          <div className=\"bcknd_container\">\n            <div className=\"row\">\n              <div className=\"col-lg-2 col-md-12\"></div>\n              <div className=\"col-lg-8 col-md-12\">\n                <div className=\"project_post professio_nal professionMobile_query\">\n                  <h4>\n                    {\" \"}\n                    {languageType.PROFESSIOANL_AREA} <br className=\"professionMobile_query_lineBreak\" />\n                    <span className=\"sp\">\n                      {languageType.POST_FULL_JOB_TEXT}\n                    </span>\n                  </h4>\n                  <div className=\"d-flex professionFlex_Mobile_query\">\n                    <ul className=\"aside_menu list-unstyled\">\n                      {professionList.map((profession) => (\n                        <li\n                          className={\n                            activeTab === profession.value ? \"active\" : \"\"\n                          }\n                          onClick={() =>\n                            this.setState({ activeTab: profession.value })\n                          }\n                        >\n                          <a>{profession.text}</a>\n                        </li>\n                      ))}\n                    </ul>\n                    <div className=\"right_content\">\n                      <div className=\"dev_box post_form\">\n                        <div className=\"d-flex align-items-center flex-wrap\">\n                          {professionList\n                            .find((item) => item.value === activeTab)\n                            .subScopes.map((profession) => (\n                              <div className=\"custom-control custom-checkbox mr-5 pb-3\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"custom-control-input\"\n                                  id={profession.text}\n                                  required=\"\"\n                                  name={profession.text}\n                                  value={profession.value}\n                                  onChange={this.handleCheckBoxClick}\n                                  checked={\n                                    selectedProfession[activeTab] &&\n                                    selectedProfession[activeTab].findIndex((item) => item.value === profession.value) >= 0\n                                  }\n                                />\n                                <label\n                                  className=\"custom-control-label\"\n                                  htmlFor={profession.text}\n                                >\n                                  {profession.text}\n                                </label>\n                              </div>\n                            ))}\n                        </div>\n                      </div>\n                      <div className=\"skill_name\">\n                        {Object.keys(selectedProfession).map((key, index) => (\n                          <div key={`profession${index}`}>\n                            {selectedProfession[key].map((prof) => (\n                              <a key={prof}>\n                                {prof.text}{\" \"}\n                                <i\n                                  onClick={() =>\n                                    this.handleRemoveCategory(prof, key)\n                                  }\n                                  style={{ cursor: \"pointer\" }}\n                                  className=\"fa fa-close\"\n                                ></i>\n                              </a>\n                            ))}\n                          </div>\n                        ))}\n                      </div>\n                      <div className=\"text-right save_cancel btnSpaceTop2 NextBtnProjectPostMobileB\">\n                        <button\n                          type=\"button\"\n                          className=\"btn save_btn\"\n                          onClick={this.onPageRedirectHandle}\n                        >\n                          {\" \"}\n                          {languageType.CONTINUE_TEXT}{\" \"}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-lg-2 col-md-12\"></div>\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\n// export default Profession;\nfunction mapStateToProps(state) {\n  return {\n    languageType: state.languageReducer.languageType,\n    projectScopes: state.languageReducer.projectScopes\n  };\n}\n\nfunction mapDispatchProps(dispatch) {\n  return {\n    onLangaugeChange: (langauge) => {\n      dispatch(onReduxLangaugeChange(langauge));\n    },\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(Profession));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/project/allprojects/allProjects.jsx\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { onReduxLangaugeChange } from \"../../../store/action/action\";\nimport request from \"../../../utils/request\";\nimport { ENDPOINT } from \"../../../utils/endpoint\";\nimport { getOptions } from \"../../../utils/httpConfig\";\nimport RightTop from \"../../../components/rightbar/rightTop\";\nimport RightBottom from \"../../../components/rightbar/rightBottom\";\nimport CheckboxCard from \"../../../components/checkboxCard/checkboxCard.jsx\";\nimport SubHeader from \"../../../components/subHeader\";\nimport ProjectCardbox from \"./projectCardbox\";\nimport \"./allprojects.scss\";\nimport Skeleton from \"../../../components/skeleton/skeleton\";\nimport SkeletonCardBox from \"../../../components/skeleton/skeletonCardBox/skeletonCardBox\";\nimport Pagination from \"../../../components/pagination\";\nimport ProjectTypeFilter from \"../../../components/project/projectTypeFilter\";\nimport NoDataAvailable from \"../../../shared/error/not-data-available-new\";\nimport { projectPost_updateProjectType as updateProjectType } from \"../../../store/action/Project/projectActions\";\nimport TopFilter from \"./topFilter\";\n\nclass AllProjects extends Component {\n  constructor(props) {\n    var _props$authUser, _props$authUser$freel, _props$authUser2, _props$authUser2$free, _props$authUser3, _props$authUser3$orga;\n\n    super(props);\n\n    this.onLangaugeDataChange = language => {\n      localStorage.setItem(\"langauge\", JSON.stringify(language));\n      this.props.onLangaugeChange(language);\n    };\n\n    this.onCheckboxChangeHandle = (event, type, index, name) => {\n      if (this.state.filter.projectType != name) {\n        this.bindAllProject(\"\", \"\", name.replace(/\\s/g, \"\"));\n      }\n\n      this.setState({\n        filterFlag: true,\n        filter: { ...this.state.filter,\n          projectType: name\n        }\n      });\n    };\n\n    this.onCheckboxChangeHandle12 = (event, type, index, name) => {\n      this.bindAllProject(\"\", \"\", name.replace(/\\s/g, \"\"));\n      let {\n        projectTypes,\n        projectStatuses\n      } = this.state;\n\n      if (type === \"projectTypes\") {\n        projectTypes[index].checked = event.target.checked;\n        this.state.selectedProjectType = \"\";\n        projectTypes.map((element, i) => {\n          if (element.checked) this.state.selectedProjectType += (this.state.selectedProjectType !== \"\" ? \",\" : \"\") + element.title;\n        });\n      }\n\n      if (type === \"projectStatuses\") {\n        projectStatuses[index].checked = event.target.checked;\n        this.state.selectedProjectStatus = \"\";\n        projectStatuses.map((element, i) => {\n          if (element.checked) this.state.selectedProjectStatus += (this.state.selectedProjectStatus !== \"\" ? \",\" : \"\") + element.title;\n        });\n      }\n\n      this.setState({\n        projectTypes,\n        projectStatuses,\n        lastPkEvaluatedTrack: []\n      });\n      let redirectTo = \"\";\n      if (this.state.searchProject !== \"\") redirectTo += \"?searchProject=\" + this.state.searchProject;\n      if (this.state.selectedCategory !== \"\") redirectTo += (redirectTo !== \"\" ? \"&category=\" : \"?category=\") + this.state.selectedCategory;\n      if (this.state.selectedProjectType !== \"\") redirectTo += (redirectTo !== \"\" ? \"&type=\" : \"?type=\") + this.state.selectedProjectType;\n      if (this.state.selectedProjectStatus !== \"\") redirectTo += (redirectTo !== \"\" ? \"&status=\" : \"?status=\") + this.state.selectedProjectStatus;\n      redirectTo += redirectTo === \"\" ? `${this.props.location.pathname}?type=\"\"` : \"\";\n      this.props.history.push(redirectTo);\n    };\n\n    this.handleFilterProject = (value, type) => {\n      this.setState({\n        filter: { ...this.state.filter,\n          [type]: value\n        }\n      });\n\n      if (type === \"projectType\") {\n        this.bindAllProject(\"\", \"\", value.replace(/\\s/g, \"\"), this.state.filter.country, this.state.filter.businessCategory);\n        this.props.updateProjectType(value ? value.replace(/([A-Z]+)/g, \" $1\").replace(/^ /, \"\") : \"All Projects\");\n      }\n\n      if (type === \"country\") {\n        this.bindAllProject(\"\", \"\", this.state.filter.projectType, value, this.state.filter.businessCategory);\n      }\n\n      if (type === \"businessCategory\") {\n        this.bindAllProject(\"\", \"\", this.state.filter.projectType, this.state.filter.country, value);\n      }\n    };\n\n    this.handleSortFilter = value => {\n      var _this$props$authUser, _this$props$authUser$, _this$props$authUser2, _this$props$authUser3;\n\n      this.setState({\n        sortFilter: value\n      });\n      let freelancerData = ((_this$props$authUser = this.props.authUser) === null || _this$props$authUser === void 0 ? void 0 : (_this$props$authUser$ = _this$props$authUser.freelancerAuth) === null || _this$props$authUser$ === void 0 ? void 0 : _this$props$authUser$.individualFreelancerId) ? (_this$props$authUser2 = this.props.authUser) === null || _this$props$authUser2 === void 0 ? void 0 : _this$props$authUser2.freelancerAuth : (_this$props$authUser3 = this.props.authUser) === null || _this$props$authUser3 === void 0 ? void 0 : _this$props$authUser3.organizationAuth;\n      let lookUpData = this.props.lookUpData;\n\n      if (value === \"Basic\") {\n        this.bindAllProject(\"\", \"\", this.state.filter.projectType, this.state.filter.country, this.state.filter.businessCategory, \"\", {\n          highest: false\n        }, \"\", \"\");\n      }\n\n      if (value === \"High Amount\") {\n        this.bindAllProject(\"\", \"\", this.state.filter.projectType, this.state.filter.country, this.state.filter.businessCategory, \"\", {\n          highest: true\n        }, \"\", \"\");\n      }\n\n      if (value === \"End Soon\") {\n        this.bindAllProject(\"\", \"\", this.state.filter.projectType, this.state.filter.country, this.state.filter.businessCategory, true, \"\", \"\", \"\");\n      }\n\n      if (value === \"Matching Skills\") {\n        this.bindAllProject(\"\", \"\", this.state.filter.projectType, this.state.filter.country, this.state.filter.businessCategory, \"\", \"\", freelancerData.skills && freelancerData.skills.map(item => item.skillName).toString(), \"\");\n      }\n\n      if (value === \"Location\") {\n        this.bindAllProject(\"\", \"\", this.state.filter.projectType, this.state.filter.country, this.state.filter.businessCategory, \"\", \"\", \"\", lookUpData.country // freelancerData.location\n        //   ? freelancerData.location\n        //   : `${lookUpData.city},${lookUpData.country}`\n        );\n      }\n    };\n\n    let searchProject = new URLSearchParams(this.props.location.search).get(\"searchProject\");\n    let category = new URLSearchParams(this.props.location.search).get(\"category\");\n\n    let _projectStatuses = new URLSearchParams(this.props.location.search).get(\"status\");\n\n    let projectStatusArray = _projectStatuses !== \"\" && _projectStatuses !== null && _projectStatuses !== undefined ? _projectStatuses.split(\",\") : [];\n    this.state = {\n      searchProject: searchProject !== null && searchProject !== \"\" && searchProject !== undefined ? searchProject : \"\",\n      selectedCategory: category !== null && category !== \"\" && category !== undefined ? category : \"\",\n      selectedProjectType: \"\",\n      selectedProjectStatus: projectStatusArray.length > 0 ? projectStatusArray.join() : \"\",\n      freelancerUserId: ((_props$authUser = props.authUser) === null || _props$authUser === void 0 ? void 0 : (_props$authUser$freel = _props$authUser.freelancerAuth) === null || _props$authUser$freel === void 0 ? void 0 : _props$authUser$freel.individualFreelancerId) ? (_props$authUser2 = props.authUser) === null || _props$authUser2 === void 0 ? void 0 : (_props$authUser2$free = _props$authUser2.freelancerAuth) === null || _props$authUser2$free === void 0 ? void 0 : _props$authUser2$free.individualFreelancerId : (_props$authUser3 = props.authUser) === null || _props$authUser3 === void 0 ? void 0 : (_props$authUser3$orga = _props$authUser3.organizationAuth) === null || _props$authUser3$orga === void 0 ? void 0 : _props$authUser3$orga.organizationId,\n      projectTypes: [],\n      projectStatuses: [],\n      topActiveFilter: \"Basic\",\n      projectData: [],\n      isSkeletonLoading: false,\n      pagination: {\n        pageSize: 10,\n        lastPkEvaluated: \"\",\n        pageNumber: 1,\n        total: 20\n      },\n      lastPkEvaluatedTrack: [],\n      isNextPage: true,\n      isPreviousPage: false,\n      projectType: \"\",\n      searchFlag: true,\n      filterFlag: false,\n      filter: {\n        projectType: \"\",\n        businessCategory: \"\",\n        country: \"\"\n      },\n      sortFilter: \"Basic\"\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps !== this.props) {\n      if (prevProps.location !== this.location) {\n        if (prevProps.location.search !== this.props.location.search) {\n          this.bindProjectTypes();\n        }\n      }\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let category = new URLSearchParams(nextProps.location.search).get(\"category\");\n    let searchProject = new URLSearchParams(nextProps.location.search).get(\"searchProject\");\n    this.state.searchProject = searchProject !== null && searchProject !== \"\" && searchProject !== undefined ? searchProject : \"\";\n    this.state.selectedCategory = category !== null && category !== \"\" && category !== undefined ? category : \"\";\n\n    if (this.state.searchFlag) {\n      (category || searchProject) && this.bindAllProject(\"\", \"\");\n      this.setState({\n        searchFlag: false\n      });\n    }\n  }\n\n  componentWillMount() {\n    let data = localStorage.getItem(\"langauge\");\n    let langauge = JSON.parse(data);\n\n    if (langauge) {\n      this.props.onLangaugeChange(langauge);\n    }\n\n    this.bindProjectTypes();\n    this.bindProjectStatuses();\n    this.bindAllProject(\"\", \"\");\n  } //#region Bind Events\n\n\n  async bindProjectTypes() {\n    /*  debugger */\n    let array = [];\n    let projectTypes = new URLSearchParams(this.props.location.search).get(\"type\");\n    let projectTypeArray = projectTypes !== \"\" && projectTypes !== null && projectTypes !== undefined ? projectTypes.split(\",\") : [];\n    Object.entries(this.props.projectTypes).map((item, index) => {\n      let isChecked = projectTypeArray.includes(item[1]) ? true : false;\n      array.push({\n        name: item[0],\n        title: item[1].text,\n        checked: isChecked\n      });\n      if (isChecked) this.state.selectedProjectType += (this.state.selectedProjectType !== \"\" ? \",\" : \"\") + item[1].text;\n    });\n    this.setState({\n      projectTypes: array\n    }); // this.bindAllProject()\n  }\n\n  async bindProjectStatuses() {\n    let array = [];\n    let projectStatuses = new URLSearchParams(this.props.location.search).get(\"type\");\n    let projectStatusArray = projectStatuses !== \"\" && projectStatuses !== null && projectStatuses !== undefined ? projectStatuses.split(\",\") : [];\n    Object.entries(this.props.projectStatuses).map((item, index) => {\n      let isChecked = projectStatusArray.includes(item[1]) ? true : false;\n      array.push({\n        name: item[0],\n        title: item[1].text,\n        checked: isChecked\n      });\n      if (isChecked) this.state.selectedProjectStatus += (this.state.selectedProjectStatus !== \"\" ? \",\" : \"\") + item[1].text;\n    });\n    this.setState({\n      projectStatuses: array\n    });\n  }\n\n  async bindAllProject(lastPkEvaluated, move, projectType, country, businessCategory, remaining, amount, skills, location) {\n    this.setState({\n      isSkeletonLoading: true,\n      projectData: []\n    });\n    let pageNumber = this.state.pagination.pageNumber;\n\n    if (move === \"next\") {\n      this.setState({\n        pagination: { ...this.state.pagination,\n          pageNumber: this.state.pagination.pageNumber + 1\n        }\n      });\n      pageNumber = pageNumber + 1;\n    } else if (move === \"prev\") {\n      this.setState({\n        pagination: { ...this.state.pagination,\n          pageNumber: this.state.pagination.pageNumber - 1\n        }\n      });\n      pageNumber = pageNumber - 1;\n    }\n\n    let selectedProjectStatus = this.state.selectedProjectStatus !== undefined && this.state.selectedProjectStatus !== null && this.state.selectedProjectStatus !== \"\" ? this.state.selectedProjectStatus : \"\";\n    let queryString = `?projectTypes=${projectType ? projectType : \"\"}&projectStatus=${selectedProjectStatus}&projectScope=${this.state.selectedCategory || businessCategory ? businessCategory : \"\"}&search=${this.state.searchProject}&pageSize=${this.state.pagination.pageSize}&pageNumber=${pageNumber}&country=${country ? country : \"\"}&remaining=${remaining ? true : false}&amount=${amount ? amount.highest ? \"highest\" : \"lowest\" : \"\"}&skills=${skills ? skills : \"\"}&location=${location ? location : \"\"}`;\n    let result = await request(`${ENDPOINT[\"SearchProjects\"]}` + queryString, getOptions({}));\n\n    if (result.success) {\n      var _this$state;\n\n      this.setState({\n        isSkeletonLoading: false,\n        projectData: result.result.entries,\n        pageNumber: result.result.pageNumber,\n        pageSize: result.result.pageSize,\n        pagination: { ...this.state.pagination,\n          total: result.result.total\n        }\n      });\n      let array = result.result && result.result.entries ? result.result.entries : [];\n      array.map((element, i) => {\n        if (element.jobDescription) {\n          element.jobDescription = element.jobDescription.startsWith(\"<p>\") ? element.jobDescription.slice(3) : element.jobDescription;\n          element.jobDescription = element.jobDescription.endsWith(\"</p>\") ? element.jobDescription.slice(0, -4) : element.jobDescription;\n        }\n\n        if (element.hasOwnProperty(\"postDateTime\")) element.postDateTime = moment(element.postDateTime).format(\"DD-MMM-YYYY\");\n        if (element.hasOwnProperty(\"projectAmount\")) element.projectAmount = element.projectAmount === null || element.projectAmount && element.projectAmount.trim() === \"\" ? 0 : parseFloat(element.projectAmount).toFixed(2);\n        if (element.hasOwnProperty(\"expectedCompletionDays\")) element.expectedCompletionDays = element.expectedCompletionDays === null || element.expectedCompletionDays.trim() === \"\" ? \"\" : element.expectedCompletionDays;\n        if (element.hasOwnProperty(\"projectRemainingDays\")) element.projectRemainingDays = element.projectRemainingDays === null || element.projectRemainingDays.trim() === \"\" ? \"\" : element.projectRemainingDays;\n        if (element.hasOwnProperty(\"fromSalary\")) element.fromSalary = (element === null || element === void 0 ? void 0 : element.fromSalary) === null || (element === null || element === void 0 ? void 0 : element.fromSalary.trim()) === \"\" ? 0 : parseFloat(element === null || element === void 0 ? void 0 : element.fromSalary).toFixed(2);\n        if (element.hasOwnProperty(\"toSalary\")) element.toSalary = element.toSalary === null || element.toSalary.trim() === \"\" ? 0 : parseFloat(element.toSalary).toFixed(2);\n        if (element.hasOwnProperty(\"winningAmount\")) element.winningAmount = element.winningAmount === null || element.winningAmount.trim() === \"\" ? 0 : parseFloat(element.winningAmount).toFixed(2);\n        if (element.hasOwnProperty(\"proposalCount\")) element.proposalCount = element.proposalCount === null || element.proposalCount === \"\" ? 0 : element.proposalCount;\n        if (element.hasOwnProperty(\"amountPerDay\")) element.amountPerDay = element.amountPerDay === null || element.amountPerDay.trim() === \"\" ? 0 : parseFloat(element.amountPerDay).toFixed(2);\n        if (element.hasOwnProperty(\"amountPerHour\")) element.amountPerHour = element.amountPerHour === null || element.amountPerHour.trim() === \"\" ? 0 : parseFloat(element.amountPerHour).toFixed(2);\n        if (element.hasOwnProperty(\"maximumWeekHours\")) element.maximumWeekHours = element.maximumWeekHours !== undefined && element.maximumWeekHours !== null && element.maximumWeekHours.trim() !== \"\" ? parseInt(element.maximumWeekHours) : 0;\n      });\n      let lastPkEvaluatedTrackLocal = this === null || this === void 0 ? void 0 : (_this$state = this.state) === null || _this$state === void 0 ? void 0 : _this$state.lastPkEvaluatedTrack;\n\n      if (move === \"next\") {\n        lastPkEvaluatedTrackLocal.push(lastPkEvaluated);\n      } else if (move === \"prev\") {\n        lastPkEvaluatedTrackLocal.pop();\n      }\n\n      this.setState({\n        projectData: array,\n        pagination: { ...this.state.pagination,\n          pageSize: this.state.pagination.pageSize,\n          lastPkEvaluated: result.result.lastPkEvaluated,\n          total: result.result.total\n        },\n        lastPkEvaluatedTrack: lastPkEvaluatedTrackLocal,\n        isNextPage: result.result.isNextPage,\n        isPreviousPage: result.result.isPreviousPage\n      });\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    } else {\n      this.setState({\n        isSkeletonLoading: false\n      });\n    }\n  } //#endregion Bind Events\n  //#region Change Event\n\n\n  /*     remaining,\n    amount,\n    skills,\n    location */\n  render() {\n    let {\n      isSkeletonLoading,\n      projectData,\n      projectTypes,\n      projectStatuses,\n      pagination,\n      lastPkEvaluatedTrack,\n      isNextPage,\n      isPreviousPage,\n      topActiveFilter,\n      filter,\n      filterFlag\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SubHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"card_sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bcknd_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ProjectTypeFilter, {\n      projectTypeFlag: this.state.filter.projectType,\n      onChange: this.onCheckboxChangeHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-6\",\n      style: {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CheckboxCard, {\n      title: \"Status\",\n      data: projectStatuses,\n      type: \"projectStatuses\",\n      onChange: this.onCheckboxChangeHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-8 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"skeletonLoading_mobile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      count: this.state.pagination.pageSize,\n      isSkeletonLoading: isSkeletonLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(SkeletonCardBox, {\n      count: this.state.pagination.pageSize,\n      isSkeletonLoading: isSkeletonLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 17\n      }\n    }), filterFlag ? /*#__PURE__*/React.createElement(\"div\", {\n      hidden: isSkeletonLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TopFilter, Object.assign({\n      filter: filter,\n      hidden: isSkeletonLoading,\n      handleFilterProject: this.handleFilterProject,\n      handleSortFilter: this.handleSortFilter,\n      sortFilter: this.state.sortFilter\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 21\n      }\n    }))) : \"\", projectData && projectData.length > 0 && projectData.map((project, index) => /*#__PURE__*/React.createElement(ProjectCardbox, {\n      key: `cardProject${index}`,\n      selectedProject: project,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 21\n      }\n    })), (projectData === null || projectData === void 0 ? void 0 : projectData.length) > 0 && /*#__PURE__*/React.createElement(Pagination, {\n      isPreviousPage: pagination.pageNumber > 1 ? true : false,\n      isNextPage: pagination.pageNumber * pagination.pageSize < pagination.total ? true : false,\n      lastPkEvaluatedTrack: projectData,\n      pageNumber: pagination.pageNumber,\n      moveBack: () => this.bindAllProject(lastPkEvaluatedTrack[(lastPkEvaluatedTrack === null || lastPkEvaluatedTrack === void 0 ? void 0 : lastPkEvaluatedTrack.length) - 2], \"prev\"),\n      moveNext: () => this.bindAllProject(pagination.lastPkEvaluated, \"next\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 19\n      }\n    }), !isSkeletonLoading && (projectData === null || projectData === void 0 ? void 0 : projectData.length) <= 0 && /*#__PURE__*/React.createElement(NoDataAvailable, {\n      title: \"Sorry no project exist yet !\",\n      buttonText: \"Click here to see more\",\n      path: \"/project-post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(RightTop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(RightBottom, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    languageType: state.languageReducer.languageType,\n    language: state.languageReducer.language,\n    activeRoute: state.routeStore.activeRoute,\n    projectTypes: state.languageReducer.projectTypes,\n    authUser: state.authReducer,\n    projectStatuses: state.languageReducer.projectStatuses,\n    lookUpData: state.lookUp.lookUpData\n  };\n}\n\nfunction mapDispatchProps(dispatch) {\n  return {\n    onLangaugeChange: langauge => {\n      dispatch(onReduxLangaugeChange(langauge));\n    },\n    updateProjectType: type => {\n      dispatch(updateProjectType(type));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchProps)(AllProjects);","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/project/allprojects/allProjects.jsx"],"names":["React","Component","moment","connect","onReduxLangaugeChange","request","ENDPOINT","getOptions","RightTop","RightBottom","CheckboxCard","SubHeader","ProjectCardbox","Skeleton","SkeletonCardBox","Pagination","ProjectTypeFilter","NoDataAvailable","projectPost_updateProjectType","updateProjectType","TopFilter","AllProjects","constructor","props","onLangaugeDataChange","language","localStorage","setItem","JSON","stringify","onLangaugeChange","onCheckboxChangeHandle","event","type","index","name","state","filter","projectType","bindAllProject","replace","setState","filterFlag","onCheckboxChangeHandle12","projectTypes","projectStatuses","checked","target","selectedProjectType","map","element","i","title","selectedProjectStatus","lastPkEvaluatedTrack","redirectTo","searchProject","selectedCategory","location","pathname","history","push","handleFilterProject","value","country","businessCategory","handleSortFilter","sortFilter","freelancerData","authUser","freelancerAuth","individualFreelancerId","organizationAuth","lookUpData","highest","skills","item","skillName","toString","URLSearchParams","search","get","category","projectStatusArray","undefined","split","length","join","freelancerUserId","organizationId","topActiveFilter","projectData","isSkeletonLoading","pagination","pageSize","lastPkEvaluated","pageNumber","total","isNextPage","isPreviousPage","searchFlag","componentDidUpdate","prevProps","prevState","snapshot","bindProjectTypes","componentWillReceiveProps","nextProps","componentWillMount","data","getItem","langauge","parse","bindProjectStatuses","array","projectTypeArray","Object","entries","isChecked","includes","text","move","remaining","amount","queryString","result","success","jobDescription","startsWith","slice","endsWith","hasOwnProperty","postDateTime","format","projectAmount","trim","parseFloat","toFixed","expectedCompletionDays","projectRemainingDays","fromSalary","toSalary","winningAmount","proposalCount","amountPerDay","amountPerHour","maximumWeekHours","parseInt","lastPkEvaluatedTrackLocal","pop","window","scrollTo","top","behavior","render","display","project","mapStateToProps","languageType","languageReducer","activeRoute","routeStore","authReducer","lookUp","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { onReduxLangaugeChange } from \"../../../store/action/action\";\nimport request from \"../../../utils/request\";\nimport { ENDPOINT } from \"../../../utils/endpoint\";\nimport { getOptions } from \"../../../utils/httpConfig\";\nimport RightTop from \"../../../components/rightbar/rightTop\";\nimport RightBottom from \"../../../components/rightbar/rightBottom\";\nimport CheckboxCard from \"../../../components/checkboxCard/checkboxCard.jsx\";\nimport SubHeader from \"../../../components/subHeader\";\nimport ProjectCardbox from \"./projectCardbox\";\nimport \"./allprojects.scss\";\nimport Skeleton from \"../../../components/skeleton/skeleton\";\nimport SkeletonCardBox from \"../../../components/skeleton/skeletonCardBox/skeletonCardBox\"; \nimport Pagination from \"../../../components/pagination\";\nimport ProjectTypeFilter from \"../../../components/project/projectTypeFilter\";\nimport NoDataAvailable from \"../../../shared/error/not-data-available-new\";\nimport { projectPost_updateProjectType as updateProjectType } from \"../../../store/action/Project/projectActions\";\nimport TopFilter from \"./topFilter\";\nclass AllProjects extends Component {\n  constructor(props) {\n    super(props);\n\n    let searchProject = new URLSearchParams(this.props.location.search).get(\n      \"searchProject\"\n    );\n    let category = new URLSearchParams(this.props.location.search).get(\n      \"category\"\n    );\n    let projectStatuses = new URLSearchParams(this.props.location.search).get(\n      \"status\"\n    );\n    let projectStatusArray =\n      projectStatuses !== \"\" &&\n      projectStatuses !== null &&\n      projectStatuses !== undefined\n        ? projectStatuses.split(\",\")\n        : [];\n\n    this.state = {\n      searchProject:\n        searchProject !== null &&\n        searchProject !== \"\" &&\n        searchProject !== undefined\n          ? searchProject\n          : \"\",\n      selectedCategory:\n        category !== null && category !== \"\" && category !== undefined\n          ? category\n          : \"\",\n      selectedProjectType: \"\",\n      selectedProjectStatus:\n        projectStatusArray.length > 0 ? projectStatusArray.join() : \"\",\n      freelancerUserId: props.authUser?.freelancerAuth?.individualFreelancerId\n        ? props.authUser?.freelancerAuth?.individualFreelancerId\n        : props.authUser?.organizationAuth?.organizationId,\n      projectTypes: [],\n      projectStatuses: [],\n      topActiveFilter: \"Basic\",\n      projectData: [],\n      isSkeletonLoading: false,\n      pagination: {\n        pageSize: 10,\n        lastPkEvaluated: \"\",\n        pageNumber: 1,\n        total: 20,\n      },\n      lastPkEvaluatedTrack: [],\n      isNextPage: true,\n      isPreviousPage: false,\n      projectType: \"\",\n      searchFlag: true,\n      filterFlag: false,\n      filter: {\n        projectType: \"\",\n        businessCategory: \"\",\n        country: \"\",\n      },\n      sortFilter: \"Basic\",\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps !== this.props) {\n      if (prevProps.location !== this.location) {\n        if (prevProps.location.search !== this.props.location.search) {\n          this.bindProjectTypes();\n        }\n      }\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let category = new URLSearchParams(nextProps.location.search).get(\n      \"category\"\n    );\n    let searchProject = new URLSearchParams(nextProps.location.search).get(\n      \"searchProject\"\n    );\n    this.state.searchProject =\n      searchProject !== null &&\n      searchProject !== \"\" &&\n      searchProject !== undefined\n        ? searchProject\n        : \"\";\n    this.state.selectedCategory =\n      category !== null && category !== \"\" && category !== undefined\n        ? category\n        : \"\";\n\n    if (this.state.searchFlag) {\n      (category || searchProject) && this.bindAllProject(\"\", \"\");\n      this.setState({ searchFlag: false });\n    }\n  }\n\n  componentWillMount() {\n    let data = localStorage.getItem(\"langauge\");\n    let langauge = JSON.parse(data);\n    if (langauge) {\n      this.props.onLangaugeChange(langauge);\n    }\n    this.bindProjectTypes();\n    this.bindProjectStatuses();\n    this.bindAllProject(\"\", \"\");\n  }\n\n  //#region Bind Events\n  async bindProjectTypes() {\n    /*  debugger */\n    let array = [];\n\n    let projectTypes = new URLSearchParams(this.props.location.search).get(\n      \"type\"\n    );\n\n    let projectTypeArray =\n      projectTypes !== \"\" && projectTypes !== null && projectTypes !== undefined\n        ? projectTypes.split(\",\")\n        : [];\n\n    Object.entries(this.props.projectTypes).map((item, index) => {\n      let isChecked = projectTypeArray.includes(item[1]) ? true : false;\n      array.push({\n        name: item[0],\n        title: item[1].text,\n        checked: isChecked,\n      });\n      if (isChecked)\n        this.state.selectedProjectType +=\n          (this.state.selectedProjectType !== \"\" ? \",\" : \"\") + item[1].text;\n    });\n    this.setState({ projectTypes: array });\n    // this.bindAllProject()\n  }\n\n  async bindProjectStatuses() {\n    let array = [];\n\n    let projectStatuses = new URLSearchParams(this.props.location.search).get(\n      \"type\"\n    );\n\n    let projectStatusArray =\n      projectStatuses !== \"\" &&\n      projectStatuses !== null &&\n      projectStatuses !== undefined\n        ? projectStatuses.split(\",\")\n        : [];\n\n    Object.entries(this.props.projectStatuses).map((item, index) => {\n      let isChecked = projectStatusArray.includes(item[1]) ? true : false;\n      array.push({\n        name: item[0],\n        title: item[1].text,\n        checked: isChecked,\n      });\n      if (isChecked)\n        this.state.selectedProjectStatus +=\n          (this.state.selectedProjectStatus !== \"\" ? \",\" : \"\") + item[1].text;\n    });\n    this.setState({ projectStatuses: array });\n  }\n\n  async bindAllProject(\n    lastPkEvaluated,\n    move,\n    projectType,\n    country,\n    businessCategory,\n    remaining,\n    amount,\n    skills,\n    location\n  ) {\n    this.setState({ isSkeletonLoading: true, projectData: [] });\n\n    let pageNumber = this.state.pagination.pageNumber;\n    if (move === \"next\") {\n      this.setState({\n        pagination: {\n          ...this.state.pagination,\n          pageNumber: this.state.pagination.pageNumber + 1,\n        },\n      });\n      pageNumber = pageNumber + 1;\n    } else if (move === \"prev\") {\n      this.setState({\n        pagination: {\n          ...this.state.pagination,\n          pageNumber: this.state.pagination.pageNumber - 1,\n        },\n      });\n      pageNumber = pageNumber - 1;\n    }\n    let selectedProjectStatus =\n      this.state.selectedProjectStatus !== undefined &&\n      this.state.selectedProjectStatus !== null &&\n      this.state.selectedProjectStatus !== \"\"\n        ? this.state.selectedProjectStatus\n        : \"\";\n\n    let queryString = `?projectTypes=${\n      projectType ? projectType : \"\"\n    }&projectStatus=${selectedProjectStatus}&projectScope=${\n      this.state.selectedCategory || businessCategory ? businessCategory : \"\"\n    }&search=${this.state.searchProject}&pageSize=${\n      this.state.pagination.pageSize\n    }&pageNumber=${pageNumber}&country=${country ? country : \"\"}&remaining=${\n      remaining ? true : false\n    }&amount=${amount ? (amount.highest ? \"highest\" : \"lowest\") : \"\"}&skills=${\n      skills ? skills : \"\"\n    }&location=${location ? location : \"\"}`;\n\n    let result = await request(\n      `${ENDPOINT[\"SearchProjects\"]}` + queryString,\n      getOptions({})\n    );\n    if (result.success) {\n      this.setState({\n        isSkeletonLoading: false,\n        projectData: result.result.entries,\n        pageNumber: result.result.pageNumber,\n        pageSize: result.result.pageSize,\n        pagination: { ...this.state.pagination, total: result.result.total },\n      });\n      let array =\n        result.result && result.result.entries ? result.result.entries : [];\n\n      array.map((element, i) => {\n        if (element.jobDescription) {\n          element.jobDescription = element.jobDescription.startsWith(\"<p>\")\n            ? element.jobDescription.slice(3)\n            : element.jobDescription;\n          element.jobDescription = element.jobDescription.endsWith(\"</p>\")\n            ? element.jobDescription.slice(0, -4)\n            : element.jobDescription;\n        }\n\n        if (element.hasOwnProperty(\"postDateTime\"))\n          element.postDateTime = moment(element.postDateTime).format(\n            \"DD-MMM-YYYY\"\n          );\n        if (element.hasOwnProperty(\"projectAmount\"))\n          element.projectAmount =\n            element.projectAmount === null ||\n            (element.projectAmount && element.projectAmount.trim() === \"\")\n              ? 0\n              : parseFloat(element.projectAmount).toFixed(2);\n        if (element.hasOwnProperty(\"expectedCompletionDays\"))\n          element.expectedCompletionDays =\n            element.expectedCompletionDays === null ||\n            element.expectedCompletionDays.trim() === \"\"\n              ? \"\"\n              : element.expectedCompletionDays;\n        if (element.hasOwnProperty(\"projectRemainingDays\"))\n          element.projectRemainingDays =\n            element.projectRemainingDays === null ||\n            element.projectRemainingDays.trim() === \"\"\n              ? \"\"\n              : element.projectRemainingDays;\n        if (element.hasOwnProperty(\"fromSalary\"))\n          element.fromSalary =\n            element?.fromSalary === null || element?.fromSalary.trim() === \"\"\n              ? 0\n              : parseFloat(element?.fromSalary).toFixed(2);\n        if (element.hasOwnProperty(\"toSalary\"))\n          element.toSalary =\n            element.toSalary === null || element.toSalary.trim() === \"\"\n              ? 0\n              : parseFloat(element.toSalary).toFixed(2);\n        if (element.hasOwnProperty(\"winningAmount\"))\n          element.winningAmount =\n            element.winningAmount === null ||\n            element.winningAmount.trim() === \"\"\n              ? 0\n              : parseFloat(element.winningAmount).toFixed(2);\n        if (element.hasOwnProperty(\"proposalCount\"))\n          element.proposalCount =\n            element.proposalCount === null || element.proposalCount === \"\"\n              ? 0\n              : element.proposalCount;\n        if (element.hasOwnProperty(\"amountPerDay\"))\n          element.amountPerDay =\n            element.amountPerDay === null || element.amountPerDay.trim() === \"\"\n              ? 0\n              : parseFloat(element.amountPerDay).toFixed(2);\n        if (element.hasOwnProperty(\"amountPerHour\"))\n          element.amountPerHour =\n            element.amountPerHour === null ||\n            element.amountPerHour.trim() === \"\"\n              ? 0\n              : parseFloat(element.amountPerHour).toFixed(2);\n\n        if (element.hasOwnProperty(\"maximumWeekHours\"))\n          element.maximumWeekHours =\n            element.maximumWeekHours !== undefined &&\n            element.maximumWeekHours !== null &&\n            element.maximumWeekHours.trim() !== \"\"\n              ? parseInt(element.maximumWeekHours)\n              : 0;\n      });\n\n      let lastPkEvaluatedTrackLocal = this?.state?.lastPkEvaluatedTrack;\n      if (move === \"next\") {\n        lastPkEvaluatedTrackLocal.push(lastPkEvaluated);\n      } else if (move === \"prev\") {\n        lastPkEvaluatedTrackLocal.pop();\n      }\n      this.setState({\n        projectData: array,\n        pagination: {\n          ...this.state.pagination,\n          pageSize: this.state.pagination.pageSize,\n          lastPkEvaluated: result.result.lastPkEvaluated,\n          total: result.result.total,\n        },\n        lastPkEvaluatedTrack: lastPkEvaluatedTrackLocal,\n        isNextPage: result.result.isNextPage,\n        isPreviousPage: result.result.isPreviousPage,\n      });\n\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\",\n      });\n    } else {\n      this.setState({ isSkeletonLoading: false });\n    }\n  }\n  //#endregion Bind Events\n\n  //#region Change Event\n  onLangaugeDataChange = (language) => {\n    localStorage.setItem(\"langauge\", JSON.stringify(language));\n    this.props.onLangaugeChange(language);\n  };\n  onCheckboxChangeHandle = (event, type, index, name) => {\n    if (this.state.filter.projectType != name) {\n      this.bindAllProject(\"\", \"\", name.replace(/\\s/g, \"\"));\n    }\n\n    this.setState({\n      filterFlag: true,\n      filter: { ...this.state.filter, projectType: name },\n    });\n  };\n\n  onCheckboxChangeHandle12 = (event, type, index, name) => {\n    this.bindAllProject(\"\", \"\", name.replace(/\\s/g, \"\"));\n    let { projectTypes, projectStatuses } = this.state;\n    if (type === \"projectTypes\") {\n      projectTypes[index].checked = event.target.checked;\n      this.state.selectedProjectType = \"\";\n      projectTypes.map((element, i) => {\n        if (element.checked)\n          this.state.selectedProjectType +=\n            (this.state.selectedProjectType !== \"\" ? \",\" : \"\") + element.title;\n      });\n    }\n    if (type === \"projectStatuses\") {\n      projectStatuses[index].checked = event.target.checked;\n      this.state.selectedProjectStatus = \"\";\n      projectStatuses.map((element, i) => {\n        if (element.checked)\n          this.state.selectedProjectStatus +=\n            (this.state.selectedProjectStatus !== \"\" ? \",\" : \"\") +\n            element.title;\n      });\n    }\n    this.setState({ projectTypes, projectStatuses, lastPkEvaluatedTrack: [] });\n\n    let redirectTo = \"\";\n    if (this.state.searchProject !== \"\")\n      redirectTo += \"?searchProject=\" + this.state.searchProject;\n    if (this.state.selectedCategory !== \"\")\n      redirectTo +=\n        (redirectTo !== \"\" ? \"&category=\" : \"?category=\") +\n        this.state.selectedCategory;\n    if (this.state.selectedProjectType !== \"\")\n      redirectTo +=\n        (redirectTo !== \"\" ? \"&type=\" : \"?type=\") +\n        this.state.selectedProjectType;\n    if (this.state.selectedProjectStatus !== \"\")\n      redirectTo +=\n        (redirectTo !== \"\" ? \"&status=\" : \"?status=\") +\n        this.state.selectedProjectStatus;\n\n    redirectTo +=\n      redirectTo === \"\" ? `${this.props.location.pathname}?type=\"\"` : \"\";\n    this.props.history.push(redirectTo);\n  };\n  //#endregion Change Event\n\n  handleFilterProject = (value, type) => {\n    this.setState({ filter: { ...this.state.filter, [type]: value } });\n    if (type === \"projectType\") {\n      this.bindAllProject(\n        \"\",\n        \"\",\n        value.replace(/\\s/g, \"\"),\n        this.state.filter.country,\n        this.state.filter.businessCategory\n      );\n      this.props.updateProjectType(\n        value\n          ? value.replace(/([A-Z]+)/g, \" $1\").replace(/^ /, \"\")\n          : \"All Projects\"\n      );\n    }\n    if (type === \"country\") {\n      this.bindAllProject(\n        \"\",\n        \"\",\n        this.state.filter.projectType,\n        value,\n        this.state.filter.businessCategory\n      );\n    }\n    if (type === \"businessCategory\") {\n      this.bindAllProject(\n        \"\",\n        \"\",\n        this.state.filter.projectType,\n        this.state.filter.country,\n        value\n      );\n    }\n  };\n\n  handleSortFilter = (value) => {\n    this.setState({ sortFilter: value });\n\n    let freelancerData = this.props.authUser?.freelancerAuth\n      ?.individualFreelancerId\n      ? this.props.authUser?.freelancerAuth\n      : this.props.authUser?.organizationAuth;\n    let lookUpData = this.props.lookUpData;\n    if (value === \"Basic\") {\n      this.bindAllProject(\n        \"\",\n        \"\",\n        this.state.filter.projectType,\n        this.state.filter.country,\n        this.state.filter.businessCategory,\n        \"\",\n        { highest: false },\n        \"\",\n        \"\"\n      );\n    }\n    if (value === \"High Amount\") {\n      this.bindAllProject(\n        \"\",\n        \"\",\n        this.state.filter.projectType,\n        this.state.filter.country,\n        this.state.filter.businessCategory,\n        \"\",\n        { highest: true },\n        \"\",\n        \"\"\n      );\n    }\n    if (value === \"End Soon\") {\n      this.bindAllProject(\n        \"\",\n        \"\",\n        this.state.filter.projectType,\n        this.state.filter.country,\n        this.state.filter.businessCategory,\n        true,\n        \"\",\n        \"\",\n        \"\"\n      );\n    }\n    if (value === \"Matching Skills\") {\n      this.bindAllProject(\n        \"\",\n        \"\",\n        this.state.filter.projectType,\n        this.state.filter.country,\n        this.state.filter.businessCategory,\n        \"\",\n        \"\",\n        freelancerData.skills &&\n          freelancerData.skills.map((item) => item.skillName).toString(),\n        \"\"\n      );\n    }\n    if (value === \"Location\") {\n      this.bindAllProject(\n        \"\",\n        \"\",\n        this.state.filter.projectType,\n        this.state.filter.country,\n        this.state.filter.businessCategory,\n        \"\",\n        \"\",\n        \"\",\n        lookUpData.country\n        // freelancerData.location\n        //   ? freelancerData.location\n        //   : `${lookUpData.city},${lookUpData.country}`\n      );\n    }\n  };\n\n  /*     remaining,\n    amount,\n    skills,\n    location */\n  render() {\n    let {\n      isSkeletonLoading,\n      projectData,\n      projectTypes,\n      projectStatuses,\n      pagination,\n      lastPkEvaluatedTrack,\n      isNextPage,\n      isPreviousPage,\n      topActiveFilter,\n      filter,\n      filterFlag,\n    } = this.state;\n    return (\n      <>\n        <SubHeader />\n        <section className=\"card_sec\">\n          <div className=\"bcknd_container\">\n            <div className=\"row\">\n              <div className=\"col-lg-2 col-md-12\">\n                <div className=\"row\">\n                  <div className=\"col-lg-12 col-md-6\">\n                    <ProjectTypeFilter\n                      projectTypeFlag={this.state.filter.projectType}\n                      onChange={this.onCheckboxChangeHandle}\n                    />\n                  </div>\n                  <div\n                    className=\"col-lg-12 col-md-6\"\n                    style={{ display: \"none\" }}\n                  >\n                    <CheckboxCard\n                      title=\"Status\"\n                      data={projectStatuses}\n                      type=\"projectStatuses\"\n                      onChange={this.onCheckboxChangeHandle}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-lg-8 col-md-12\">\n                <div className=\"skeletonLoading_mobile\">\n                <Skeleton\n                  count={this.state.pagination.pageSize}\n                  isSkeletonLoading={isSkeletonLoading}\n                />\n                </div>\n                \n                <SkeletonCardBox\n                  count={this.state.pagination.pageSize}\n                  isSkeletonLoading={isSkeletonLoading} \n                />\n\n                {filterFlag ? (\n                  <div hidden={isSkeletonLoading}>\n                    <TopFilter\n                      filter={filter}\n                      hidden={isSkeletonLoading}\n                      handleFilterProject={this.handleFilterProject}\n                      handleSortFilter={this.handleSortFilter}\n                      sortFilter={this.state.sortFilter}\n                      {...this.props}\n                    />\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                {projectData &&\n                  projectData.length > 0 &&\n                  projectData.map((project, index) => (\n                    <ProjectCardbox\n                      key={`cardProject${index}`}\n                      selectedProject={project}\n                      index={index}\n                    />\n                  ))}\n\n                {projectData?.length > 0 && (\n                  <Pagination\n                    isPreviousPage={pagination.pageNumber > 1 ? true : false}\n                    isNextPage={\n                      pagination.pageNumber * pagination.pageSize <\n                      pagination.total\n                        ? true\n                        : false\n                    }\n                    lastPkEvaluatedTrack={projectData}\n                    pageNumber={pagination.pageNumber}\n                    moveBack={() =>\n                      this.bindAllProject(\n                        lastPkEvaluatedTrack[lastPkEvaluatedTrack?.length - 2],\n                        \"prev\"\n                      )\n                    }\n                    moveNext={() =>\n                      this.bindAllProject(pagination.lastPkEvaluated, \"next\")\n                    }\n                  />\n                )}\n\n                {!isSkeletonLoading && projectData?.length <= 0 && (\n                  <NoDataAvailable\n                    title=\"Sorry no project exist yet !\"\n                    buttonText=\"Click here to see more\"\n                    path=\"/project-post\"\n                  />\n                )}\n              </div>\n              <div className=\"col-lg-2 col-md-12\">\n                <RightTop />\n                <RightBottom />\n              </div>\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    languageType: state.languageReducer.languageType,\n    language: state.languageReducer.language,\n    activeRoute: state.routeStore.activeRoute,\n    projectTypes: state.languageReducer.projectTypes,\n    authUser: state.authReducer,\n    projectStatuses: state.languageReducer.projectStatuses,\n    lookUpData: state.lookUp.lookUpData,\n  };\n}\n\nfunction mapDispatchProps(dispatch) {\n  return {\n    onLangaugeChange: (langauge) => {\n      dispatch(onReduxLangaugeChange(langauge));\n    },\n    updateProjectType: (type) => {\n      dispatch(updateProjectType(type));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchProps)(AllProjects);\n"]},"metadata":{},"sourceType":"module"}
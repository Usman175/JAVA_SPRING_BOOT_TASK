{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/project/projectpost/projectpostdetail/projectPostDetails.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Dropzone from \"react-dropzone\";\nimport { v4 } from \"uuid\";\nimport { Redirect } from \"react-router-dom\";\nimport { onReduxRouteChange, onReduxProjectConfirmationDataHandle } from \"../../../../store/action/action\";\nimport { getProjectDetails } from \"../../../../store/middlewares/Project\";\nimport request from \"../../../../utils/request\";\nimport { ENDPOINT } from \"../../../../utils/endpoint\";\nimport { postMultipartFile, getOptions, postOptions } from \"../../../../utils/httpConfig\";\nimport { ProjectTypeConst } from \"../../../../utils/projectConst\";\nimport RightTop from \"../../../../components/rightbar/rightTop\";\nimport RightBottom from \"../../../../components/rightbar/rightBottom\";\nimport notifications from \"../../../../utils/notifications\";\nimport Heading from \"../../../../components/postProject/heading\";\nimport Label from \"../../../../components/postProject/label\";\nimport { projectPost_getProjectDetails, projectPost_jobTitleChanged, projectPost_jobDescriptionChanged, projectPost_addDocument, projectPost_removeDocument } from \"../../../../store/action/Project/projectActions\";\nimport FileList from \"../../../../components/postProject/fileList\";\nimport FileUploadLoader from \"../../../../components/loader/fileUpload\";\nimport SubHeader from \"../../../../components/subHeader\";\nimport \"./projectpostdetail.scss\";\n\nclass ProjectPostDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNext = async () => {\n      if (this.handleValidation()) {\n        var _JSON$parse, _JSON$parse$user;\n\n        this.setState({\n          loading: true\n        });\n        const {\n          jobTitle,\n          jobDescription,\n          documents\n        } = this.props.projectPost;\n        const projectId = this.state.projectId; // TODO: regionId, country ???\n\n        let regionId = (_JSON$parse = JSON.parse(localStorage.MY_AUTH)) === null || _JSON$parse === void 0 ? void 0 : (_JSON$parse$user = _JSON$parse.user) === null || _JSON$parse$user === void 0 ? void 0 : _JSON$parse$user.regionId;\n        let result = await request(ENDPOINT[\"UpdateProjectSecondStep\"], postOptions({\n          projectId,\n          jobTitle,\n          jobDescription,\n          address: this.props.lookUp.lookUpData.isp,\n          city: this.props.lookUp.lookUpData.city,\n          regionId: regionId,\n          country: this.props.lookUp.lookUpData.country,\n          documents: documents.length > 0 ? documents.map(item => item.documentPath) : [],\n          lastCompletedStep: \"\"\n        }));\n\n        if (result.success) {\n          const redirectTo = this.getNextPageLink();\n          var newRedirectTo = this.state.editType !== \"edit\" ? redirectTo : \"/confirm-project?id=\" + this.state.projectId;\n          this.props.history.push(newRedirectTo);\n        } else {\n          notifications.showError(result.message);\n        }\n\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.handleBack = () => {\n      this.props.history.push(`/project-post?id=${this.state.projectId}`);\n    };\n\n    this.handleFileDelete = documentId => {\n      this.props.removeDocument(documentId);\n    };\n\n    this.onDropHandler = async (acceptedFiles, fileRejections) => {\n      const {\n        documents\n      } = this.props.projectPost;\n      this.setState({\n        errorMessage: {\n          documents: \"\"\n        },\n        uploading: true\n      });\n\n      if (acceptedFiles.length > 0 && documents.length + acceptedFiles.length <= 5) {\n        let formData = new FormData();\n        const file = acceptedFiles[0];\n        formData.append(\"files\", file);\n        request(`${ENDPOINT[\"UploadFiles\"]}?folderName=projects`, postMultipartFile(formData)).then(res => {\n          // console.log(res)\n          if (res && res[0]) {\n            var _res$, _res$2, _res$3;\n\n            this.props.addDocument({\n              id: v4(),\n              name: file.name,\n              size: file.size,\n              url: (_res$ = res[0]) === null || _res$ === void 0 ? void 0 : _res$.s3Key,\n              documentName: (_res$2 = res[0]) === null || _res$2 === void 0 ? void 0 : _res$2.s3Key,\n              documentPath: (_res$3 = res[0]) === null || _res$3 === void 0 ? void 0 : _res$3.s3Key,\n              documentExtension: file.name.split(\".\")[file.name.split(\".\").length - 1]\n            });\n            this.setState({\n              uploading: false\n            });\n          }\n        }, err => {\n          notifications.showError((err === null || err === void 0 ? void 0 : err.message) || \"Error uploading File.\");\n        });\n      } else if (documents.length + acceptedFiles.length > 5) {\n        this.setState({\n          errorMessage: {\n            documents: \"You can only upload up to 5 files\"\n          }\n        });\n      }\n\n      if (fileRejections.length > 0) {\n        this.setState({\n          errorMessage: {\n            documents: fileRejections[0].errors[0].code === \"file-too-large\" ? \"Each file should be only 100 MB\" : \"You can only upload up to 5 files\"\n          }\n        });\n      }\n    };\n\n    const _projectId = new URLSearchParams(this.props.location.search).get(\"id\");\n\n    this.state = {\n      projectId: _projectId,\n      projectType: this.props.projectPost.projectType,\n      errorMessage: {},\n      loading: false,\n      uploading: false\n    };\n  }\n\n  handleValidation() {\n    const {\n      projectPost: {\n        jobTitle,\n        jobDescription\n      },\n      languageType\n    } = this.props;\n    let errorMessage = {};\n    let formIsValid = true;\n\n    if (!jobTitle.trim().length) {\n      formIsValid = false;\n      errorMessage[\"title\"] = languageType.REQUIRED_MESSAGE;\n    } else if (!jobDescription.trim().length) {\n      formIsValid = false;\n      errorMessage[\"description\"] = languageType.REQUIRED_MESSAGE;\n    }\n\n    this.setState({\n      errorMessage: errorMessage\n    });\n    return formIsValid;\n  }\n\n  getNextPageLink() {\n    let redirectTo = \"\";\n    const projectId = this.state.projectId;\n    const projectType = this.state.projectType;\n    if (projectType === ProjectTypeConst[3].value) redirectTo = \"/project-post-milestone?id=\" + projectId;else if (projectType === ProjectTypeConst[2].value) redirectTo = \"/project-post-hourly?id=\" + projectId;else if (projectType === ProjectTypeConst[1].value) redirectTo = \"/project-post-free-contract?id=\" + projectId;else if (projectType === ProjectTypeConst[4].value) redirectTo = \"/project-post-office?id=\" + projectId;else if (projectType === ProjectTypeConst[0].value) redirectTo = \"/contest-detail?id=\" + projectId;else redirectTo = \"/project-post-hourly?id=\" + projectId;\n    return redirectTo;\n  }\n\n  //#endregion File Upload Methods\n  // get detail of if existing set in props\n  componentDidMount() {\n    this.findProjectIfExist();\n  }\n\n  async findProjectIfExist() {\n    let projectId = new URLSearchParams(this.props.location.search).get(\"id\");\n\n    if (projectId && !this.props.projectPost.jobTitle) {\n      let result = await request(`${ENDPOINT[\"GetProject\"]}?projectId=${projectId}`, getOptions({}));\n\n      if (result.success) {\n        this.props.jobTitleChanged(result.result.jobTitle);\n        this.props.jobDescriptionChanged(result.result.jobDescription);\n\n        if (result.result.documents && result.result.documents.length > 0) {\n          result.result.documents.map(item => {\n            this.props.addDocument({\n              id: v4(),\n              name: item,\n              size: item,\n              url: item,\n              documentName: item,\n              documentPath: item,\n              documentExtension: item.split(\".\")[item.split(\".\").length - 1]\n            });\n          });\n        }\n\n        this.setState({\n          projectType: result.result.projectType\n        });\n      }\n    }\n  }\n\n  render() {\n    if (!this.state.projectId) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 14\n        }\n      });\n    }\n\n    const {\n      uploading\n    } = this.state;\n    const {\n      projectPost,\n      jobTitleChanged,\n      jobDescriptionChanged,\n      lookUp\n    } = this.props;\n    let {\n      languageType,\n      languageReducer\n    } = this.props; // console.log(projectPost,\"projectPost\")\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SubHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"card_sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bcknd_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-8 col-lg-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project_post milestone_form post_milston\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-content\",\n      id: \"pills-tabContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-pane fade show active\",\n      id: \"pills-home\",\n      role: \"tabpanel\",\n      \"aria-labelledby\": \"pills-home-tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      heading: `Post project - ${this.state.projectType === \"FreeContract\" ? \"Free Contract\" : this.state.projectType == \"OfficeWork\" ? \"Office Work\" : this.state.projectType}`,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/projetDetail.svg\",\n      color: \"#333333\",\n      fontSize: \"26px\",\n      fontWeight: \"600\",\n      fontFamily: \"Raleway\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"post_form border-top-0 pt-0\",\n      onSubmit: e => e.preventDefault(),\n      style: {\n        paddingLeft: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: languageType.JOB_TITLE,\n      compulsory: true,\n      prefixBoxValid: this.state.errorMessage[\"description\"] ? false : true,\n      prefixBoxInValid: this.state.errorMessage[\"description\"] ? true : false,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/skills.png\",\n      color: \"#333333\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control h3\",\n      maxLength: \"100\",\n      value: projectPost.jobTitle,\n      onChange: event => jobTitleChanged(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 31\n      }\n    }, this.state.errorMessage.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: languageType.JOB_DESCRIPTION,\n      compulsory: true,\n      prefixBoxValid: this.state.errorMessage[\"title\"] ? false : true,\n      prefixBoxInValid: this.state.errorMessage[\"title\"] ? true : false,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/jobDetail.svg\",\n      color: \"#333333\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"textarea\",\n      rows: \"5\",\n      className: \"form-control\",\n      value: projectPost.jobDescription,\n      onChange: event => jobDescriptionChanged(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 31\n      }\n    }, this.state.errorMessage.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: languageType.ADDITIONAL_PROJECT_FILES,\n      prefixBoxValid: true,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/jobDocuments.svg\",\n      color: \"#333333\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 31\n      }\n    }, (projectPost.documents || []).map(file => /*#__PURE__*/React.createElement(FileList, {\n      key: file.id,\n      name: file.name,\n      size: file.size,\n      id: file.id,\n      handleFileDelete: this.handleFileDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 35\n      }\n    }))), \" \", uploading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      style: {\n        marginBottom: \"-1px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-spinner fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 35\n      }\n    }), \" \", \"Uploading file please wait\") : \"\", /*#__PURE__*/React.createElement(FileUploadLoader, {\n      title: \" Uploading new file...\",\n      show: uploading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Dropzone, {\n      maxFiles: 5,\n      maxSize: 10240000,\n      multiple: true,\n      onDrop: this.onDropHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 31\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      className: \"skill_btn d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 39\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary bg-light text-dark font-weight-bold px-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 39\n      }\n    }, \" \", languageType.UPLOAD_YOURFILE, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ml-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 39\n      }\n    }, languageType.DRAG_YOUR_FILE)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted my-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 37\n      }\n    }, languageType.MAX_FILE_SIZE, \" \\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 39\n      }\n    }, \"\\xA0\\xA0100 MB\\xA0\\xA0\"), \"\\xA0 \", languageType.EACH_TEXT), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger my-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 37\n      }\n    }, this.state.errorMessage.documents)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submission-buttons save_cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      type: \"submit\",\n      onClick: this.handleBack,\n      className: \"back-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn contest-project-post-btn\",\n      onClick: this.handleNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 31\n      }\n    }, \"Next\", \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/arrowDirection.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 33\n      }\n    }), this.state.loading ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-spinner fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 35\n      }\n    }) : \"\"))))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    languageType: state.languageReducer.languageType,\n    language: state.languageReducer.language,\n    activeRoute: state.routeStore.activeRoute,\n    projectPost: state.projectStore.projectPost,\n    lookUp: state.lookUp\n  };\n}\n\nfunction mapDispatchProps(dispatch) {\n  return {\n    onRouteChange: activeRoute => {\n      dispatch(onReduxRouteChange(activeRoute));\n    },\n    onProjectConfirmationDataHandle: data => {\n      dispatch(onReduxProjectConfirmationDataHandle(data));\n    },\n    onGetProjectDetail: data => {\n      dispatch(getProjectDetails(data));\n    },\n    getProjectDetails: projectId => {\n      dispatch(projectPost_getProjectDetails(projectId));\n    },\n    jobTitleChanged: jobTitle => {\n      dispatch(projectPost_jobTitleChanged(jobTitle));\n    },\n    jobDescriptionChanged: jobDescription => {\n      dispatch(projectPost_jobDescriptionChanged(jobDescription));\n    },\n    addDocument: document => {\n      dispatch(projectPost_addDocument(document));\n    },\n    removeDocument: documentId => {\n      dispatch(projectPost_removeDocument(documentId));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchProps)(ProjectPostDetails);","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/project/projectpost/projectpostdetail/projectPostDetails.jsx"],"names":["React","Component","connect","Dropzone","v4","Redirect","onReduxRouteChange","onReduxProjectConfirmationDataHandle","getProjectDetails","request","ENDPOINT","postMultipartFile","getOptions","postOptions","ProjectTypeConst","RightTop","RightBottom","notifications","Heading","Label","projectPost_getProjectDetails","projectPost_jobTitleChanged","projectPost_jobDescriptionChanged","projectPost_addDocument","projectPost_removeDocument","FileList","FileUploadLoader","SubHeader","ProjectPostDetails","constructor","props","handleNext","handleValidation","setState","loading","jobTitle","jobDescription","documents","projectPost","projectId","state","regionId","JSON","parse","localStorage","MY_AUTH","user","result","address","lookUp","lookUpData","isp","city","country","length","map","item","documentPath","lastCompletedStep","success","redirectTo","getNextPageLink","newRedirectTo","editType","history","push","showError","message","handleBack","handleFileDelete","documentId","removeDocument","onDropHandler","acceptedFiles","fileRejections","errorMessage","uploading","formData","FormData","file","append","then","res","addDocument","id","name","size","url","s3Key","documentName","documentExtension","split","err","errors","code","URLSearchParams","location","search","get","projectType","languageType","formIsValid","trim","REQUIRED_MESSAGE","value","componentDidMount","findProjectIfExist","jobTitleChanged","jobDescriptionChanged","render","languageReducer","e","preventDefault","paddingLeft","JOB_TITLE","event","target","title","JOB_DESCRIPTION","description","ADDITIONAL_PROJECT_FILES","marginBottom","getRootProps","getInputProps","UPLOAD_YOURFILE","DRAG_YOUR_FILE","MAX_FILE_SIZE","EACH_TEXT","mapStateToProps","language","activeRoute","routeStore","projectStore","mapDispatchProps","dispatch","onRouteChange","onProjectConfirmationDataHandle","data","onGetProjectDetail","document"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Dropzone from \"react-dropzone\";\nimport { v4 } from \"uuid\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  onReduxRouteChange,\n  onReduxProjectConfirmationDataHandle,\n} from \"../../../../store/action/action\";\nimport { getProjectDetails } from \"../../../../store/middlewares/Project\";\nimport request from \"../../../../utils/request\";\nimport { ENDPOINT } from \"../../../../utils/endpoint\";\nimport {\n  postMultipartFile,\n  getOptions,\n  postOptions,\n} from \"../../../../utils/httpConfig\";\nimport { ProjectTypeConst } from \"../../../../utils/projectConst\";\nimport RightTop from \"../../../../components/rightbar/rightTop\";\nimport RightBottom from \"../../../../components/rightbar/rightBottom\";\nimport notifications from \"../../../../utils/notifications\";\nimport Heading from \"../../../../components/postProject/heading\";\nimport Label from \"../../../../components/postProject/label\";\nimport {\n  projectPost_getProjectDetails,\n  projectPost_jobTitleChanged,\n  projectPost_jobDescriptionChanged,\n  projectPost_addDocument,\n  projectPost_removeDocument,\n} from \"../../../../store/action/Project/projectActions\";\nimport FileList from \"../../../../components/postProject/fileList\";\nimport FileUploadLoader from \"../../../../components/loader/fileUpload\";\nimport SubHeader from \"../../../../components/subHeader\";\nimport \"./projectpostdetail.scss\";\nclass ProjectPostDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    const projectId = new URLSearchParams(this.props.location.search).get(\"id\");\n\n    this.state = {\n      projectId: projectId,\n      projectType: this.props.projectPost.projectType,\n      errorMessage: {},\n      loading: false,\n      uploading: false,\n    };\n  }\n\n  handleValidation() {\n    const {\n      projectPost: { jobTitle, jobDescription },\n      languageType,\n    } = this.props;\n    let errorMessage = {};\n    let formIsValid = true;\n\n    if (!jobTitle.trim().length) {\n      formIsValid = false;\n      errorMessage[\"title\"] = languageType.REQUIRED_MESSAGE;\n    } else if (!jobDescription.trim().length) {\n      formIsValid = false;\n      errorMessage[\"description\"] = languageType.REQUIRED_MESSAGE;\n    }\n\n    this.setState({ errorMessage: errorMessage });\n\n    return formIsValid;\n  }\n\n  getNextPageLink() {\n    let redirectTo = \"\";\n    const projectId = this.state.projectId;\n    const projectType = this.state.projectType;\n\n    if (projectType === ProjectTypeConst[3].value)\n      redirectTo = \"/project-post-milestone?id=\" + projectId;\n    else if (projectType === ProjectTypeConst[2].value)\n      redirectTo = \"/project-post-hourly?id=\" + projectId;\n    else if (projectType === ProjectTypeConst[1].value)\n      redirectTo = \"/project-post-free-contract?id=\" + projectId;\n    else if (projectType === ProjectTypeConst[4].value)\n      redirectTo = \"/project-post-office?id=\" + projectId;\n    else if (projectType === ProjectTypeConst[0].value)\n      redirectTo = \"/contest-detail?id=\" + projectId;\n    else redirectTo = \"/project-post-hourly?id=\" + projectId;\n\n    return redirectTo;\n  }\n\n  handleNext = async () => {\n    if (this.handleValidation()) {\n      this.setState({ loading: true });\n      const { jobTitle, jobDescription, documents } = this.props.projectPost;\n      const projectId = this.state.projectId;\n      // TODO: regionId, country ???\n      let regionId = JSON.parse(localStorage.MY_AUTH)?.user?.regionId;\n      let result = await request(\n        ENDPOINT[\"UpdateProjectSecondStep\"],\n        postOptions({\n          projectId,\n          jobTitle,\n          jobDescription,\n          address: this.props.lookUp.lookUpData.isp,\n          city: this.props.lookUp.lookUpData.city,\n          regionId: regionId,\n          country: this.props.lookUp.lookUpData.country,\n          documents:\n            documents.length > 0\n              ? documents.map((item) => item.documentPath)\n              : [],\n          lastCompletedStep: \"\",\n        })\n      );\n\n      if (result.success) {\n        const redirectTo = this.getNextPageLink();\n        var newRedirectTo =\n          this.state.editType !== \"edit\"\n            ? redirectTo\n            : \"/confirm-project?id=\" + this.state.projectId;\n        this.props.history.push(newRedirectTo);\n      } else {\n        notifications.showError(result.message);\n      }\n      this.setState({ loading: false });\n    }\n  };\n\n  handleBack = () => {\n    this.props.history.push(`/project-post?id=${this.state.projectId}`);\n  };\n\n  //#region File Upload Methods\n  handleFileDelete = (documentId) => {\n    this.props.removeDocument(documentId);\n  };\n\n  onDropHandler = async (acceptedFiles, fileRejections) => {\n    const { documents } = this.props.projectPost;\n\n    this.setState({\n      errorMessage: {\n        documents: \"\",\n      },\n      uploading: true,\n    });\n\n    if (\n      acceptedFiles.length > 0 &&\n      documents.length + acceptedFiles.length <= 5\n    ) {\n      let formData = new FormData();\n      const file = acceptedFiles[0];\n      formData.append(\"files\", file);\n\n      request(\n        `${ENDPOINT[\"UploadFiles\"]}?folderName=projects`,\n        postMultipartFile(formData)\n      ).then(\n        (res) => {\n          // console.log(res)\n          if (res && res[0]) {\n            this.props.addDocument({\n              id: v4(),\n              name: file.name,\n              size: file.size,\n              url: res[0]?.s3Key,\n              documentName: res[0]?.s3Key,\n              documentPath: res[0]?.s3Key,\n              documentExtension:\n                file.name.split(\".\")[file.name.split(\".\").length - 1],\n            });\n            this.setState({ uploading: false });\n          }\n        },\n        (err) => {\n          notifications.showError(err?.message || \"Error uploading File.\");\n        }\n      );\n    } else if (documents.length + acceptedFiles.length > 5) {\n      this.setState({\n        errorMessage: {\n          documents: \"You can only upload up to 5 files\",\n        },\n      });\n    }\n\n    if (fileRejections.length > 0) {\n      this.setState({\n        errorMessage: {\n          documents:\n            fileRejections[0].errors[0].code === \"file-too-large\"\n              ? \"Each file should be only 100 MB\"\n              : \"You can only upload up to 5 files\",\n        },\n      });\n    }\n  };\n  //#endregion File Upload Methods\n\n  // get detail of if existing set in props\n\n  componentDidMount() {\n    this.findProjectIfExist();\n  }\n  async findProjectIfExist() {\n    let projectId = new URLSearchParams(this.props.location.search).get(\"id\");\n    if (projectId && !this.props.projectPost.jobTitle) {\n      let result = await request(\n        `${ENDPOINT[\"GetProject\"]}?projectId=${projectId}`,\n        getOptions({})\n      );\n      if (result.success) {\n        this.props.jobTitleChanged(result.result.jobTitle);\n        this.props.jobDescriptionChanged(result.result.jobDescription);\n        if(result.result.documents && result.result.documents.length>0){\n          result.result.documents.map((item)=>{\n          this.props.addDocument({\n            id: v4(),\n            name: item,\n            size:item,\n            url: item,\n            documentName: item,\n            documentPath: item,\n            documentExtension:\n            item.split(\".\")[item.split(\".\").length - 1],\n          });\n        })\n        }\n        this.setState({ projectType: result.result.projectType });\n      }\n    }\n  }\n  render() {\n    if (!this.state.projectId) {\n      return <Redirect to=\"/\" />;\n    }\n    const { uploading } = this.state;\n    const { projectPost, jobTitleChanged, jobDescriptionChanged, lookUp } =\n      this.props;\n    let { languageType, languageReducer } = this.props;\n    // console.log(projectPost,\"projectPost\")\n    return (\n      <>\n        <SubHeader />\n        <section className=\"card_sec\">\n          <div className=\"bcknd_container\">\n            <div className=\"row\">\n              <div className=\"col-lg-2 col-md-12\"></div>\n              <div className=\"col-xl-8 col-lg-12 col-md-12\">\n                <div className=\"project_post milestone_form post_milston\">\n                  <div className=\"tab-content\" id=\"pills-tabContent\">\n                    <div\n                      className=\"tab-pane fade show active\"\n                      id=\"pills-home\"\n                      role=\"tabpanel\"\n                      aria-labelledby=\"pills-home-tab\"\n                    >\n                      <Heading\n                        heading={`Post project - ${\n                          this.state.projectType === \"FreeContract\"\n                            ? \"Free Contract\"\n                            : this.state.projectType == \"OfficeWork\"\n                            ? \"Office Work\"\n                            : this.state.projectType\n                        }`}\n                        icon={\n                          \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/projetDetail.svg\"\n                        }\n                        color=\"#333333\"\n                        fontSize=\"26px\"\n                        fontWeight=\"600\"\n                        fontFamily=\"Raleway\"\n                      />\n\n                      <form\n                        className=\"post_form border-top-0 pt-0\"\n                        onSubmit={(e) => e.preventDefault()}\n                        style={{ paddingLeft: \"0px\" }}\n                      >\n                        <div className=\"row \">\n                          <div className=\"col-lg-12\">\n                            <div className=\"form-group\">\n                              <Label\n                                title={languageType.JOB_TITLE}\n                                compulsory={true}\n                                prefixBoxValid={\n                                  this.state.errorMessage[\"description\"]\n                                    ? false\n                                    : true\n                                }\n                                prefixBoxInValid={\n                                  this.state.errorMessage[\"description\"]\n                                    ? true\n                                    : false\n                                }\n                                icon={\n                                  \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/skills.png\"\n                                }\n                                color=\"#333333\"\n                              />\n\n                              <input\n                                type=\"text\"\n                                className=\"form-control h3\"\n                                maxLength=\"100\"\n                                value={projectPost.jobTitle}\n                                onChange={(event) =>\n                                  jobTitleChanged(event.target.value)\n                                }\n                              />\n\n                              <p className=\"text-danger\">\n                                {this.state.errorMessage.title}\n                              </p>\n                            </div>\n\n                            <div className=\"form-group\">\n                              <Label\n                                title={languageType.JOB_DESCRIPTION}\n                                compulsory={true}\n                                prefixBoxValid={\n                                  this.state.errorMessage[\"title\"]\n                                    ? false\n                                    : true\n                                }\n                                prefixBoxInValid={\n                                  this.state.errorMessage[\"title\"]\n                                    ? true\n                                    : false\n                                }\n                                icon={\n                                  \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/jobDetail.svg\"\n                                }\n                                color=\"#333333\"\n                              />\n\n                              <textarea\n                                name=\"textarea\"\n                                rows=\"5\"\n                                className=\"form-control\"\n                                value={projectPost.jobDescription}\n                                onChange={(event) =>\n                                  jobDescriptionChanged(event.target.value)\n                                }\n                              ></textarea>\n\n                              <p className=\"text-danger\">\n                                {this.state.errorMessage.description}\n                              </p>\n                            </div>\n\n                            <div className=\"form-group\">\n                              <Label\n                                title={languageType.ADDITIONAL_PROJECT_FILES}\n                                prefixBoxValid={true}\n                                icon={\n                                  \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/jobDocuments.svg\"\n                                }\n                                color=\"#333333\"\n                              ></Label>\n                              <div className=\"d-flex flex-wrap\">\n                                {(projectPost.documents || []).map((file) => (\n                                  <FileList\n                                    key={file.id}\n                                    name={file.name}\n                                    size={file.size}\n                                    id={file.id}\n                                    handleFileDelete={this.handleFileDelete}\n                                  />\n                                ))}\n                              </div>{\" \"}\n                              {uploading ? (\n                                <div\n                                  className=\"form-group\"\n                                  style={{ marginBottom: \"-1px\" }}\n                                >\n                                  <i className=\"fa fa-spinner fa-spin\"></i>{\" \"}\n                                  Uploading file please wait\n                                </div>\n                              ) : (\n                                \"\"\n                              )}\n                              <FileUploadLoader\n                                title={\" Uploading new file...\"}\n                                show={uploading}\n                              />\n                              <Dropzone\n                                maxFiles={5}\n                                maxSize={10240000}\n                                multiple\n                                onDrop={this.onDropHandler}\n                              >\n                                {({ getRootProps, getInputProps }) => (\n                                  <>\n                                    <div\n                                      {...getRootProps()}\n                                      className=\"skill_btn d-flex align-items-center\"\n                                    >\n                                      <input {...getInputProps()} />\n                                      <button\n                                        type=\"button\"\n                                        className=\"btn btn-secondary bg-light text-dark font-weight-bold px-5\"\n                                      >\n                                        {\" \"}\n                                        {languageType.UPLOAD_YOURFILE}{\" \"}\n                                      </button>\n                                      <p className=\"ml-5\">\n                                        {languageType.DRAG_YOUR_FILE}\n                                      </p>\n                                    </div>\n                                    <p className=\"text-muted my-1\">\n                                      {languageType.MAX_FILE_SIZE} &nbsp;&nbsp;\n                                      <span className=\"font-weight-bold\">\n                                        &nbsp;&nbsp;100 MB&nbsp;&nbsp;\n                                      </span>\n                                      &nbsp; {languageType.EACH_TEXT}\n                                    </p>\n                                    <p className=\"text-danger my-1\">\n                                      {this.state.errorMessage.documents}\n                                    </p>\n                                  </>\n                                )}\n                              </Dropzone>\n                            </div>\n\n                            <div className=\"submission-buttons save_cancel\">\n                              <div\n                                type=\"submit\"\n                                onClick={this.handleBack}\n                                className=\"back-button\"\n                              >\n                                <i className=\"fa fa-angle-left\"></i>\n                              </div>\n\n                              <button\n                                type=\"button\"\n                                className=\"btn contest-project-post-btn\"\n                                onClick={this.handleNext}\n                              >\n                                Next{\" \"}\n                                <img\n                                  src={\n                                    \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/arrowDirection.svg\"\n                                  }\n                                />\n                                {this.state.loading ? (\n                                  <i className=\"fa fa-spinner fa-spin\"></i>\n                                ) : (\n                                  \"\"\n                                )}\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-lg-2 col-md-12\"></div>\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    languageType: state.languageReducer.languageType,\n    language: state.languageReducer.language,\n    activeRoute: state.routeStore.activeRoute,\n\n    projectPost: state.projectStore.projectPost,\n    lookUp: state.lookUp,\n  };\n}\n\nfunction mapDispatchProps(dispatch) {\n  return {\n    onRouteChange: (activeRoute) => {\n      dispatch(onReduxRouteChange(activeRoute));\n    },\n    onProjectConfirmationDataHandle: (data) => {\n      dispatch(onReduxProjectConfirmationDataHandle(data));\n    },\n    onGetProjectDetail: (data) => {\n      dispatch(getProjectDetails(data));\n    },\n    getProjectDetails: (projectId) => {\n      dispatch(projectPost_getProjectDetails(projectId));\n    },\n    jobTitleChanged: (jobTitle) => {\n      dispatch(projectPost_jobTitleChanged(jobTitle));\n    },\n    jobDescriptionChanged: (jobDescription) => {\n      dispatch(projectPost_jobDescriptionChanged(jobDescription));\n    },\n    addDocument: (document) => {\n      dispatch(projectPost_addDocument(document));\n    },\n    removeDocument: (documentId) => {\n      dispatch(projectPost_removeDocument(documentId));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchProps)(ProjectPostDetails);\n"]},"metadata":{},"sourceType":"module"}
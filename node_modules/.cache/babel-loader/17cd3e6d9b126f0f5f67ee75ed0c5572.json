{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/freelancer/createFreelancer/resumeRegister.js\";\nimport React, { Component } from \"react\";\nimport DropdownList from \"../../../components/dropdowns/dropdownList\";\nimport v4 from \"uuid\";\nimport { CountryList } from \"../../../utils/countrylist\";\nimport { isNumeric, isValidString } from \"../../../utils/validationConfig\";\nimport notifications from \"../../../utils/notifications\";\nimport FileUploadLoader from \"../../../components/loader/fileUpload\";\nimport Heading from \"../../../components/freelancerCreation/heading\";\nimport Label from \"../../../components/postProject/label\";\nimport Skeleton from \"../../../components/skeleton/skeleton\";\nimport { connect } from \"react-redux\";\nimport { GetSpecificYearsList } from \"../../../utils/years\";\nimport request from \"../../../utils/request\";\nimport { ENDPOINT } from \"../../../utils/endpoint\";\nimport { uploadImage, deleteImage } from \"../../../services/uploadImages\";\nimport { getOptions, postMultipartFile, postOptions } from \"../../../utils/httpConfig\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport \"./createFreelancer.scss\";\n\nclass ResumeRegister extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setFileUploading = flag => {\n      this.setState({\n        uploading: flag\n      });\n    };\n\n    this.handleDeleteImage = async key => {\n      if (key.slice(0, 5) != \"https\") {\n        await deleteImage(key);\n      }\n    };\n\n    this.onSubmitProfessionalArea = async () => {\n      if (this.onResumeValidation()) {\n        let {\n          selfIntroduction,\n          wishedWorkingConditionCountry,\n          wishedWorkingConditionCity,\n          wishedWorkingConditionAreaOfWork,\n          wishedWorkingConditionFromSalary,\n          wishedWorkingConditionToSalary\n        } = this.state;\n        /* hhhhhhhhhhhhhhhh */\n\n        this.setState({\n          loading: true\n        });\n        let CertificateArray = [];\n        this.state.certifications.map(item => {\n          if (item.yearIssued && item.certificate || item.level || item.issuedBy) {\n            let object = {\n              instruction: \"\",\n              type: \"Certificate\",\n              yearStart: item.yearIssued.toString(),\n              yearEnd: item.yearIssued.toString(),\n              qualification: \"\",\n              studyDepartment: \"\",\n              schoolName: \"\",\n              companyName: \"\",\n              workDepartment: \"\",\n              dutyOfWork: \"\",\n              status: \"\",\n              certificate: item.certificate,\n              certificateFile: item.certificateFile,\n              level: item.level,\n              issuedBy: item.issuedBy\n            };\n            CertificateArray.push(object);\n          }\n        });\n        let EmploymentArray = [];\n        this.state.employments.map(item => {\n          if (item.fromYear && item.toYear && item.company || item.department || item.dutyOfWork || item.status) {\n            let object = {\n              instruction: \"\",\n              type: \"Employment\",\n              yearStart: item.fromYear.toString(),\n              yearEnd: item.toYear.toString(),\n              qualification: \"\",\n              studyDepartment: \"\",\n              schoolName: \"\",\n              companyName: item.company,\n              workDepartment: item.department,\n              dutyOfWork: item.dutyOfWork,\n              status: item.status,\n              certificate: \"\",\n              level: \"\",\n              issuedBy: \"\"\n            };\n            EmploymentArray.push(object);\n          }\n        });\n        let EducationArray = [];\n        this.state.educations.map(item => {\n          if (item.fromYear && item.toYear || item.areaOfStudy || item.qualification || item.shoolName) {\n            let object = {\n              instruction: \"\",\n              type: \"Education\",\n              yearStart: item.fromYear.toString(),\n              yearEnd: item.toYear.toString(),\n              qualification: item.qualification,\n              studyDepartment: item.areaOfStudy,\n              schoolName: item.shoolName,\n              companyName: \"\",\n              workDepartment: \"\",\n              dutyOfWork: \"\",\n              status: \"\",\n              certificate: \"\",\n              level: \"\",\n              issuedBy: \"\"\n            };\n            EducationArray.push(object);\n          }\n        });\n        let param = {\n          individualFreelancerId: this.props.userId,\n          userResumes: [...EducationArray, ...CertificateArray, ...EmploymentArray],\n          selfIntroduction: selfIntroduction,\n          wishedWorkingCondition: {\n            wishedCountry: wishedWorkingConditionCountry,\n            wishedCity: wishedWorkingConditionCity,\n            areaOfWork: wishedWorkingConditionAreaOfWork,\n            wishedMinSalary: wishedWorkingConditionFromSalary,\n            wishedMaxSalary: wishedWorkingConditionToSalary\n          }\n        };\n        let result = await request(ENDPOINT[\"UpdateFreelancerResume\"], postOptions(param));\n\n        if (result.success) {\n          this.props.handleNext(\"FreelancerProfileConfirmation\");\n          localStorage.setItem(\"IndividaulFreelancerRegistrationInfo\", JSON.stringify({\n            step: \"FreelancerProfileConfirmation\",\n            userId: result.result.individualFreelancerId\n          }));\n          window.scrollTo({\n            top: \"0\",\n            behavior: \"smooth\"\n          });\n          notifications.showSuccess(\"Congratulation! you have successfully registered your resume!\");\n        } else notifications.showError(result.message || \"Error! while update your resume, Try again\");\n      }\n    };\n\n    this.getFreelancerDetail = async () => {\n      if (this.props.userId) {\n        this.setState({\n          isSkeletonLoading: true\n        });\n        let result = await request(`${ENDPOINT[\"GetIndividualFreelancer\"]}?individualFreelancerId=${this.props.userId}`, getOptions());\n\n        if (result.success && result.result) {\n          if (result.result.wishedWorkingCondition) {\n            this.setState({\n              selfIntroduction: result.result.selfIntroduction,\n              wishedWorkingConditionCountry: result.result.wishedWorkingCondition.wishedCountry,\n              wishedWorkingConditionCity: result.result.wishedWorkingCondition.wishedCity,\n              wishedWorkingConditionAreaOfWork: result.result.wishedWorkingCondition.areaOfWork,\n              wishedWorkingConditionFromSalary: result.result.wishedWorkingCondition.wishedMinSalary,\n              wishedWorkingConditionToSalary: result.result.wishedWorkingCondition.wishedMaxSalary\n            });\n          }\n\n          this.setState({\n            isSkeletonLoading: false\n          });\n\n          if (result.result.userResumes && result.result.userResumes.length > 0) {\n            let certificatesArray = [];\n            let EducationsArray = [];\n            let employmentArray = [];\n            result.result.userResumes.map(item => {\n              if (item.type === \"Certificate\") {\n                certificatesArray.push({\n                  id: v4(),\n                  yearIssued: item.yearStart || item.yearEnd,\n                  certificate: item.certificate,\n                  level: item.level,\n                  issuedBy: item.issuedBy,\n                  certificateFile: item.certificateFile\n                });\n              }\n\n              if (item.type === \"Employment\") {\n                employmentArray.push({\n                  id: v4(),\n                  fromYear: item.yearStart,\n                  toYear: item.yearEnd,\n                  company: item.companyName,\n                  department: item.workDepartment,\n                  dutyOfWork: item.dutyOfWork,\n                  status: item.status\n                });\n              }\n\n              if (item.type === \"Education\") {\n                EducationsArray.push({\n                  id: v4(),\n                  fromYear: item.yearStart,\n                  toYear: item.yearEnd,\n                  areaOfStudy: item.studyDepartment,\n                  qualification: item.qualification,\n                  shoolName: item.schoolName\n                });\n              }\n            });\n\n            if (certificatesArray.length > 0) {\n              this.setState({\n                certifications: certificatesArray\n              });\n            }\n\n            if (EducationsArray.length > 0) {\n              this.setState({\n                educations: EducationsArray\n              });\n            }\n\n            if (employmentArray.length > 0) {\n              this.setState({\n                employments: employmentArray\n              });\n            }\n          }\n          /* userResumes: [{instruction: \"\", type: \"Education\", yearStart: \"1981\", yearEnd: \"1985\",…},…]\n          0: {instruction */\n          // console.log(result,\"result\")\n\n\n          if (result.result.wishedWorkingCondition) {\n            setTimeout(() => {\n              if (this.state.countries && this.state.countries.length > 0) {\n                let countryId = this.state.countries.find(item => item.name === result.result.wishedWorkingCondition.wishedCountry);\n\n                if (countryId) {\n                  this.bindCities(countryId.id);\n                  this.setState({\n                    wishedWorkingConditionCity: result.result.wishedWorkingCondition.wishedCity\n                  });\n                }\n              }\n            }, 1000);\n          }\n        } else {\n          this.setState({\n            isSkeletonLoading: false\n          });\n        }\n      }\n      /* printable */\n\n\n      if (this.props.printable) {\n        this.handlePrintAble();\n      }\n    };\n\n    this.bindCountry = async () => {\n      let array = [];\n      let result = await request(`${ENDPOINT[\"GeneralSettings\"]}?settingName=Countries`, getOptions({}));\n\n      if (result.success) {\n        if (result.result.data.length > 0) {\n          for (let index = 0; index < result.result.data[0].data.length; index++) {\n            const element = result.result.data[0].data[index];\n            array.push({\n              id: element.id,\n              name: element.name\n            });\n          }\n\n          this.setState({\n            countries: array\n          });\n        } else {\n          alert(\"No Country\");\n        }\n      } else {\n        alert(\"No Country\");\n      }\n    };\n\n    this.bindCities = async countryId => {\n      let array = [];\n      let result = await request(`${ENDPOINT[\"GeneralSettings\"]}?settingName=city_country_` + countryId, getOptions({}));\n\n      if (result.success) {\n        if (result.result.data.length > 0) {\n          for (let index = 0; index < result.result.data[0].data.length; index++) {\n            const element = result.result.data[0].data[index];\n            array.push({\n              id: element.id,\n              name: element.name\n            });\n          }\n\n          this.setState({\n            cities: array\n          });\n        } else {\n          alert(\"No City\");\n        }\n      } else {\n        alert(\"No City\");\n      }\n    };\n\n    this.handlePrintAble = () => {\n      /* printable-area */\n      var printContents = document.getElementById(\"printable-area\").innerHTML;\n      var originalContents = document.body.innerHTML;\n      document.body.innerHTML = printContents;\n      window.print();\n      document.body.innerHTML = originalContents; // html2canvas(document.querySelector(\".printable-area\"), {\n      //   logging: true,\n      //   letterRendering: 1,\n      //   allowTaint: false,\n      //   useCORS: true,\n      // }).then((canvas) => {\n      //   var imgData = canvas.toDataURL(\"image/jpeg\", 1);\n      //   var pdf = new jsPDF(\"p\", \"mm\", \"a4\");\n      //   var pageWidth = pdf.internal.pageSize.getWidth() - 22;\n      //   var pageHeight = pdf.internal.pageSize.getHeight() - 22;\n      //   var imageWidth = canvas.width;\n      //   var imageHeight = canvas.height;\n      //   var ratio =\n      //     imageWidth / imageHeight >= pageWidth / pageHeight\n      //       ? pageWidth / imageWidth\n      //       : pageHeight / imageHeight;\n      //   pdf.addImage(\n      //     imgData,\n      //     \"JPEG\",\n      //     10,\n      //     10,\n      //     imageWidth * ratio,\n      //     imageHeight * ratio\n      //   );\n      //   pdf.save(\"resume.pdf\");\n      // });\n    };\n\n    this.state = {\n      certifications: [],\n      languageProficiency: [],\n      portfolio: [],\n      certifications: [],\n      educations: [],\n      employments: [],\n      employmentHistory: [],\n      selfIntroduction: \"\",\n      languageTests: [],\n      wouldLikeToGetJobProposal: false,\n      countryList: CountryList,\n      errorMessage: {},\n      loading: false,\n      cities: [],\n      countries: [],\n      programmingLanguage: [{\n        id: v4(),\n        language: \"\",\n        proficiency: \"\"\n      }],\n      isSkeletonLoading: false,\n      wishedWorkingConditionCountry: \"\",\n      wishedWorkingConditionCity: \"\",\n      wishedWorkingConditionAreaOfWork: \"\",\n      wishedWorkingConditionFromSalary: \"\",\n      wishedWorkingConditionToSalary: \"\"\n    };\n    /* hhhhhhhhhhhhhhhh */\n\n    this.state.certifications.push({\n      id: v4(),\n      yearIssued: \"\",\n      certificate: \"\",\n      level: \"\",\n      issuedBy: \"\",\n      certificateFile: ''\n    });\n    this.state.educations.push({\n      id: v4(),\n      fromYear: \"\",\n      toYear: \"\",\n      areaOfStudy: \"\",\n      qualification: \"\",\n      shoolName: \"\"\n    });\n    this.state.employments.push({\n      id: v4(),\n      fromYear: \"\",\n      toYear: \"\",\n      company: \"\",\n      department: \"\",\n      dutyOfWork: \"\",\n      status: \"\",\n      uploading: false\n    });\n  }\n\n  onResumeValidation() {\n    let {\n      languageType\n    } = this.props;\n    let errorMessage = {};\n    let formIsValid = true;\n\n    if (!isValidString(this.state.selfIntroduction)) {\n      formIsValid = false;\n      errorMessage[\"selfIntroduction\"] = languageType.REQUIRED_MESSAGE;\n      notifications.showWarning(\"self Introduction is Required \");\n    } else if (!isValidString(this.state.wishedWorkingConditionCountry)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionCountry\"] = languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionCity)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionCity\"] = languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionAreaOfWork)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionAreaOfWork\"] = languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionFromSalary)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionFromSalary\"] = languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionToSalary)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionToSalary\"] = languageType.REQUIRED_MESSAGE;\n    } // else if (!isValidString(this.state.programmingLanguage)) {\n    //   formIsValid = false;\n    //   errorMessage[\"programmingLanguage\"] = languageType.REQUIRED_MESSAGE;\n    // }\n    // else if (!isValidString(this.state.programmingLanguageLevel)) {\n    //   formIsValid = false;\n    //   errorMessage[\"programmingLanguageLevel\"] = languageType.REQUIRED_MESSAGE;\n    // }\n\n\n    this.setState({\n      errorMessage: errorMessage\n    });\n    return formIsValid;\n  }\n\n  componentDidMount() {\n    this.bindCountry();\n    this.getFreelancerDetail();\n  }\n\n  render() {\n    let {\n      wouldLikeToGetJobProposal,\n      wishedWorkingConditionCountry,\n      wishedWorkingConditionCity,\n      wishedWorkingConditionAreaOfWork,\n      wishedWorkingConditionFromSalary,\n      wishedWorkingConditionToSalary,\n      programmingLanguage,\n      selfIntroduction,\n      programmingLanguageLevel,\n      loading,\n      isSkeletonLoading\n    } = this.state;\n    let {\n      languageReducer\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"printable-area\",\n      className: \"hourly_limit resume-registration-new printable-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      count: 5,\n      isSkeletonLoading: isSkeletonLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      hidden: isSkeletonLoading,\n      className: \"position_rel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"resume-heading-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/resume1.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 15\n      }\n    }, \"Resume Registration \"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      hidden: isSkeletonLoading,\n      className: \"collapse animaton-height show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"post_form\",\n      style: {\n        padding: \"0px 15px 0px 0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addMore_detail create_freelancer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading-icon-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/education.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 21\n      }\n    }, \"Education\")), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 25\n      }\n    }, \"Year From\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 25\n      }\n    }, \"Year To\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 25\n      }\n    }, \"Qualification\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 25\n      }\n    }, \"Area to study/Department\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 25\n      }\n    }, \"School Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 25\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 21\n      }\n    }, this.state.educations.map((el, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0  customer-col-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: `educationFromYear${el.id}`,\n      name: `educationFromYear${el.id}`,\n      enableAutoCompleteSearch: true,\n      placeHolder: \"From Year\",\n      value: el.fromYear,\n      noborder: true,\n      selectItem: value => {\n        el.fromYear = value;\n        this.setState({\n          educations: this.state.educations\n        });\n      },\n      items: GetSpecificYearsList(1980, new Date().getFullYear()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0 customer-col-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: `educationToYear${el.id}`,\n      name: `educationToYear${el.id}`,\n      enableAutoCompleteSearch: true,\n      placeHolder: \"To Year\",\n      value: el.toYear,\n      noborder: true,\n      selectItem: value => {\n        if (value > el.fromYear) {\n          el.toYear = value;\n          this.setState({\n            educations: this.state.educations\n          });\n        } else {\n          notifications.showWarning(\"To year should be greater than from year\");\n        }\n      },\n      items: GetSpecificYearsList(1980, new Date().getFullYear()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0\",\n      style: {\n        minWidth: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: `qualification${el.id}`,\n      name: `qualification${el.id}`,\n      enableAutoCompleteSearch: true,\n      placeHolder: \"Qualification\",\n      value: el.qualification,\n      noborder: true,\n      selectItem: value => {\n        el.qualification = value;\n        this.setState({\n          educations: this.state.educations\n        });\n      },\n      items: languageReducer.educationType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.areaOfStudy,\n      placeholder: \"Enter department\",\n      maxLength: \"100\",\n      onChange: e => {\n        let errorMessage = {};\n        el.areaOfStudy = e.target.value;\n        this.setState({\n          educations: this.state.educations,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.schoolName,\n      maxLength: \"500\",\n      placeholder: \"Enter school name\",\n      onChange: e => {\n        let errorMessage = {};\n        el.schoolName = e.target.value;\n        this.setState({\n          educations: this.state.educations,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 27\n      }\n    }, i == 0 ? /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        let educations = this.state.educations;\n        educations.push({\n          id: v4(),\n          fromYear: \"\",\n          toYear: \"\",\n          areaOfStudy: \"\",\n          qualification: \"\",\n          shoolName: \"\"\n        });\n        this.setState({\n          educations: educations\n        });\n      },\n      className: \"fa fa-plus customer-table-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 31\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        let educationList = this.state.educations.filter(x => x.id !== el.id);\n        this.setState({\n          educations: educationList\n        });\n      },\n      className: \"fa fa-trash customer-table-icon\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 31\n      }\n    }))))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addMore_detail create_freelancer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading-icon-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/employment.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 21\n      }\n    }, \"Employment History\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 27\n      }\n    }, \"Year From\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 27\n      }\n    }, \"Year To\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 27\n      }\n    }, \"Company\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 27\n      }\n    }, \"Department\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 27\n      }\n    }, \"Duty of Work\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 27\n      }\n    }, \"Current Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      style: {\n        width: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 27\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 23\n      }\n    }, this.state.employments.map((el, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0  customer-col-width1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: `employmentYearFrom${el.id}`,\n      name: `employmentYearFrom${el.id}`,\n      enableAutoCompleteSearch: true,\n      placeHolder: \"Year From\",\n      noborder: true,\n      value: el.fromYear,\n      selectItem: value => {\n        el.fromYear = value;\n        this.setState({\n          employments: this.state.employments\n        });\n      },\n      items: GetSpecificYearsList(1980, new Date().getFullYear()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0  customer-col-width1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: `employmentToYear${el.id}`,\n      name: `employmentToYear${el.id}`,\n      enableAutoCompleteSearch: true,\n      placeHolder: \"Year To\",\n      noborder: true,\n      value: el.toYear,\n      selectItem: value => {\n        if (value > el.fromYear) {\n          el.toYear = value;\n          this.setState({\n            employments: this.state.employments\n          });\n        } else {\n          notifications.showWarning(\"To year should be greater than from year\");\n        }\n      },\n      items: GetSpecificYearsList(1980, new Date().getFullYear()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0\",\n      style: {\n        width: \"140px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.company,\n      placeholder: \"Enter company \",\n      maxLength: \"500\",\n      onChange: e => {\n        let errorMessage = {};\n        el.company = e.target.value;\n        this.setState({\n          employments: this.state.employments,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0\",\n      style: {\n        width: \"140px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.department,\n      placeholder: \"Enter Department\",\n      maxLength: \"500\",\n      onChange: e => {\n        let errorMessage = {};\n        el.department = e.target.value;\n        this.setState({\n          employments: this.state.employments,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.dutyOfWork,\n      maxLength: \"500\",\n      placeholder: \"Enter Duty\",\n      onChange: e => {\n        let errorMessage = {};\n        el.dutyOfWork = e.target.value;\n        this.setState({\n          employments: this.state.employments,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"customer-col-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: \"currentStatus\",\n      name: \"DropdownList\",\n      value: el.status,\n      enableAutoCompleteSearch: true,\n      noborder: true,\n      selectItem: value => {\n        el.status = value;\n        this.setState({\n          employments: this.state.employments\n        });\n      },\n      items: [{\n        text: \"Working\",\n        value: \"Working\"\n      }, {\n        text: \"Resigned\",\n        value: \"Resigned\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 29\n      }\n    }, i == 0 ? /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        let employments = this.state.employments;\n        employments.push({\n          id: v4(),\n          fromYear: \"\",\n          toYear: \"\",\n          company: \"\",\n          department: \"\",\n          dutyOfWork: \"\",\n          status: \"\"\n        });\n        this.setState({\n          employments: employments\n        });\n      },\n      className: \"fa fa-plus customer-table-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        let employmentList = this.state.employments.filter(x => x.id !== el.id);\n        this.setState({\n          employments: employmentList\n        });\n      },\n      className: \"fa fa-trash customer-table-icon\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 33\n      }\n    })))))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addMore_detail create_freelancer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading-icon-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/trophy.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 21\n      }\n    }, \"Certification\")), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 25\n      }\n    }, \"Year Issued\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 25\n      }\n    }, \"Certificate\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 25\n      }\n    }, \"Level/Result\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 25\n      }\n    }, \"Issued By\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 25\n      }\n    }, \"Certificate_File\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890,\n        columnNumber: 25\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 21\n      }\n    }, this.state.certifications.map((el, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0 customer-col-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: `YearIssued${el.id}`,\n      name: `YearIssued${el.id}`,\n      placeHolder: \"Year Issued\",\n      enableAutoCompleteSearch: true,\n      value: el.yearIssued,\n      noborder: true,\n      selectItem: value => {\n        el.yearIssued = value;\n        this.setState({\n          certifications: this.state.certifications\n        });\n      },\n      items: GetSpecificYearsList(1980, new Date().getFullYear()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.certificate,\n      maxLength: \"500\",\n      onChange: e => {\n        let errorMessage = {};\n        el.certificate = e.target.value;\n        this.setState({\n          certifications: this.state.certifications,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.level,\n      maxLength: \"50\",\n      onChange: e => {\n        let errorMessage = {};\n        el.level = e.target.value;\n        this.setState({\n          certifications: this.state.certifications,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.issuedBy,\n      maxLength: \"100\",\n      onChange: e => {\n        let errorMessage = {};\n        el.issuedBy = e.target.value;\n        this.setState({\n          certifications: this.state.certifications,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        maxWidth: '120px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"file-upload-button-resume\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-upload-button-resume\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 29\n      }\n    }, el.certificateFile ? el.certificateFile.split(\"/\")[el.certificateFile.split(\"/\").length - 1].substr(el.certificateFile.split(\"/\")[el.certificateFile.split(\"/\").length - 1].length - 12) : \"upload file\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"user-photo\",\n      id: \"file-upload-button-resume\",\n      accept: \"jpg jpeg png PNG gif\",\n      style: {\n        visibility: 'hidden',\n        height: '0px'\n      },\n      onChange: async e => {\n        let size = e.target.files[0] ? e.target.files[0].size : 0;\n\n        if (size < 1048576) {\n          this.setFileUploading(true);\n\n          if (el.certificateFile) {\n            this.handleDeleteImage(el.certificateFile);\n          }\n\n          let response = await uploadImage(e.target.files[0], \"profileimage\");\n\n          if (response.success) {\n            el.certificateFile = response.result.s3Key;\n            this.setFileUploading(false);\n          } else {\n            notifications.showError(response || \"Error uploading image.\");\n            this.setFileUploading(false);\n          }\n        } else {\n          notifications.showWarning(\"Please select a file size of less than 1 MB.\");\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1010,\n        columnNumber: 27\n      }\n    }, i == 0 ? /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        let certifications = this.state.certifications;\n        certifications.push({\n          id: v4(),\n          yearIssued: \"\",\n          certificate: \"\",\n          level: \"\",\n          issuedBy: \"\"\n        });\n        this.setState({\n          certifications: certifications\n        });\n      },\n      className: \"fa fa-plus customer-table-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 31\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        let certificationList = this.state.certifications.filter(x => x.id !== el.id);\n        this.setState({\n          certifications: certificationList\n        });\n      },\n      className: \"fa fa-trash customer-table-icon\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 31\n      }\n    })))))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addMore_detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1055,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      rows: \"5\",\n      placeholder: \"Enter Self Introduction\",\n      value: selfIntroduction,\n      maxLength: \"1000\",\n      onChange: e => {\n        let errorMessage = {};\n        if (!isValidString(e.target.value)) errorMessage[\"selfIntroduction\"] = null;\n        this.setState({\n          selfIntroduction: e.target.value,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 19\n      }\n    }), this.state.errorMessage.selfIntroduction && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1075,\n        columnNumber: 21\n      }\n    }, \" \", this.state.errorMessage.selfIntroduction, \" \"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addMore_detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dev_box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"wished_lbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 19\n      }\n    }, \"Write your wished working condition\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1088,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 country_select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1089,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center lavel_select form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1090,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 25\n      }\n    }, \"Country :\"), /*#__PURE__*/React.createElement(DropdownList, {\n      id: \"ddlWishedWorkingConditionCountry\",\n      name: \"ddlWishedWorkingConditionCountry\",\n      value: wishedWorkingConditionCountry,\n      enableAutoCompleteSearch: true,\n      enableAutoComplete: true,\n      selectItem: value => {\n        let errorMessage = {};\n        if (!isValidString(value)) errorMessage[\"wishedWorkingConditionCountry\"] = null;\n        let countryId = this.state.countries.find(item => item.name === value);\n\n        if (countryId) {\n          this.bindCities(countryId.id);\n        }\n\n        this.setState({\n          wishedWorkingConditionCountry: value,\n          errorMessage: errorMessage\n        });\n      },\n      items: this.state.countryList.map(country => ({\n        text: country.name,\n        value: country.name\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 25\n      }\n    })), this.state.errorMessage.wishedWorkingConditionCountry && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 25\n      }\n    }, \" \", this.state.errorMessage.wishedWorkingConditionCountry, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center lavel_select form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1131,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 25\n      }\n    }, \"City :\"), /*#__PURE__*/React.createElement(DropdownList, {\n      enableAutoComplete: true,\n      id: \"ddlWishedWorkingConditionCity\",\n      name: \"ddlWishedWorkingConditionCity\",\n      enableAutoCompleteSearch: true,\n      value: wishedWorkingConditionCity,\n      placeHolder: wishedWorkingConditionCity ? wishedWorkingConditionCity : \"\",\n      selectItem: value => {\n        let errorMessage = {};\n        console.log(value, \"value value\");\n        if (value && !isValidString(value)) errorMessage[\"wishedWorkingConditionCity\"] = null;\n        this.setState({\n          wishedWorkingConditionCity: value,\n          errorMessage: errorMessage\n        });\n      },\n      items: this.state.cities.map(city => ({\n        text: city.name,\n        value: city.name\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1133,\n        columnNumber: 25\n      }\n    })), this.state.errorMessage.wishedWorkingConditionCity && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1161,\n        columnNumber: 25\n      }\n    }, \" \", this.state.errorMessage.wishedWorkingConditionCity, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1169,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center lavel_select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1170,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1171,\n        columnNumber: 25\n      }\n    }, \"Area of Work :\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Area Of Work\",\n      value: wishedWorkingConditionAreaOfWork,\n      maxLength: \"100\",\n      onChange: e => {\n        let errorMessage = {};\n        if (!isValidString(e.target.value)) errorMessage[\"wishedWorkingConditionAreaOfWork\"] = null;\n        this.setState({\n          wishedWorkingConditionAreaOfWork: e.target.value,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1172,\n        columnNumber: 25\n      }\n    })), this.state.errorMessage.wishedWorkingConditionAreaOfWork && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1192,\n        columnNumber: 25\n      }\n    }, \" \", this.state.errorMessage.wishedWorkingConditionAreaOfWork, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1201,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lavel_select yearly_sal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 25\n      }\n    }, \"Yearly Salary Expectation in US$\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"country_select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1205,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center lavel_select form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1206,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1207,\n        columnNumber: 27\n      }\n    }, \"From :\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: wishedWorkingConditionFromSalary,\n      maxLength: \"50\",\n      onChange: e => {\n        let errorMessage = {};\n        let fromSalary = \"\";\n        if (!e.target.value || e.target.value.match(/^\\d{1,}(\\.\\d{0,2})?$/)) fromSalary = e.target.value;else if (e.target.value === \"\") fromSalary = \"\";\n        if (!isValidString(fromSalary)) errorMessage[\"wishedWorkingConditionFromSalary\"] = null;\n        this.setState({\n          wishedWorkingConditionFromSalary: fromSalary,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1208,\n        columnNumber: 27\n      }\n    })), this.state.errorMessage.wishedWorkingConditionFromSalary && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1237,\n        columnNumber: 27\n      }\n    }, \" \", this.state.errorMessage.wishedWorkingConditionFromSalary, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center lavel_select form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1245,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1246,\n        columnNumber: 27\n      }\n    }, \"To :\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: wishedWorkingConditionToSalary,\n      maxLength: \"50\",\n      onChange: e => {\n        let errorMessage = {};\n        let toSalary = \"\";\n        if (!e.target.value || e.target.value.match(/^\\d{1,}(\\.\\d{0,2})?$/)) toSalary = e.target.value;else if (e.target.value === \"\") toSalary = \"\";\n        if (!isValidString(toSalary)) errorMessage[\"wishedWorkingConditionToSalary\"] = null;\n        this.setState({\n          wishedWorkingConditionToSalary: toSalary,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1247,\n        columnNumber: 27\n      }\n    })), this.state.errorMessage.wishedWorkingConditionToSalary && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1275,\n        columnNumber: 27\n      }\n    }, \" \", this.state.errorMessage.wishedWorkingConditionToSalary, \" \")))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1289,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1290,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"resume-view-pdf-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1291,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      onClick: () => {\n        this.handlePrintAble();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1292,\n        columnNumber: 17\n      }\n    }, \"View in PDF\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-freelancer-bottom-steps\",\n      style: {\n        paddingRight: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1300,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => {\n        e.preventDefault();\n        this.props.handleBack(\"SkillAndBusinessStep\");\n      },\n      className: \"create-freelancer-bottom-steps-back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1304,\n        columnNumber: 17\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: loading,\n      onClick: e => {\n        e.preventDefault();\n        this.onSubmitProfessionalArea();\n      },\n      className: \"create-freelancer-bottom-steps-skip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313,\n        columnNumber: 17\n      }\n    }, \"Next\", \" \", loading ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-spinner fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1322,\n        columnNumber: 30\n      }\n    }) : \"\")))), /*#__PURE__*/React.createElement(FileUploadLoader, {\n      title: \" Uploading new file...\",\n      show: this.state.uploading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1327,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    languageReducer: state.languageReducer,\n    languageType: state.languageReducer.languageType\n  };\n}\n\nexport default connect(mapStateToProps)(ResumeRegister);","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/freelancer/createFreelancer/resumeRegister.js"],"names":["React","Component","DropdownList","v4","CountryList","isNumeric","isValidString","notifications","FileUploadLoader","Heading","Label","Skeleton","connect","GetSpecificYearsList","request","ENDPOINT","uploadImage","deleteImage","getOptions","postMultipartFile","postOptions","jsPDF","html2canvas","ResumeRegister","constructor","props","setFileUploading","flag","setState","uploading","handleDeleteImage","key","slice","onSubmitProfessionalArea","onResumeValidation","selfIntroduction","wishedWorkingConditionCountry","wishedWorkingConditionCity","wishedWorkingConditionAreaOfWork","wishedWorkingConditionFromSalary","wishedWorkingConditionToSalary","state","loading","CertificateArray","certifications","map","item","yearIssued","certificate","level","issuedBy","object","instruction","type","yearStart","toString","yearEnd","qualification","studyDepartment","schoolName","companyName","workDepartment","dutyOfWork","status","certificateFile","push","EmploymentArray","employments","fromYear","toYear","company","department","EducationArray","educations","areaOfStudy","shoolName","param","individualFreelancerId","userId","userResumes","wishedWorkingCondition","wishedCountry","wishedCity","areaOfWork","wishedMinSalary","wishedMaxSalary","result","success","handleNext","localStorage","setItem","JSON","stringify","step","window","scrollTo","top","behavior","showSuccess","showError","message","getFreelancerDetail","isSkeletonLoading","length","certificatesArray","EducationsArray","employmentArray","id","setTimeout","countries","countryId","find","name","bindCities","printable","handlePrintAble","bindCountry","array","data","index","element","alert","cities","printContents","document","getElementById","innerHTML","originalContents","body","print","languageProficiency","portfolio","employmentHistory","languageTests","wouldLikeToGetJobProposal","countryList","errorMessage","programmingLanguage","language","proficiency","languageType","formIsValid","REQUIRED_MESSAGE","showWarning","componentDidMount","render","programmingLanguageLevel","languageReducer","padding","el","i","value","Date","getFullYear","minWidth","educationType","e","target","educationList","filter","x","width","text","employmentList","maxWidth","split","substr","visibility","height","size","files","response","s3Key","certificationList","country","console","log","city","fromSalary","match","toSalary","paddingRight","preventDefault","handleBack","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DropdownList from \"../../../components/dropdowns/dropdownList\";\nimport v4 from \"uuid\";\nimport { CountryList } from \"../../../utils/countrylist\";\nimport { isNumeric, isValidString } from \"../../../utils/validationConfig\";\nimport notifications from \"../../../utils/notifications\";\nimport FileUploadLoader from \"../../../components/loader/fileUpload\";\nimport Heading from \"../../../components/freelancerCreation/heading\";\nimport Label from \"../../../components/postProject/label\";\nimport Skeleton from \"../../../components/skeleton/skeleton\";\nimport { connect } from \"react-redux\";\nimport { GetSpecificYearsList } from \"../../../utils/years\";\nimport request from \"../../../utils/request\";\nimport { ENDPOINT } from \"../../../utils/endpoint\";\nimport { uploadImage, deleteImage } from \"../../../services/uploadImages\";\nimport {\n  getOptions,\n  postMultipartFile,\n  postOptions,\n} from \"../../../utils/httpConfig\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport \"./createFreelancer.scss\";\nclass ResumeRegister extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      certifications: [],\n      languageProficiency: [],\n      portfolio: [],\n      certifications: [],\n      educations: [],\n      employments: [],\n      employmentHistory: [],\n      selfIntroduction: \"\",\n      languageTests: [],\n      wouldLikeToGetJobProposal: false,\n      countryList: CountryList,\n      errorMessage: {},\n      loading: false,\n      cities: [],\n      countries: [],\n      programmingLanguage: [{ id: v4(), language: \"\", proficiency: \"\" }],\n      isSkeletonLoading: false,\n      wishedWorkingConditionCountry: \"\",\n      wishedWorkingConditionCity: \"\",\n      wishedWorkingConditionAreaOfWork: \"\",\n      wishedWorkingConditionFromSalary: \"\",\n      wishedWorkingConditionToSalary: \"\",\n    };\n\n    /* hhhhhhhhhhhhhhhh */\n    this.state.certifications.push({\n      id: v4(),\n      yearIssued: \"\",\n      certificate: \"\",\n      level: \"\",\n      issuedBy: \"\",\n      certificateFile:'',\n    });\n\n    this.state.educations.push({\n      id: v4(),\n      fromYear: \"\",\n      toYear: \"\",\n      areaOfStudy: \"\",\n      qualification: \"\",\n      shoolName: \"\",\n    });\n    this.state.employments.push({\n      id: v4(),\n      fromYear: \"\",\n      toYear: \"\",\n      company: \"\",\n      department: \"\",\n      dutyOfWork: \"\",\n      status: \"\",\n      uploading:false\n    });\n  }\n  setFileUploading=(flag)=>{\n       this.setState({uploading:flag})\n  }\n   handleDeleteImage = async (key) => {\n    if (key.slice(0, 5) != \"https\") {\n      await deleteImage(key);\n    }\n  };\n  onResumeValidation() {\n    let { languageType } = this.props;\n    let errorMessage = {};\n    let formIsValid = true;\n\n    if (!isValidString(this.state.selfIntroduction)) {\n      formIsValid = false;\n      errorMessage[\"selfIntroduction\"] = languageType.REQUIRED_MESSAGE;\n      notifications.showWarning(\"self Introduction is Required \");\n    } else if (!isValidString(this.state.wishedWorkingConditionCountry)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionCountry\"] =\n        languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionCity)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionCity\"] =\n        languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionAreaOfWork)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionAreaOfWork\"] =\n        languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionFromSalary)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionFromSalary\"] =\n        languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionToSalary)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionToSalary\"] =\n        languageType.REQUIRED_MESSAGE;\n    }\n    // else if (!isValidString(this.state.programmingLanguage)) {\n    //   formIsValid = false;\n    //   errorMessage[\"programmingLanguage\"] = languageType.REQUIRED_MESSAGE;\n    // }\n    // else if (!isValidString(this.state.programmingLanguageLevel)) {\n    //   formIsValid = false;\n    //   errorMessage[\"programmingLanguageLevel\"] = languageType.REQUIRED_MESSAGE;\n    // }\n\n    this.setState({ errorMessage: errorMessage });\n    return formIsValid;\n  }\n  onSubmitProfessionalArea = async () => {\n    if (this.onResumeValidation()) {\n      let {\n        selfIntroduction,\n        wishedWorkingConditionCountry,\n        wishedWorkingConditionCity,\n        wishedWorkingConditionAreaOfWork,\n        wishedWorkingConditionFromSalary,\n        wishedWorkingConditionToSalary,\n      } = this.state;\n\n      /* hhhhhhhhhhhhhhhh */\n\n      this.setState({ loading: true });\n      let CertificateArray = [];\n      this.state.certifications.map((item) => {\n        if (\n          (item.yearIssued && item.certificate) ||\n          item.level ||\n          item.issuedBy\n        ) {\n          let object = {\n            instruction: \"\",\n            type: \"Certificate\",\n            yearStart: item.yearIssued.toString(),\n            yearEnd: item.yearIssued.toString(),\n            qualification: \"\",\n            studyDepartment: \"\",\n            schoolName: \"\",\n            companyName: \"\",\n            workDepartment: \"\",\n            dutyOfWork: \"\",\n            status: \"\",\n            certificate: item.certificate,\n            certificateFile:item.certificateFile,\n            level: item.level,\n            issuedBy: item.issuedBy,\n          };\n          \n          CertificateArray.push(object);\n        }\n      });\n\n      let EmploymentArray = [];\n      this.state.employments.map((item) => {\n        if (\n          (item.fromYear && item.toYear && item.company) ||\n          item.department ||\n          item.dutyOfWork ||\n          item.status\n        ) {\n          let object = {\n            instruction: \"\",\n            type: \"Employment\",\n            yearStart: item.fromYear.toString(),\n            yearEnd: item.toYear.toString(),\n            qualification: \"\",\n            studyDepartment: \"\",\n            schoolName: \"\",\n            companyName: item.company,\n            workDepartment: item.department,\n            dutyOfWork: item.dutyOfWork,\n            status: item.status,\n            certificate: \"\",\n            level: \"\",\n            issuedBy: \"\",\n          };\n          EmploymentArray.push(object);\n        }\n      });\n      let EducationArray = [];\n      this.state.educations.map((item) => {\n        if (\n          (item.fromYear && item.toYear) ||\n          item.areaOfStudy ||\n          item.qualification ||\n          item.shoolName\n        ) {\n          let object = {\n            instruction: \"\",\n            type: \"Education\",\n            yearStart: item.fromYear.toString(),\n            yearEnd: item.toYear.toString(),\n            qualification: item.qualification,\n            studyDepartment: item.areaOfStudy,\n            schoolName: item.shoolName,\n            companyName: \"\",\n            workDepartment: \"\",\n            dutyOfWork: \"\",\n            status: \"\",\n            certificate: \"\",\n            level: \"\",\n            issuedBy: \"\",\n          };\n          EducationArray.push(object);\n        }\n      });\n\n      let param = {\n        individualFreelancerId: this.props.userId,\n        userResumes: [\n          ...EducationArray,\n          ...CertificateArray,\n          ...EmploymentArray,\n        ],\n        selfIntroduction: selfIntroduction,\n        wishedWorkingCondition: {\n          wishedCountry: wishedWorkingConditionCountry,\n          wishedCity: wishedWorkingConditionCity,\n          areaOfWork: wishedWorkingConditionAreaOfWork,\n          wishedMinSalary: wishedWorkingConditionFromSalary,\n          wishedMaxSalary: wishedWorkingConditionToSalary,\n        },\n      };\n\n      let result = await request(\n        ENDPOINT[\"UpdateFreelancerResume\"],\n        postOptions(param)\n      );\n      if (result.success) {\n        this.props.handleNext(\"FreelancerProfileConfirmation\");\n        localStorage.setItem(\n          \"IndividaulFreelancerRegistrationInfo\",\n          JSON.stringify({\n            step: \"FreelancerProfileConfirmation\",\n            userId: result.result.individualFreelancerId,\n          })\n        );\n        window.scrollTo({\n          top: \"0\",\n          behavior: \"smooth\",\n        });\n        notifications.showSuccess(\"Congratulation! you have successfully registered your resume!\")\n      } else\n        notifications.showError(\n          result.message || \"Error! while update your resume, Try again\"\n        );\n    }\n  };\n  componentDidMount() {\n    this.bindCountry();\n    this.getFreelancerDetail();\n  }\n\n  getFreelancerDetail = async () => {\n    if (this.props.userId) {\n      this.setState({ isSkeletonLoading: true });\n      let result = await request(\n        `${ENDPOINT[\"GetIndividualFreelancer\"]}?individualFreelancerId=${this.props.userId}`,\n        getOptions()\n      );\n      if (result.success && result.result) {\n        if (result.result.wishedWorkingCondition) {\n          this.setState({\n            selfIntroduction: result.result.selfIntroduction,\n            wishedWorkingConditionCountry:\n              result.result.wishedWorkingCondition.wishedCountry,\n            wishedWorkingConditionCity:\n              result.result.wishedWorkingCondition.wishedCity,\n            wishedWorkingConditionAreaOfWork:\n              result.result.wishedWorkingCondition.areaOfWork,\n            wishedWorkingConditionFromSalary:\n              result.result.wishedWorkingCondition.wishedMinSalary,\n            wishedWorkingConditionToSalary:\n              result.result.wishedWorkingCondition.wishedMaxSalary,\n          });\n        }\n\n        this.setState({ isSkeletonLoading: false });\n        if (result.result.userResumes && result.result.userResumes.length > 0) {\n          let certificatesArray = [];\n          let EducationsArray = [];\n          let employmentArray = [];\n          result.result.userResumes.map((item) => {\n            if (item.type === \"Certificate\") {\n              certificatesArray.push({\n                id: v4(),\n                yearIssued: item.yearStart || item.yearEnd,\n                certificate: item.certificate,\n                level: item.level,\n                issuedBy: item.issuedBy,\n                certificateFile:item.certificateFile\n              });\n            }\n            if (item.type === \"Employment\") {\n              employmentArray.push({\n                id: v4(),\n                fromYear: item.yearStart,\n                toYear: item.yearEnd,\n                company: item.companyName,\n                department: item.workDepartment,\n                dutyOfWork: item.dutyOfWork,\n                status: item.status,\n              });\n            }\n            if (item.type === \"Education\") {\n              EducationsArray.push({\n                id: v4(),\n                fromYear: item.yearStart,\n                toYear: item.yearEnd,\n                areaOfStudy: item.studyDepartment,\n                qualification: item.qualification,\n                shoolName: item.schoolName,\n              });\n            }\n          });\n          if (certificatesArray.length > 0) {\n            this.setState({\n              certifications: certificatesArray,\n            });\n          }\n          if (EducationsArray.length > 0) {\n            this.setState({\n              educations: EducationsArray,\n            });\n          }\n          if (employmentArray.length > 0) {\n            this.setState({\n              employments: employmentArray,\n            });\n          }\n        }\n\n        /* userResumes: [{instruction: \"\", type: \"Education\", yearStart: \"1981\", yearEnd: \"1985\",…},…]\n0: {instruction */\n        // console.log(result,\"result\")\n        if (result.result.wishedWorkingCondition) {\n          setTimeout(() => {\n            if (this.state.countries && this.state.countries.length > 0) {\n              let countryId = this.state.countries.find(\n                (item) =>\n                  item.name ===\n                  result.result.wishedWorkingCondition.wishedCountry\n              );\n              if (countryId) {\n                this.bindCities(countryId.id);\n                this.setState({\n                  wishedWorkingConditionCity:\n                    result.result.wishedWorkingCondition.wishedCity,\n                });\n              }\n            }\n          }, 1000);\n        }\n      } else {\n        this.setState({ isSkeletonLoading: false });\n      }\n    }\n\n    /* printable */\n\n    if (this.props.printable) {\n      this.handlePrintAble();\n    }\n  };\n  bindCountry = async () => {\n    let array = [];\n    let result = await request(\n      `${ENDPOINT[\"GeneralSettings\"]}?settingName=Countries`,\n      getOptions({})\n    );\n    if (result.success) {\n      if (result.result.data.length > 0) {\n        for (\n          let index = 0;\n          index < result.result.data[0].data.length;\n          index++\n        ) {\n          const element = result.result.data[0].data[index];\n          array.push({\n            id: element.id,\n            name: element.name,\n          });\n        }\n        this.setState({ countries: array });\n      } else {\n        alert(\"No Country\");\n      }\n    } else {\n      alert(\"No Country\");\n    }\n  };\n  bindCities = async (countryId) => {\n    let array = [];\n    let result = await request(\n      `${ENDPOINT[\"GeneralSettings\"]}?settingName=city_country_` + countryId,\n      getOptions({})\n    );\n    if (result.success) {\n      if (result.result.data.length > 0) {\n        for (\n          let index = 0;\n          index < result.result.data[0].data.length;\n          index++\n        ) {\n          const element = result.result.data[0].data[index];\n          array.push({\n            id: element.id,\n            name: element.name,\n          });\n        }\n        this.setState({ cities: array });\n      } else {\n        alert(\"No City\");\n      }\n    } else {\n      alert(\"No City\");\n    }\n  };\n  handlePrintAble = () => {\n\n    /* printable-area */\n    var printContents = document.getElementById(\"printable-area\").innerHTML;\n    var originalContents = document.body.innerHTML;\n\n    document.body.innerHTML = printContents;\n\n    window.print();\n    document.body.innerHTML = originalContents;\n    // html2canvas(document.querySelector(\".printable-area\"), {\n    //   logging: true,\n    //   letterRendering: 1,\n    //   allowTaint: false,\n    //   useCORS: true,\n    // }).then((canvas) => {\n    //   var imgData = canvas.toDataURL(\"image/jpeg\", 1);\n    //   var pdf = new jsPDF(\"p\", \"mm\", \"a4\");\n    //   var pageWidth = pdf.internal.pageSize.getWidth() - 22;\n    //   var pageHeight = pdf.internal.pageSize.getHeight() - 22;\n    //   var imageWidth = canvas.width;\n    //   var imageHeight = canvas.height;\n\n    //   var ratio =\n    //     imageWidth / imageHeight >= pageWidth / pageHeight\n    //       ? pageWidth / imageWidth\n    //       : pageHeight / imageHeight;\n    //   pdf.addImage(\n    //     imgData,\n    //     \"JPEG\",\n    //     10,\n    //     10,\n    //     imageWidth * ratio,\n    //     imageHeight * ratio\n    //   );\n    //   pdf.save(\"resume.pdf\");\n    // });\n\n  };\n  render() {\n    let {\n      wouldLikeToGetJobProposal,\n      wishedWorkingConditionCountry,\n      wishedWorkingConditionCity,\n      wishedWorkingConditionAreaOfWork,\n      wishedWorkingConditionFromSalary,\n      wishedWorkingConditionToSalary,\n      programmingLanguage,\n      selfIntroduction,\n      programmingLanguageLevel,\n      loading,\n      isSkeletonLoading,\n    } = this.state;\n    let { languageReducer } = this.props;\n    return (\n      <>\n        <div\n          id=\"printable-area\"\n          className=\"hourly_limit resume-registration-new printable-area\"\n        >\n          <Skeleton count={5} isSkeletonLoading={isSkeletonLoading} />\n          <div hidden={isSkeletonLoading} className=\"position_rel\">\n            <div className=\"resume-heading-icon\">\n              <img src={\"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/resume1.png\"} />\n              <h3>Resume Registration </h3>\n            </div>\n          </div>\n          <br />\n          <br />\n          <div\n            hidden={isSkeletonLoading}\n            className=\"collapse animaton-height show\"\n          >\n            <form className=\"post_form\" style={{ padding: \"0px 15px 0px 0px\" }}>\n              <>\n                {/*Education*/}\n                <div className=\"addMore_detail create_freelancer\">\n                  <div className=\"heading-icon-label\">\n                    <img\n                      src={\"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/education.png\"}\n                    />\n                    <h5>Education</h5>\n                  </div>\n\n                  <table className=\"table text-center\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Year From</th>\n                        <th scope=\"col\">Year To</th>\n                        <th scope=\"col\">Qualification</th>\n                        <th scope=\"col\">Area to study/Department</th>\n                        <th scope=\"col\">School Name</th>\n                        <th scope=\"col\">Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.educations.map((el, i) => (\n                        <tr key={i}>\n                          <td className=\"text-left p-0  customer-col-width\">\n                            <DropdownList\n                              id={`educationFromYear${el.id}`}\n                              name={`educationFromYear${el.id}`}\n                              enableAutoCompleteSearch\n                              placeHolder=\"From Year\"\n                              value={el.fromYear}\n                              noborder\n                              selectItem={(value) => {\n                                el.fromYear = value;\n                                this.setState({\n                                  educations: this.state.educations,\n                                });\n                              }}\n                              items={GetSpecificYearsList(\n                                1980,\n                                new Date().getFullYear()\n                              )}\n                            />\n                          </td>\n                          <td className=\"text-left p-0 customer-col-width\">\n                            <DropdownList\n                              id={`educationToYear${el.id}`}\n                              name={`educationToYear${el.id}`}\n                              enableAutoCompleteSearch\n                              placeHolder=\"To Year\"\n                              value={el.toYear}\n                              noborder\n                              selectItem={(value) => {\n                                if (value > el.fromYear) {\n                                  el.toYear = value;\n                                  this.setState({\n                                    educations: this.state.educations,\n                                  });\n                                } else {\n                                  notifications.showWarning(\n                                    \"To year should be greater than from year\"\n                                  );\n                                }\n                              }}\n                              items={GetSpecificYearsList(\n                                1980,\n                                new Date().getFullYear()\n                              )}\n                            />\n                          </td>\n                          <td\n                            className=\"text-left p-0\"\n                            style={{ minWidth: \"200px\" }}\n                          >\n                            <DropdownList\n                              id={`qualification${el.id}`}\n                              name={`qualification${el.id}`}\n                              enableAutoCompleteSearch\n                              placeHolder=\"Qualification\"\n                              value={el.qualification}\n                              noborder\n                              selectItem={(value) => {\n                                el.qualification = value;\n                                this.setState({\n                                  educations: this.state.educations,\n                                });\n                              }}\n                              items={languageReducer.educationType}\n                            />\n                          </td>\n                          <td>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              value={el.areaOfStudy}\n                              placeholder=\"Enter department\"\n                              maxLength=\"100\"\n                              onChange={(e) => {\n                                let errorMessage = {};\n                                el.areaOfStudy = e.target.value;\n\n                                this.setState({\n                                  educations: this.state.educations,\n                                  errorMessage: errorMessage,\n                                });\n                              }}\n                            />\n                          </td>\n                          <td>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              value={el.schoolName}\n                              maxLength=\"500\"\n                              placeholder=\"Enter school name\"\n                              onChange={(e) => {\n                                let errorMessage = {};\n                                el.schoolName = e.target.value;\n\n                                this.setState({\n                                  educations: this.state.educations,\n                                  errorMessage: errorMessage,\n                                });\n                              }}\n                            />\n                          </td>\n                          <td>\n                            {i == 0 ? (\n                              <i\n                                onClick={() => {\n                                  let educations = this.state.educations;\n                                  educations.push({\n                                    id: v4(),\n                                    fromYear: \"\",\n                                    toYear: \"\",\n                                    areaOfStudy: \"\",\n                                    qualification: \"\",\n                                    shoolName: \"\",\n                                  });\n                                  this.setState({ educations: educations });\n                                }}\n                                className=\"fa fa-plus customer-table-icon\"\n                              ></i>\n                            ) : (\n                              <i\n                                onClick={() => {\n                                  let educationList =\n                                    this.state.educations.filter(\n                                      (x) => x.id !== el.id\n                                    );\n                                  this.setState({ educations: educationList });\n                                }}\n                                className=\"fa fa-trash customer-table-icon\"\n                                aria-hidden=\"true\"\n                              ></i>\n                            )}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n\n                {/*Employment*/}\n                <br />\n                <div className=\"addMore_detail create_freelancer\">\n                  <div className=\"heading-icon-label\">\n                    <img\n                      src={\"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/employment.png\"}\n                    />\n                    <h5>Employment History</h5>\n                  </div>\n\n                  <div className=\"\">\n                    <table className=\"table text-center\">\n                      <thead>\n                        <tr>\n                          <th scope=\"col\">Year From</th>\n                          <th scope=\"col\">Year To</th>\n                          <th scope=\"col\">Company</th>\n\n                          <th scope=\"col\">Department</th>\n                          <th scope=\"col\">Duty of Work</th>\n                          <th scope=\"col\">Current Status</th>\n                          <th scope=\"col\" style={{ width: \"50px\" }}>\n                            Action\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.employments.map((el, i) => (\n                          <tr key={i}>\n                            <td className=\"text-left p-0  customer-col-width1\">\n                              <DropdownList\n                                id={`employmentYearFrom${el.id}`}\n                                name={`employmentYearFrom${el.id}`}\n                                enableAutoCompleteSearch\n                                placeHolder=\"Year From\"\n                                noborder\n                                value={el.fromYear}\n                                selectItem={(value) => {\n                                  el.fromYear = value;\n                                  this.setState({\n                                    employments: this.state.employments,\n                                  });\n                                }}\n                                items={GetSpecificYearsList(\n                                  1980,\n                                  new Date().getFullYear()\n                                )}\n                              />\n                            </td>\n                            <td className=\"text-left p-0  customer-col-width1\">\n                              <DropdownList\n                                id={`employmentToYear${el.id}`}\n                                name={`employmentToYear${el.id}`}\n                                enableAutoCompleteSearch\n                                placeHolder=\"Year To\"\n                                noborder\n                                value={el.toYear}\n                                selectItem={(value) => {\n                                  if (value > el.fromYear) {\n                                    el.toYear = value;\n                                    this.setState({\n                                      employments: this.state.employments,\n                                    });\n                                  } else {\n                                    notifications.showWarning(\n                                      \"To year should be greater than from year\"\n                                    );\n                                  }\n                                }}\n                                items={GetSpecificYearsList(\n                                  1980,\n                                  new Date().getFullYear()\n                                )}\n                              />\n                            </td>\n                            <td\n                              className=\"text-left p-0\"\n                              style={{ width: \"140px\" }}\n                            >\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={el.company}\n                                placeholder=\"Enter company \"\n                                maxLength=\"500\"\n                                onChange={(e) => {\n                                  let errorMessage = {};\n                                  el.company = e.target.value;\n\n                                  this.setState({\n                                    employments: this.state.employments,\n                                    errorMessage: errorMessage,\n                                  });\n                                }}\n                              />\n                            </td>\n                            <td\n                              className=\"text-left p-0\"\n                              style={{ width: \"140px\" }}\n                            >\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={el.department}\n                                placeholder=\"Enter Department\"\n                                maxLength=\"500\"\n                                onChange={(e) => {\n                                  let errorMessage = {};\n                                  el.department = e.target.value;\n\n                                  this.setState({\n                                    employments: this.state.employments,\n                                    errorMessage: errorMessage,\n                                  });\n                                }}\n                              />\n                            </td>\n                            <td className=\"text-left p-0\">\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={el.dutyOfWork}\n                                maxLength=\"500\"\n                                placeholder=\"Enter Duty\"\n                                onChange={(e) => {\n                                  let errorMessage = {};\n                                  el.dutyOfWork = e.target.value;\n\n                                  this.setState({\n                                    employments: this.state.employments,\n                                    errorMessage: errorMessage,\n                                  });\n                                }}\n                              />\n                            </td>\n                            <td className=\"customer-col-width\">\n                              <DropdownList\n                                id=\"currentStatus\"\n                                name=\"DropdownList\"\n                                value={el.status}\n                                enableAutoCompleteSearch\n                                noborder\n                                selectItem={(value) => {\n                                  el.status = value;\n                                  this.setState({\n                                    employments: this.state.employments,\n                                  });\n                                }}\n                                items={[\n                                  { text: \"Working\", value: \"Working\" },\n                                  { text: \"Resigned\", value: \"Resigned\" },\n                                ]}\n                              />\n                            </td>\n                            <td>\n                              {i == 0 ? (\n                                <i\n                                  onClick={() => {\n                                    let employments = this.state.employments;\n                                    employments.push({\n                                      id: v4(),\n                                      fromYear: \"\",\n                                      toYear: \"\",\n                                      company: \"\",\n                                      department: \"\",\n                                      dutyOfWork: \"\",\n                                      status: \"\",\n                                    });\n                                    this.setState({ employments: employments });\n                                  }}\n                                  className=\"fa fa-plus customer-table-icon\"\n                                ></i>\n                              ) : (\n                                <i\n                                  onClick={() => {\n                                    let employmentList =\n                                      this.state.employments.filter(\n                                        (x) => x.id !== el.id\n                                      );\n                                    this.setState({\n                                      employments: employmentList,\n                                    });\n                                  }}\n                                  className=\"fa fa-trash customer-table-icon\"\n                                  aria-hidden=\"true\"\n                                ></i>\n                              )}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n                <br />\n                {/*Certificate*/}\n                <div className=\"addMore_detail create_freelancer\">\n                  <div className=\"heading-icon-label\">\n                    <img\n                      src={\"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/trophy.png\"}\n                    />\n                    <h5>Certification</h5>\n                  </div>\n\n                  <table className=\"table text-center\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Year Issued</th>\n                        <th scope=\"col\">Certificate</th>\n                        <th scope=\"col\">Level/Result</th>\n                        <th scope=\"col\">Issued By</th>\n                        <th scope=\"col\">Certificate_File</th>\n                        <th scope=\"col\">Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.certifications.map((el, i) => (\n                        <tr key={i}>\n                          <td className=\"text-left p-0 customer-col-width\">\n                            <DropdownList\n                              id={`YearIssued${el.id}`}\n                              name={`YearIssued${el.id}`}\n                              placeHolder=\"Year Issued\"\n                              enableAutoCompleteSearch\n                              value={el.yearIssued}\n                              noborder\n                              selectItem={(value) => {\n                                el.yearIssued = value;\n                                this.setState({\n                                  certifications: this.state.certifications,\n                                });\n                              }}\n                              items={GetSpecificYearsList(\n                                1980,\n                                new Date().getFullYear()\n                              )}\n                            />\n                          </td>\n                          <td>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              value={el.certificate}\n                              maxLength=\"500\"\n                              onChange={(e) => {\n                                let errorMessage = {};\n                                el.certificate = e.target.value;\n                                this.setState({\n                                  certifications: this.state.certifications,\n                                  errorMessage: errorMessage,\n                                });\n                              }}\n                            />\n                          </td>\n                          <td>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              value={el.level}\n                              maxLength=\"50\"\n                              onChange={(e) => {\n                                let errorMessage = {};\n                                el.level = e.target.value;\n                                this.setState({\n                                  certifications: this.state.certifications,\n                                  errorMessage: errorMessage,\n                                });\n                              }}\n                            />\n                          </td>\n                          <td>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              value={el.issuedBy}\n                              maxLength=\"100\"\n                              onChange={(e) => {\n                                let errorMessage = {};\n                                el.issuedBy = e.target.value;\n                                this.setState({\n                                  certifications: this.state.certifications,\n                                  errorMessage: errorMessage,\n                                });\n                              }}\n                            />\n                          </td>\n                          <td style={{maxWidth:'120px'}}>\n                            <label for=\"file-upload-button-resume\">\n                            <div className=\"file-upload-button-resume\">\n                            \n                            {\n                               el.certificateFile?el.certificateFile.split(\"/\")\n                               [el.certificateFile.split(\"/\").length - 1].substr(\n                                el.certificateFile.split(\"/\")[el.certificateFile.split(\"/\").length - 1]\n                                   .length - 12\n                               ):\"upload file\"\n                            }\n                            </div>\n                            </label>\n                           \n                            <input\n                           type=\"file\"\n                         name=\"user-photo\"\n                         id=\"file-upload-button-resume\"\n                         accept=\"jpg jpeg png PNG gif\"\n                         style={{visibility:'hidden',height:'0px'}}\n                         onChange={async (e) => {\n                          let size = e.target.files[0]\n                            ? e.target.files[0].size\n                            : 0;\n                          if (size < 1048576) {\n                            this.setFileUploading(true);\n                            if(el.certificateFile){\n                              this.handleDeleteImage(el.certificateFile)\n                            }\n                            \n                            let response = await uploadImage(e.target.files[0], \"profileimage\");\n                            if (response.success) {\n                              el.certificateFile=response.result.s3Key\n                              this.setFileUploading(false);\n                            } else {\n                              notifications.showError(response || \"Error uploading image.\");\n                              this.setFileUploading(false);\n                            }\n                          } else {\n                            notifications.showWarning(\n                              \"Please select a file size of less than 1 MB.\"\n                            );\n                          }\n                        }}\n                        />\n                          </td>\n                          <td>\n                            {i == 0 ? (\n                              <i\n                                onClick={() => {\n                                  let certifications =\n                                    this.state.certifications;\n                                  certifications.push({\n                                    id: v4(),\n                                    yearIssued: \"\",\n                                    certificate: \"\",\n                                    level: \"\",\n                                    issuedBy: \"\",\n                                  });\n                                  this.setState({\n                                    certifications: certifications,\n                                  });\n                                }}\n                                className=\"fa fa-plus customer-table-icon\"\n                              ></i>\n                            ) : (\n                              <i\n                                onClick={() => {\n                                  let certificationList =\n                                    this.state.certifications.filter(\n                                      (x) => x.id !== el.id\n                                    );\n                                  this.setState({\n                                    certifications: certificationList,\n                                  });\n                                }}\n                                className=\"fa fa-trash customer-table-icon\"\n                                aria-hidden=\"true\"\n                              ></i>\n                            )}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n\n                {/*EmploymentHistory*/}\n              </>\n\n              <br />\n              <div className=\"addMore_detail\">\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control\"\n                    rows=\"5\"\n                    placeholder=\"Enter Self Introduction\"\n                    value={selfIntroduction}\n                    maxLength=\"1000\"\n                    onChange={(e) => {\n                      let errorMessage = {};\n\n                      if (!isValidString(e.target.value))\n                        errorMessage[\"selfIntroduction\"] = null;\n                      this.setState({\n                        selfIntroduction: e.target.value,\n                        errorMessage: errorMessage,\n                      });\n                    }}\n                  ></textarea>\n                  {this.state.errorMessage.selfIntroduction && (\n                    <p className=\"text-danger\">\n                      {\" \"}\n                      {this.state.errorMessage.selfIntroduction}{\" \"}\n                    </p>\n                  )}\n                </div>\n              </div>\n              <br />\n              <div className=\"addMore_detail\">\n                <div className=\"dev_box\">\n                  <label className=\"wished_lbl\">\n                    Write your wished working condition\n                  </label>\n                  <div className=\"row\">\n                    <div className=\"col-md-4 country_select\">\n                      <div className=\"d-flex align-items-center lavel_select form-group\">\n                        <label>Country :</label>\n                        <DropdownList\n                          id=\"ddlWishedWorkingConditionCountry\"\n                          name=\"ddlWishedWorkingConditionCountry\"\n                          value={wishedWorkingConditionCountry}\n                          enableAutoCompleteSearch\n                          enableAutoComplete\n                          selectItem={(value) => {\n                            let errorMessage = {};\n                            if (!isValidString(value))\n                              errorMessage[\"wishedWorkingConditionCountry\"] =\n                                null;\n\n                            let countryId = this.state.countries.find(\n                              (item) => item.name === value\n                            );\n                            if (countryId) {\n                              this.bindCities(countryId.id);\n                            }\n                            this.setState({\n                              wishedWorkingConditionCountry: value,\n                              errorMessage: errorMessage,\n                            });\n                          }}\n                          items={this.state.countryList.map((country) => ({\n                            text: country.name,\n                            value: country.name,\n                          }))}\n                        />\n                      </div>\n                      {this.state.errorMessage\n                        .wishedWorkingConditionCountry && (\n                        <p className=\"text-danger\">\n                          {\" \"}\n                          {\n                            this.state.errorMessage\n                              .wishedWorkingConditionCountry\n                          }{\" \"}\n                        </p>\n                      )}\n                      <div className=\"d-flex align-items-center lavel_select form-group\">\n                        <label>City :</label>\n                        <DropdownList\n                          enableAutoComplete\n                          id=\"ddlWishedWorkingConditionCity\"\n                          name=\"ddlWishedWorkingConditionCity\"\n                          enableAutoCompleteSearch\n                          value={wishedWorkingConditionCity}\n                          placeHolder={\n                            wishedWorkingConditionCity\n                              ? wishedWorkingConditionCity\n                              : \"\"\n                          }\n                          selectItem={(value) => {\n                            let errorMessage = {};\n                            console.log(value, \"value value\");\n                            if (value && !isValidString(value))\n                              errorMessage[\"wishedWorkingConditionCity\"] = null;\n                            this.setState({\n                              wishedWorkingConditionCity: value,\n                              errorMessage: errorMessage,\n                            });\n                          }}\n                          items={this.state.cities.map((city) => ({\n                            text: city.name,\n                            value: city.name,\n                          }))}\n                        />\n                      </div>\n                      {this.state.errorMessage.wishedWorkingConditionCity && (\n                        <p className=\"text-danger\">\n                          {\" \"}\n                          {\n                            this.state.errorMessage.wishedWorkingConditionCity\n                          }{\" \"}\n                        </p>\n                      )}\n                    </div>\n                    <div className=\"col-md-4\">\n                      <div className=\"d-flex align-items-center lavel_select\">\n                        <label>Area of Work :</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Area Of Work\"\n                          value={wishedWorkingConditionAreaOfWork}\n                          maxLength=\"100\"\n                          onChange={(e) => {\n                            let errorMessage = {};\n                            if (!isValidString(e.target.value))\n                              errorMessage[\"wishedWorkingConditionAreaOfWork\"] =\n                                null;\n                            this.setState({\n                              wishedWorkingConditionAreaOfWork: e.target.value,\n                              errorMessage: errorMessage,\n                            });\n                          }}\n                        />\n                      </div>\n                      {this.state.errorMessage\n                        .wishedWorkingConditionAreaOfWork && (\n                        <p className=\"text-danger\">\n                          {\" \"}\n                          {\n                            this.state.errorMessage\n                              .wishedWorkingConditionAreaOfWork\n                          }{\" \"}\n                        </p>\n                      )}\n                    </div>\n                    <div className=\"col-md-4 text-right\">\n                      <div className=\"lavel_select yearly_sal\">\n                        <label>Yearly Salary Expectation in US$</label>\n                      </div>\n                      <div className=\"country_select\">\n                        <div className=\"d-flex align-items-center lavel_select form-group\">\n                          <label>From :</label>\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={wishedWorkingConditionFromSalary}\n                            maxLength=\"50\"\n                            onChange={(e) => {\n                              let errorMessage = {};\n\n                              let fromSalary = \"\";\n                              if (\n                                !e.target.value ||\n                                e.target.value.match(/^\\d{1,}(\\.\\d{0,2})?$/)\n                              )\n                                fromSalary = e.target.value;\n                              else if (e.target.value === \"\") fromSalary = \"\";\n\n                              if (!isValidString(fromSalary))\n                                errorMessage[\n                                  \"wishedWorkingConditionFromSalary\"\n                                ] = null;\n                              this.setState({\n                                wishedWorkingConditionFromSalary: fromSalary,\n                                errorMessage: errorMessage,\n                              });\n                            }}\n                          />\n                        </div>\n                        {this.state.errorMessage\n                          .wishedWorkingConditionFromSalary && (\n                          <p className=\"text-danger\">\n                            {\" \"}\n                            {\n                              this.state.errorMessage\n                                .wishedWorkingConditionFromSalary\n                            }{\" \"}\n                          </p>\n                        )}\n                        <div className=\"d-flex align-items-center lavel_select form-group\">\n                          <label>To :</label>\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={wishedWorkingConditionToSalary}\n                            maxLength=\"50\"\n                            onChange={(e) => {\n                              let errorMessage = {};\n\n                              let toSalary = \"\";\n                              if (\n                                !e.target.value ||\n                                e.target.value.match(/^\\d{1,}(\\.\\d{0,2})?$/)\n                              )\n                                toSalary = e.target.value;\n                              else if (e.target.value === \"\") toSalary = \"\";\n\n                              if (!isValidString(toSalary))\n                                errorMessage[\"wishedWorkingConditionToSalary\"] =\n                                  null;\n                              this.setState({\n                                wishedWorkingConditionToSalary: toSalary,\n                                errorMessage: errorMessage,\n                              });\n                            }}\n                          />\n                        </div>\n                        {this.state.errorMessage\n                          .wishedWorkingConditionToSalary && (\n                          <p className=\"text-danger\">\n                            {\" \"}\n                            {\n                              this.state.errorMessage\n                                .wishedWorkingConditionToSalary\n                            }{\" \"}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <br />\n              <br />\n              <div className=\"resume-view-pdf-link\">\n                <h3\n                  onClick={() => {\n                    this.handlePrintAble();\n                  }}\n                >\n                  View in PDF\n                </h3>\n              </div>\n              <div\n                className=\"create-freelancer-bottom-steps\"\n                style={{ paddingRight: \"0px\" }}\n              >\n                <button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    this.props.handleBack(\"SkillAndBusinessStep\");\n                  }}\n                  className=\"create-freelancer-bottom-steps-back\"\n                >\n                  Back\n                </button>\n                <button\n                  disabled={loading}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    this.onSubmitProfessionalArea();\n                  }}\n                  className=\"create-freelancer-bottom-steps-skip\"\n                >\n                  Next{\" \"}\n                  {loading ? <i className=\"fa fa-spinner fa-spin\"></i> : \"\"}\n                </button>\n              </div>\n            </form>\n          </div>\n          <FileUploadLoader title={\" Uploading new file...\"} show={this.state.uploading} />\n        </div>\n      </>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    languageReducer: state.languageReducer,\n    languageType: state.languageReducer.languageType,\n  };\n}\n\nexport default connect(mapStateToProps)(ResumeRegister);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/components/dropdowns/dropdownList.jsx\";\nimport { filter, toLower, includes } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst DropdownList = props => {\n  const {\n    id,\n    name,\n    className,\n    style,\n    value,\n    items,\n    placeHolder,\n    disabled,\n    noborder,\n    enableAutoComplete,\n    enableAutoCompleteSearch,\n    badge,\n    gray_bg\n  } = props;\n  const [show, setShow] = useState(false);\n  const [itemsList, setItemsList] = useState([]);\n  const input = useRef();\n  const languageType = useSelector(state => state.languageReducer.languageType);\n\n  const toggleOpen = () => {\n    if (!props.disabled) setShow(!show);\n  };\n\n  const selectItem = value => {\n    props.selectItem(value);\n    setShow(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"click\", function (event) {\n      if (event.target.className !== \"wrapper-input-text\" && event.target.className !== \"wrapper-input-text-search\" && event.target.className !== \"wrapper-input-text-search-icon\" && event.target.id !== props.id // || (event.target.id === props.id && document.getElementById(props.id).classList.contains('active')))\n      ) setShow(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (items) setItemsList(items);\n  }, [items]);\n\n  const RenderPlaceHolderText = () => value ? itemsList.filter(x => {\n    return x.value === value;\n  }).length > 0 ? itemsList.filter(x => {\n    return x.value === value;\n  })[0].text : placeHolder ? placeHolder : languageType.SELECT_TEXT : placeHolder ? placeHolder : languageType.SELECT_TEXT;\n\n  useEffect(() => {\n    if (value && input.current) {\n      if (value !== placeHolder) {\n        input.current.value = RenderPlaceHolderText().toString();\n      }\n    }\n  }, [value, input.current]);\n\n  const onTextChange = e => {\n    const string = e.target.value;\n\n    if (string) {\n      setItemsList(filter(items, ({\n        text\n      }) => includes(toLower(text), toLower(string))));\n    } else {\n      props.selectItem(\"\");\n      setItemsList(items);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: \"1\",\n    id: id,\n    name: name ? name : \"\",\n    className: `${className ? className : \"\"} wrapper-input text-left ${show ? \"active\" : \"\"} ${disabled ? \"disabled\" : \"\"} ${noborder ? \"no-border\" : \"\"}`,\n    style: style ? style : {},\n    onClick: () => enableAutoComplete || enableAutoCompleteSearch ? setShow(true) : toggleOpen(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, !enableAutoComplete && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"wrapper-input-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, RenderPlaceHolderText()), enableAutoComplete && /*#__PURE__*/React.createElement(\"input\", {\n    id: id,\n    ref: input,\n    style: {\n      background: gray_bg ? \"#f3f2f2\" : \"\"\n    },\n    className: \"wrapper-input-text w-100 border-0\",\n    type: \"text\",\n    placeholder: RenderPlaceHolderText().toString(),\n    onChange: onTextChange,\n    onFocus: () => setShow(true),\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dropdown-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, enableAutoCompleteSearch ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-search wrapper-input-text-search-icon\",\n    onFocus: () => setShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: id,\n    onChange: onTextChange,\n    placeholder: \"Search\",\n    type: \"text\",\n    className: \"wrapper-input-text-search\",\n    autoComplete: \"off\",\n    onFocus: () => setShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  })) : \"\"), itemsList && itemsList.length > 0 && itemsList.map((item, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => selectItem(item.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, item.icon && /*#__PURE__*/React.createElement(\"i\", {\n    className: `${item.icon} icon-large`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 35\n    }\n  }), item.text ? item.text : item.text)))))));\n};\n\nexport default DropdownList;","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/components/dropdowns/dropdownList.jsx"],"names":["filter","toLower","includes","React","useState","useEffect","useRef","useSelector","DropdownList","props","id","name","className","style","value","items","placeHolder","disabled","noborder","enableAutoComplete","enableAutoCompleteSearch","badge","gray_bg","show","setShow","itemsList","setItemsList","input","languageType","state","languageReducer","toggleOpen","selectItem","window","addEventListener","event","target","RenderPlaceHolderText","x","length","text","SELECT_TEXT","current","toString","onTextChange","e","string","background","map","item","i","icon"],"mappings":"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","sourcesContent":["import { filter, toLower, includes } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst DropdownList = (props) => {\n  const {\n    id,\n    name,\n    className,\n    style,\n    value,\n    items,\n    placeHolder,\n    disabled,\n    noborder,\n    enableAutoComplete,\n    enableAutoCompleteSearch,\n    badge,\n    gray_bg,\n  } = props;\n\n  const [show, setShow] = useState(false);\n  const [itemsList, setItemsList] = useState([]);\n  const input = useRef();\n  const languageType = useSelector(\n    (state) => state.languageReducer.languageType\n  );\n\n  const toggleOpen = () => {\n    if (!props.disabled) setShow(!show);\n  };\n\n  const selectItem = (value) => {\n    props.selectItem(value);\n    setShow(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"click\", function (event) {\n      if (\n        event.target.className !== \"wrapper-input-text\" &&\n        event.target.className !== \"wrapper-input-text-search\" &&\n        event.target.className !== \"wrapper-input-text-search-icon\" &&\n\n        event.target.id !== props.id\n        // || (event.target.id === props.id && document.getElementById(props.id).classList.contains('active')))\n      )\n        setShow(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (items) setItemsList(items);\n  }, [items]);\n\n  const RenderPlaceHolderText = () =>\n    value\n      ? itemsList.filter((x) => {\n          return x.value === value;\n        }).length > 0\n        ? itemsList.filter((x) => {\n            return x.value === value;\n          })[0].text\n        : placeHolder\n        ? placeHolder\n        : languageType.SELECT_TEXT\n      : placeHolder\n      ? placeHolder\n      : languageType.SELECT_TEXT;\n\n  useEffect(() => {\n    if (value && input.current) {\n      if (value !== placeHolder) {\n        input.current.value = RenderPlaceHolderText().toString();\n      }\n    }\n  }, [value, input.current]);\n\n  const onTextChange = (e) => {\n    const string = e.target.value;\n    if (string) {\n      setItemsList(\n        filter(items, ({ text }) => includes(toLower(text), toLower(string)))\n      );\n    } else {\n      props.selectItem(\"\");\n      setItemsList(items);\n    }\n  };\n  return (\n    <>\n      <div\n        tabIndex=\"1\"\n        id={id}\n        name={name ? name : \"\"}\n        className={`${className ? className : \"\"} wrapper-input text-left ${\n          show ? \"active\" : \"\"\n        } ${disabled ? \"disabled\" : \"\"} ${noborder ? \"no-border\" : \"\"}`}\n        style={style ? style : {}}\n        onClick={() => (enableAutoComplete || enableAutoCompleteSearch ? setShow(true) : toggleOpen())}\n      >\n        {!enableAutoComplete && (\n          <span className=\"wrapper-input-text\">{RenderPlaceHolderText()}</span>\n        )}\n        {enableAutoComplete && (\n          <input\n            id={id}\n            ref={input}\n            style={{ background: gray_bg ? \"#f3f2f2\" : \"\" }}\n            className=\"wrapper-input-text w-100 border-0\"\n            type=\"text\"\n            placeholder={RenderPlaceHolderText().toString()}\n            onChange={onTextChange}\n            onFocus={() => setShow(true)}\n            autoComplete=\"off\"\n          />\n        )}\n        <div className=\"dropdown\">\n          <ul className=\"dropdown-inner\">\n            <span> \n            {enableAutoCompleteSearch ? (\n              <> \n              <i class=\"fa fa-search wrapper-input-text-search-icon\" onFocus={() => setShow(true)}></i> \n              <input \n                id={id}\n                onChange={onTextChange}\n                placeholder=\"Search\"\n                type=\"text\"\n                className=\"wrapper-input-text-search\"\n                autoComplete=\"off\"\n                onFocus={() => setShow(true)}\n              />\n              </>\n            )\n              :\n              ( \"\"\n            )}\n            </span>\n            {itemsList &&\n              itemsList.length > 0 &&\n              itemsList.map((item, i) => (\n                <li key={i}>\n                  <a onClick={() => selectItem(item.value)}>\n                    {item.icon && <i className={`${item.icon} icon-large`}></i>}\n                    {item.text ? item.text : item.text}\n                  </a>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DropdownList;\n"]},"metadata":{},"sourceType":"module"}
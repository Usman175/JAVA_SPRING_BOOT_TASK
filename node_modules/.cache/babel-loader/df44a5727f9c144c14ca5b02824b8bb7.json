{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/mobileVerification/mobileVerify.js\";\nimport React, { Component, createRef } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Select, TextField } from \"@material-ui/core\";\nimport { CountryList } from \"../../utils/countrylist\";\nimport \"react-notify-alert/dist/index.css\";\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"./mobileVerification.scss\";\nimport { ReactNotifyAlert } from \"react-notify-alert\";\nimport AOS from \"aos\";\nimport 'aos/dist/aos.css';\nAOS.init({\n  duration: 1200\n});\n\nconst useStyles = () => ({\n  mobileContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    marginTop: \"50px\"\n  },\n  phoneNumberWrap: {\n    \"& .MuiSelect-outlined\": {\n      height: \"20px\",\n      paddingBottom: \"10px\",\n      paddingTop: \"9px\"\n    }\n  },\n  textFiledWrap: {\n    \"& .Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      boxShadow: \"0 0 0 0.2rem rgb(0 123 255 / 25%)\",\n      outline: \"none\",\n      borderColor: \"transparent !important\"\n    }\n  }\n});\n\nclass VerifyMobile extends Component {\n  constructor(props) {\n    var _props$location, _props$location$state, _this$props$location2, _this$props$location3, _this$props$location4, _this$props$location5;\n\n    super(props);\n\n    this.onCountryChange = item => {\n      var _selectedCountry$;\n\n      let selectedCountry = CountryList.filter(x => x.code.toLowerCase() == item.target.value.toLowerCase());\n      console.log(selectedCountry, \" selectedCountry.code\");\n      this.setState({\n        selectedDialNumber: (_selectedCountry$ = selectedCountry[0]) === null || _selectedCountry$ === void 0 ? void 0 : _selectedCountry$.dial_code\n      });\n    };\n\n    this.handlePhoneVerification = async () => {\n      let {\n        phoneData,\n        phoneBtnText,\n        selectedDialNumber,\n        verifycation\n      } = this.state;\n\n      if (phoneBtnText === \"Verify\") {\n        this.setState({\n          loading1: true\n        });\n        let otp = \"\";\n        let scope = this;\n        verifycation.map(x => otp += x);\n        window.confirmationResult.confirm(otp).then(result => {\n          // User signed in successfully.\n          // swal(\"Success\", \"Successfully verified!\", \"success\");\n          this.setState({\n            loading1: false\n          });\n          scope.setState({\n            isMobileVerify: true,\n            notifyAlertData: {\n              open: true,\n              type: \"success\",\n              title: \"\",\n              message: \"Successfully verified!\"\n            }\n          });\n          setTimeout(() => {\n            this.props.handleNext();\n          }, 1000);\n        }).catch(error => {\n          scope.setState({\n            loading1: false,\n            notifyAlertData: {\n              open: true,\n              type: \"fail\",\n              title: \"\",\n              message: \"Invalid OTP.\"\n            }\n          });\n        });\n      } else {\n        this.setState({\n          loading: true\n        });\n        const scope = this.props;\n        let recaptcha = await new firebase.auth.RecaptchaVerifier(\"captcha\", {\n          size: \"invisible\"\n        });\n        let dialCode = CountryList.find(x => x.code == selectedDialNumber);\n        let number = `${dialCode ? dialCode[\"dial_code\"] : \"\"}${phoneData[\"phoneNumber\"]}`;\n        let ConfirmationResult = await firebase.auth().signInWithPhoneNumber(number, recaptcha);\n        window.confirmationResult = ConfirmationResult;\n        this.setState({\n          loading: false\n        });\n        this.setState({\n          phoneBtnText: \"Verify\",\n          notifyAlertData: {\n            open: true,\n            type: \"success\",\n            title: \"\",\n            complete: true,\n            message: `Verification code \\n send to ${number}`\n          }\n        });\n      }\n    };\n\n    this.renderInputVerifycation = () => {\n      const {\n        verifycation\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.myRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }\n      }, verifycation.map((item, index) => /*#__PURE__*/React.createElement(\"input\", {\n        key: index,\n        className: \"varification-input-box\",\n        maxLength: \"1\",\n        value: item,\n        onChange: e => this.handleChangeVerifycation(index, e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    this.handleChange = event => {\n      const {\n        phoneData\n      } = { ...this.state\n      };\n      phoneData[event.target.name] = event.target.value;\n      this.setState({\n        phoneData\n      });\n    };\n\n    this.handleChangeVerifycation = (id, value) => {\n      let {\n        verifycation\n      } = this.state;\n      const newValue = typeof value === \"string\" ? value.trim() : \"\";\n      const re = /^[0-9\\b]+$/;\n\n      if (value === \"\" || re.test(value)) {\n        this.setState(({\n          verifycation\n        }) => {\n          const newVerifycation = [...verifycation];\n          newVerifycation[id] = newValue;\n          return {\n            verifycation: newVerifycation\n          };\n        });\n\n        if (this.state.verifycation.length > id + 1 && newValue) {\n          this.myRef.current.children[id + 1].select();\n        }\n      }\n\n      if (verifycation[0] !== \"\" && verifycation[1] !== \"\" && verifycation[2] !== \"\" && verifycation[3] !== \"\" && verifycation[4] !== \"\" && value !== \"\") {//   this.props.onMobileVarifiedOrNot(true);\n      } else {//   this.props.onMobileVarifiedOrNot(false);\n      }\n    };\n\n    this.onNotifyActionHandle = action => {\n      const {\n        notifyAlertData\n      } = { ...this.state\n      };\n\n      if (notifyAlertData.complete) {\n        var _this$props$location, _this$props$location$;\n\n        this.props.history.push({\n          pathname: `/${(_this$props$location = this.props.location) === null || _this$props$location === void 0 ? void 0 : (_this$props$location$ = _this$props$location.state) === null || _this$props$location$ === void 0 ? void 0 : _this$props$location$.path}`,\n          phoneVerified: true\n        });\n      }\n\n      this.setState({\n        notifyAlertData: {\n          open: false,\n          type: \"\",\n          title: \"\",\n          message: \"\"\n        }\n      });\n    };\n\n    this.handleNext = () => {\n      // window.scrollTo(top);\n      this.setState({\n        isVerifySuccess: true\n      });\n    };\n\n    this.myRef = createRef();\n    this.state = {\n      isVerifySuccess: false,\n      isMobileVerify: false,\n      verifycation: [\"\", \"\", \"\", \"\", \"\", \"\"],\n      phoneBtnText: \"Send OTP\",\n      selectedDialNumber: ((_props$location = props.location) === null || _props$location === void 0 ? void 0 : (_props$location$state = _props$location.state) === null || _props$location$state === void 0 ? void 0 : _props$location$state.countryCode) ? props.location.state.countryCode : \"\",\n      phoneData: {\n        country: \"India\",\n        ipaddress: \"114.31.164.239\",\n        phNumber: (_this$props$location2 = this.props.location) === null || _this$props$location2 === void 0 ? void 0 : (_this$props$location3 = _this$props$location2.state) === null || _this$props$location3 === void 0 ? void 0 : _this$props$location3.mobileNumber,\n        phoneNumber: (_this$props$location4 = this.props.location) === null || _this$props$location4 === void 0 ? void 0 : (_this$props$location5 = _this$props$location4.state) === null || _this$props$location5 === void 0 ? void 0 : _this$props$location5.mobileNumber,\n        phoneotp: \"\"\n      },\n      loading: false,\n      loading1: false,\n      notifyAlertData: {\n        open: false,\n        type: \"confirm\",\n        title: \"\",\n        message: \"\",\n        complete: false\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.selectedDialNumber) {}\n\n    CountryList.map(item => {\n      var _this$props$lookUpDat;\n\n      if (item.code === ((_this$props$lookUpDat = this.props.lookUpData) === null || _this$props$lookUpDat === void 0 ? void 0 : _this$props$lookUpDat.lookUpData.countryCode)) {\n        this.setState({\n          selectedDialNumber: item.dial_code\n        });\n      }\n    });\n  }\n\n  render() {\n    var _this$props$authReduc, _this$props$authReduc2;\n\n    let {\n      isVerifySuccess,\n      phoneData,\n      phoneBtnText,\n      selectedDialNumber,\n      isMobileVerify,\n      verifycation,\n      notifyAlertData\n    } = this.state;\n    let {\n      selectedPayment,\n      authReducer,\n      classes\n    } = this.props;\n    let user = (_this$props$authReduc = this.props.authReducer) === null || _this$props$authReduc === void 0 ? void 0 : (_this$props$authReduc2 = _this$props$authReduc.myAuth) === null || _this$props$authReduc2 === void 0 ? void 0 : _this$props$authReduc2.user;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"Mobile-Verification\",\n      className: classes.mobileContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container py-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }\n    }, !isVerifySuccess ? /*#__PURE__*/React.createElement(\"div\", {\n      \"data-aos\": \"fade-up\",\n      className: \"mob-verification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mob-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, \"Mobile Verification\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"varification-details \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      size: \"small\",\n      value: selectedDialNumber,\n      fullWidth: true,\n      disabled: false,\n      className: `small-input-box ${classes.phoneNumberWrap}`,\n      variant: \"outlined\",\n      onChange: this.onCountryChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 19\n      }\n    }, CountryList.map(x => /*#__PURE__*/React.createElement(\"option\", {\n      value: x.dial_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 23\n      }\n    }, `${x.name} (${x === null || x === void 0 ? void 0 : x.dial_code})`))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      className: `small-input-box mobile-text-box mb-3 ${classes.textFiledWrap}`,\n      disabled: false,\n      fullWidth: true,\n      placeholder: \"mobile no. without country code\",\n      name: \"phoneNumber\",\n      value: phoneData[\"phoneNumber\"],\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"verify-mobile-button\",\n      onClick: () => this.handlePhoneVerification(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }\n    }, phoneBtnText != \"Verify\" && /*#__PURE__*/React.createElement(Button, {\n      className: \"button-style verify-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, phoneBtnText, \" \", this.state.loading ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-spinner fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 29\n      }\n    }) : \"\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"varification-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"help-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 19\n      }\n    }, \"Check your mobile phone, and enter 6 digit code.\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"captcha\",\n      className: \"captcha-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 19\n      }\n    }, this.renderInputVerifycation(), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      height: \"50px\",\n      src: verifycation.includes(\"\") ? \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/phone.png\" : \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/verifiedPhone.png\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 23\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btnWrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-black\",\n      disabled: isMobileVerify ? false : verifycation.includes(\"\"),\n      onClick: isMobileVerify ? () => this.handleNext() : () => this.handlePhoneVerification(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }\n    }, isMobileVerify ? \"next\" : \"Verify\", this.state.loading1 ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-spinner fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }\n    }) : \"\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex-column align-items-center justify-content-center text-center\",\n      style: {\n        fontSize: \"20px\",\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: \"25%\",\n        marginBottom: \"30px\"\n      },\n      src: \"https://dxnqsgisijbjj.cloudfront.net/chattingroom/img/applogo/jungletalkEn.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 15\n      }\n    }), \"Congratulation! \", user === null || user === void 0 ? void 0 : user.profileName, \"!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 51\n      }\n    }), \"You have created new account with us\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    }), \"Click here to go to your channel page\")), /*#__PURE__*/React.createElement(ReactNotifyAlert, {\n      isOpen: notifyAlertData.open,\n      type: notifyAlertData.type,\n      title: notifyAlertData.title,\n      infoText: notifyAlertData.message,\n      onActionHandle: e => this.onNotifyActionHandle(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.languageReducer.language,\n    authReducer: state.authReducer,\n    lookUpData: state.lookUp\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(VerifyMobile));","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/mobileVerification/mobileVerify.js"],"names":["React","Component","createRef","withStyles","Button","Select","TextField","CountryList","connect","firebase","ReactNotifyAlert","AOS","init","duration","useStyles","mobileContainer","alignItems","justifyContent","display","marginTop","phoneNumberWrap","height","paddingBottom","paddingTop","textFiledWrap","boxShadow","outline","borderColor","VerifyMobile","constructor","props","onCountryChange","item","selectedCountry","filter","x","code","toLowerCase","target","value","console","log","setState","selectedDialNumber","dial_code","handlePhoneVerification","phoneData","phoneBtnText","verifycation","state","loading1","otp","scope","map","window","confirmationResult","confirm","then","result","isMobileVerify","notifyAlertData","open","type","title","message","setTimeout","handleNext","catch","error","loading","recaptcha","auth","RecaptchaVerifier","size","dialCode","find","number","ConfirmationResult","signInWithPhoneNumber","complete","renderInputVerifycation","myRef","index","e","handleChangeVerifycation","handleChange","event","name","id","newValue","trim","re","test","newVerifycation","length","current","children","select","onNotifyActionHandle","action","history","push","pathname","location","path","phoneVerified","isVerifySuccess","countryCode","country","ipaddress","phNumber","mobileNumber","phoneNumber","phoneotp","componentDidMount","lookUpData","render","selectedPayment","authReducer","classes","user","myAuth","includes","fontSize","fontWeight","width","marginBottom","profileName","mapStateToProps","language","languageReducer","lookUp","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Select, TextField } from \"@material-ui/core\";\nimport { CountryList } from \"../../utils/countrylist\";\nimport \"react-notify-alert/dist/index.css\";\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"./mobileVerification.scss\";\nimport { ReactNotifyAlert } from \"react-notify-alert\";\nimport AOS from \"aos\"\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  duration: 1200,\n});\n\n\nconst useStyles = () => ({\n  mobileContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    marginTop: \"50px\",\n  },\n  phoneNumberWrap: {\n    \"& .MuiSelect-outlined\": {\n      height: \"20px\",\n      paddingBottom: \"10px\",\n      paddingTop: \"9px\",\n    },\n  },\n  textFiledWrap: {\n    \"& .Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      boxShadow: \"0 0 0 0.2rem rgb(0 123 255 / 25%)\",\n      outline: \"none\",\n      borderColor: \"transparent !important\",\n    },\n  },\n});\n\nclass VerifyMobile extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = createRef();\n    this.state = {\n      isVerifySuccess: false,\n      isMobileVerify: false,\n      verifycation: [\"\", \"\", \"\", \"\", \"\", \"\"],\n\n      phoneBtnText: \"Send OTP\",\n      selectedDialNumber: props.location?.state?.countryCode ? props.location.state.countryCode:\"\",\n      phoneData: {\n        country: \"India\",\n        ipaddress: \"114.31.164.239\",\n        phNumber: this.props.location?.state?.mobileNumber,\n        phoneNumber: this.props.location?.state?.mobileNumber,\n        phoneotp: \"\",\n      },\n      loading: false,\n      loading1: false,\n      notifyAlertData: {\n        open: false,\n        type: \"confirm\",\n        title: \"\",\n        message: \"\",\n        complete: false,\n      },\n    };\n  }\n\n  onCountryChange = (item) => {\n    let selectedCountry = CountryList.filter(\n      (x) => x.code.toLowerCase() == item.target.value.toLowerCase()\n    );\n    console.log(selectedCountry,\" selectedCountry.code\")\n    this.setState({ selectedDialNumber: selectedCountry[0]?.dial_code });\n    \n \n  };\n\n  handlePhoneVerification = async () => {\n    let { phoneData, phoneBtnText, selectedDialNumber, verifycation } =\n      this.state;\n\n    if (phoneBtnText === \"Verify\") {\n      this.setState({ loading1: true });\n      let otp = \"\";\n      let scope = this;\n      verifycation.map((x) => (otp += x));\n      window.confirmationResult\n        .confirm(otp)\n        .then((result) => {\n          // User signed in successfully.\n          // swal(\"Success\", \"Successfully verified!\", \"success\");\n          this.setState({ loading1: false });\n          scope.setState({\n            isMobileVerify: true,\n            notifyAlertData: {\n              open: true,\n              type: \"success\",\n              title: \"\",\n              message: \"Successfully verified!\",\n            },\n          });\n          setTimeout(() => {\n            this.props.handleNext();\n          }, 1000);\n        })\n        .catch((error) => {\n          scope.setState({\n            loading1: false,\n            notifyAlertData: {\n              open: true,\n              type: \"fail\",\n              title: \"\",\n              message: \"Invalid OTP.\",\n            },\n          });\n        });\n    } else {\n      this.setState({ loading: true });\n      const scope = this.props;\n      let recaptcha = await new firebase.auth.RecaptchaVerifier(\"captcha\", {\n        size: \"invisible\",\n      });\n      let dialCode = CountryList.find((x) => x.code == selectedDialNumber);\n      let number = `${dialCode ? dialCode[\"dial_code\"] : \"\"}${\n        phoneData[\"phoneNumber\"]\n      }`;\n\n      let ConfirmationResult = await firebase\n        .auth()\n        .signInWithPhoneNumber(number, recaptcha);\n      window.confirmationResult = ConfirmationResult;\n      this.setState({ loading: false });\n      this.setState({\n        phoneBtnText: \"Verify\",\n        notifyAlertData: {\n          open: true,\n          type: \"success\",\n          title: \"\",\n          complete: true,\n          message: `Verification code \\n send to ${number}`,\n        },\n      });\n    }\n  };\n\n  renderInputVerifycation = () => {\n    const { verifycation } = this.state;\n    return (\n      <div ref={this.myRef}>\n        {verifycation.map((item, index) => (\n          <input\n            key={index}\n            className=\"varification-input-box\"\n            maxLength=\"1\"\n            value={item}\n            onChange={(e) =>\n              this.handleChangeVerifycation(index, e.target.value)\n            }\n          />\n        ))}\n      </div>\n    );\n  };\n\n  handleChange = (event) => {\n    const { phoneData } = { ...this.state };\n    phoneData[event.target.name] = event.target.value;\n    this.setState({ phoneData });\n  };\n\n  handleChangeVerifycation = (id, value) => {\n    let { verifycation } = this.state;\n    const newValue = typeof value === \"string\" ? value.trim() : \"\";\n    const re = /^[0-9\\b]+$/;\n    if (value === \"\" || re.test(value)) {\n      this.setState(({ verifycation }) => {\n        const newVerifycation = [...verifycation];\n        newVerifycation[id] = newValue;\n        return {\n          verifycation: newVerifycation,\n        };\n      });\n      if (this.state.verifycation.length > id + 1 && newValue) {\n        this.myRef.current.children[id + 1].select();\n      }\n    }\n\n    if (\n      verifycation[0] !== \"\" &&\n      verifycation[1] !== \"\" &&\n      verifycation[2] !== \"\" &&\n      verifycation[3] !== \"\" &&\n      verifycation[4] !== \"\" &&\n      value !== \"\"\n    ) {\n      //   this.props.onMobileVarifiedOrNot(true);\n    } else {\n      //   this.props.onMobileVarifiedOrNot(false);\n    }\n  };\n\n  onNotifyActionHandle = (action) => {\n    const { notifyAlertData } = { ...this.state };\n    if (notifyAlertData.complete) {\n      this.props.history.push({\n        pathname: `/${this.props.location?.state?.path}`,\n        phoneVerified: true,\n      });\n    }\n\n    this.setState({\n      notifyAlertData: {\n        open: false,\n        type: \"\",\n        title: \"\",\n        message: \"\",\n      },\n    });\n  };\n\n  handleNext = () => {\n    // window.scrollTo(top);\n    this.setState({\n      isVerifySuccess: true,\n    });\n  };\n\ncomponentDidMount(){\n  if(!this.state.selectedDialNumber){\n   \n  }\n  CountryList.map((item)=>{\n    if(item.code===this.props.lookUpData?.lookUpData.countryCode){\n      this.setState({selectedDialNumber:item.dial_code})\n    }\n  })\n}\n\n  render() {\n    let {\n      isVerifySuccess,\n      phoneData,\n      phoneBtnText,\n      selectedDialNumber,\n      isMobileVerify,\n      verifycation,\n      notifyAlertData,\n    } = this.state;\n    let { selectedPayment, authReducer, classes } = this.props;\n    let user = this.props.authReducer?.myAuth?.user;\n\n    return (\n      <div id=\"Mobile-Verification\" className={classes.mobileContainer}>\n        <div className=\"container py-5\">\n          {!isVerifySuccess ? (\n            <div data-aos=\"fade-up\" className=\"mob-verification\">\n              <p className=\"mob-header\">Mobile Verification</p>\n              <div className=\"content-container\">\n                <div className=\"varification-details \">\n                  <Select\n                    native\n                    size=\"small\"\n                    value={selectedDialNumber}\n                    fullWidth={true}\n                    disabled={false}\n                    className={`small-input-box ${classes.phoneNumberWrap}`}\n                    variant=\"outlined\"\n                    onChange={this.onCountryChange}\n                  >\n                    {CountryList.map((x) => (\n                      <option\n                        value={x.dial_code}\n                      >{`${x.name} (${x?.dial_code})`}</option>\n                    ))}\n                  </Select>\n                  <div className=\"mt-3 d-flex\">\n                    <TextField\n                      variant=\"outlined\"\n                      className={`small-input-box mobile-text-box mb-3 ${classes.textFiledWrap}`}\n                      disabled={false}\n                      fullWidth\n                      placeholder=\"mobile no. without country code\"\n                      name=\"phoneNumber\"\n                      value={phoneData[\"phoneNumber\"]}\n                      onChange={this.handleChange}\n                    />\n                    <div\n                      className=\"verify-mobile-button\"\n                      onClick={() => this.handlePhoneVerification()}\n                    >\n                      {phoneBtnText != \"Verify\" && (\n                        <Button className=\"button-style verify-btn\">\n                          {phoneBtnText}{\" \"}\n                          {this.state.loading ? (\n                            <i className=\"fa fa-spinner fa-spin\"></i>\n                          ) : (\n                            \"\"\n                          )}\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"varification-input\">\n                  <div className=\"help-text\">\n                    Check your mobile phone, and enter 6 digit code.\n                  </div>\n\n                  <div id=\"captcha\" className=\"captcha-wrap\" />\n                  <div className=\"d-flex align-items-center justify-content-between\">\n                    {this.renderInputVerifycation()}\n                    <div>\n                      <img\n                        height=\"50px\"\n                        src={\n                          verifycation.includes(\"\")\n                            ? \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/phone.png\"\n                            : \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/verifiedPhone.png\"\n                        }\n                        alt=\"\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"btnWrap\">\n                {/*<button className=\"btn-black btn-outline-black\" onClick={() => this.props.history.goBack()}>back</button>*/}\n                <button\n                  className=\"btn-black\"\n                  disabled={isMobileVerify ? false : verifycation.includes(\"\")}\n                  onClick={\n                    isMobileVerify\n                      ? () => this.handleNext()\n                      : () => this.handlePhoneVerification()\n                  }\n                >\n                  {isMobileVerify ? \"next\" : \"Verify\"}\n                  {this.state.loading1 ? (\n                    <i className=\"fa fa-spinner fa-spin\"></i>\n                  ) : (\n                    \"\"\n                  )}\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div\n              className=\"d-flex-column align-items-center justify-content-center text-center\"\n              style={{ fontSize: \"20px\", fontWeight: \"500\" }}\n            >\n              <img\n                style={{ width: \"25%\", marginBottom: \"30px\" }}\n                src=\"https://dxnqsgisijbjj.cloudfront.net/chattingroom/img/applogo/jungletalkEn.png\"\n              />\n              <br />\n              Congratulation! {user?.profileName}!<br />\n              You have created new account with us\n              <br />\n              <br />\n              Click here to go to your channel page\n            </div>\n          )}\n        </div>\n        <ReactNotifyAlert\n          isOpen={notifyAlertData.open}\n          type={notifyAlertData.type}\n          title={notifyAlertData.title}\n          infoText={notifyAlertData.message}\n          onActionHandle={(e) => this.onNotifyActionHandle(e)}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    language: state.languageReducer.language,\n    authReducer: state.authReducer,\n    lookUpData:state.lookUp\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(useStyles)(VerifyMobile));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { de } from \"date-fns/locale\";\nimport { REACT_ALERT, TOGGLE_FOOTER_SETTINGS, SETTINGS_CONST } from \"../../constants/constant\";\nconst INITIAL_STATE = {\n  themeType: \"confident dark\",\n  hasFooterShow: true,\n  reactalert: {\n    open: false,\n    type: \"\",\n    title: \"\",\n    message: \"\"\n  }\n};\nexport default ((states = INITIAL_STATE, action) => {\n  let theme = INITIAL_STATE.themeType;\n\n  if (action.type === SETTINGS_CONST) {\n    try {\n      let {\n        themeType,\n        languageType\n      } = action.payload; // Theme\n\n      if (themeType === \"color\") {\n        theme = \"color-theme\";\n      } else if (themeType === \"dark\") {\n        theme = \"confident dark\";\n      } else {\n        theme = \"bright-theme\";\n      }\n    } catch (error) {} // over\n\n  } else if (action.type === REACT_ALERT) {\n    const strAlert = { ...action.data\n    };\n    return { ...states,\n      reactalert: strAlert\n    };\n  }\n\n  switch (action.type) {\n    case SETTINGS_CONST:\n      return { ...states,\n        themeType: theme\n      };\n\n    case TOGGLE_FOOTER_SETTINGS:\n      return { ...states,\n        hasFooterShow: action.data\n      };\n\n    default:\n      return states;\n  }\n});","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/store/reducer/SettingReducer/SettingReducer.js"],"names":["de","REACT_ALERT","TOGGLE_FOOTER_SETTINGS","SETTINGS_CONST","INITIAL_STATE","themeType","hasFooterShow","reactalert","open","type","title","message","states","action","theme","languageType","payload","error","strAlert","data"],"mappings":"AACA,SAASA,EAAT,QAAmB,iBAAnB;AACA,SAASC,WAAT,EAAsBC,sBAAtB,EAA8CC,cAA9C,QAAoE,0BAApE;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,gBADS;AAEpBC,EAAAA,aAAa,EAAE,IAFK;AAGpBC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,IAAI,EAAE,EAArB;AAAyBC,IAAAA,KAAK,EAAE,EAAhC;AAAoCC,IAAAA,OAAO,EAAE;AAA7C;AAHQ,CAAtB;AAMA,gBAAe,CAACC,MAAM,GAAGR,aAAV,EAAyBS,MAAzB,KAAoC;AACjD,MAAIC,KAAK,GAAGV,aAAa,CAACC,SAA1B;;AAEA,MAAIQ,MAAM,CAACJ,IAAP,KAAgBN,cAApB,EAAoC;AAClC,QAAI;AACF,UAAI;AAAEE,QAAAA,SAAF;AAAaU,QAAAA;AAAb,UAA8BF,MAAM,CAACG,OAAzC,CADE,CAGF;;AACA,UAAIX,SAAS,KAAK,OAAlB,EAA2B;AACzBS,QAAAA,KAAK,GAAG,aAAR;AACD,OAFD,MAEO,IAAIT,SAAS,KAAK,MAAlB,EAA0B;AAC/BS,QAAAA,KAAK,GAAG,gBAAR;AACD,OAFM,MAEA;AACLA,QAAAA,KAAK,GAAG,cAAR;AACD;AACF,KAXD,CAWE,OAAOG,KAAP,EAAc,CAAG,CAZe,CAalC;;AACD,GAdD,MAcO,IAAIJ,MAAM,CAACJ,IAAP,KAAgBR,WAApB,EAAiC;AACtC,UAAMiB,QAAQ,GAAG,EAAE,GAAGL,MAAM,CAACM;AAAZ,KAAjB;AACA,WAAO,EAAE,GAAGP,MAAL;AAAaL,MAAAA,UAAU,EAAEW;AAAzB,KAAP;AACD;;AAED,UAAQL,MAAM,CAACJ,IAAf;AACE,SAAKN,cAAL;AACE,aAAO,EACL,GAAGS,MADE;AAELP,QAAAA,SAAS,EAAES;AAFN,OAAP;;AAKF,SAAKZ,sBAAL;AACE,aAAO,EACL,GAAGU,MADE;AAELN,QAAAA,aAAa,EAAEO,MAAM,CAACM;AAFjB,OAAP;;AAIF;AACE,aAAOP,MAAP;AAbJ;AAeD,CArCD","sourcesContent":["\nimport { de } from \"date-fns/locale\";\nimport { REACT_ALERT, TOGGLE_FOOTER_SETTINGS, SETTINGS_CONST } from \"../../constants/constant\";\n\nconst INITIAL_STATE = {\n  themeType: \"confident dark\",\n  hasFooterShow: true,\n  reactalert: { open: false, type: \"\", title: \"\", message: \"\" },\n};\n\nexport default (states = INITIAL_STATE, action) => {\n  let theme = INITIAL_STATE.themeType;\n\n  if (action.type === SETTINGS_CONST) {\n    try {\n      let { themeType, languageType } = action.payload;\n\n      // Theme\n      if (themeType === \"color\") {\n        theme = \"color-theme\";\n      } else if (themeType === \"dark\") {\n        theme = \"confident dark\";\n      } else {\n        theme = \"bright-theme\";\n      }\n    } catch (error) { }\n    // over\n  } else if (action.type === REACT_ALERT) {\n    const strAlert = { ...action.data };\n    return { ...states, reactalert: strAlert };\n  }\n\n  switch (action.type) {\n    case SETTINGS_CONST:\n      return {\n        ...states,\n        themeType: theme,\n\n      };\n    case TOGGLE_FOOTER_SETTINGS:\n      return {\n        ...states,\n        hasFooterShow: action.data,\n      };\n    default:\n      return states;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
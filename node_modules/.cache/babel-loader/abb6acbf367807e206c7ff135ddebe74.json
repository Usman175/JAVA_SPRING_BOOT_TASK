{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/companyAdmin/adminDashboard/teamCreation/index.js\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport DropdownList from \"../../../../components/dropdowns/dropdownList\";\nimport \"./teamCreation.scss\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport notifications from \"../../../../utils/notifications\";\nimport { getOptions, postMultipartFile, postOptions } from \"../../../../utils/httpConfig\";\nimport request from \"../../../../utils/request\";\nimport { ENDPOINT } from \"../../../../utils/endpoint\";\nconst useStylesBootstrap = makeStyles(theme => ({\n  arrow: {\n    color: theme.palette.common.black\n  },\n  tooltip: {\n    backgroundColor: theme.palette.common.black,\n    zIndex: 999999\n  }\n}));\n\nfunction BootstrapTooltip(props) {\n  const classes = useStylesBootstrap();\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    arrow: true,\n    classes: classes\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction TeamCreation(props) {\n  let OrganizationFreelancers = props.OrganizationFreelancers;\n  const [index, setIndex] = useState(0);\n  const {\n    onHideCallBack,\n    show\n  } = props;\n  const [selectedTeam, setSelectedTeam] = useState(null);\n  const [teamName, setTeamName] = useState(null);\n  const [selectedMember, setSelectedMember] = useState(null);\n  const [selectedTeamMembers, setSelectedTeamMembers] = useState([]);\n  const [errorMessage, setErrorMessage] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const onTeamChange = value => {\n    setSelectedTeam(value);\n  };\n\n  const handleSelectTeamMember = value => {\n    setSelectedMember(value);\n    let preSelectedTeamMembers = selectedTeamMembers;\n    let Member = preSelectedTeamMembers.find(item => item.individualFreelancerId === value);\n\n    if (!Member) {\n      let newMember = OrganizationFreelancers.find(item => item.individualFreelancerId === value);\n      setSelectedTeamMembers([...preSelectedTeamMembers, newMember]);\n    }\n  };\n\n  const handleValidation = () => {\n    let formIsValid = true;\n    let errorMessage = {};\n\n    if (!teamName) {\n      formIsValid = false;\n      errorMessage[\"teamName\"] = \"This field is required!\";\n      window.scrollTo({\n        top: \"198\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"Team name is required!\");\n      return;\n    }\n\n    if (!selectedTeam) {\n      formIsValid = false;\n      errorMessage[\"selectedTeam\"] = \"This field is required!\";\n      window.scrollTo({\n        top: \"198\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"Team leader is required!\");\n      return;\n    }\n\n    if (selectedTeamMembers.length === 0) {\n      formIsValid = false;\n      errorMessage[\"selectedTeam\"] = \"This field is required!\";\n      window.scrollTo({\n        top: \"198\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"At least one team member is required\");\n      return;\n    }\n\n    if (!selectedTeamMembers.find(item => item.individualFreelancerId === selectedTeam)) {\n      formIsValid = false;\n      errorMessage[\"selectedTeam\"] = \"This field is required!\";\n      notifications.showWarning(\"Team leader should be a member of team\");\n      return;\n    }\n\n    setErrorMessage(errorMessage);\n    return formIsValid;\n  };\n\n  const handleCreateTeam = async () => {\n    if (handleValidation()) {\n      setLoading(true);\n      let params = {\n        organizationId: selectedTeamMembers[0].organizationId,\n        teamName: teamName,\n        teamLeaderId: selectedTeam,\n        freelancerMemberIds: selectedTeamMembers.map(item => item.individualFreelancerId)\n      };\n      let result = await request(`${ENDPOINT[\"CreateOrganizationTeam\"]}`, postOptions(params));\n\n      if (result.success) {\n        notifications.showSuccess(\"Team is successfully created\");\n        props.handleSuccess();\n        setLoading(false);\n        props.onHideCallBack();\n        setTeamName('');\n        setSelectedTeam('');\n        setSelectedTeamMembers([]);\n      } else {\n        setLoading(false);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: () => onHideCallBack(),\n    centered: true,\n    backdrop: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"modal-body-content-team-creation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"Team Creation\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-id-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Team name\",\n    value: teamName,\n    onChange: e => setTeamName(e.target.value),\n    className: \"input-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DropdownList, {\n    id: \"team\",\n    name: \"team\",\n    placeHolder: \"Select a lead\",\n    value: selectedTeam,\n    items: props.OrganizationFreelancers.map(item => ({\n      value: item.individualFreelancerId,\n      text: item.freelancerName\n    })),\n    selectItem: onTeamChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DropdownList, {\n    id: \"team\",\n    name: \"team\",\n    placeHolder: \"Members\",\n    value: selectedMember,\n    items: props.OrganizationFreelancers.map(item => ({\n      value: item.individualFreelancerId,\n      text: item.freelancerName\n    })),\n    selectItem: handleSelectTeamMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  })), OrganizationFreelancers && OrganizationFreelancers.length > 0 && selectedTeam && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 91\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"role-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"team-leader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"user1\",\n    src: `https://dhihitu47nqhv.cloudfront.net/${OrganizationFreelancers.find(item => item.individualFreelancerId === selectedTeam).userProfileUrl}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }), \" \", \" \", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 194\n    }\n  }, \" \", OrganizationFreelancers.find(item => item.individualFreelancerId === selectedTeam).freelancerName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"role-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 16\n    }\n  }, \" Team Lead\")))), selectedTeamMembers.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, selectedTeamMembers.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"role-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"team-leader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTooltip, {\n      placement: \"top\",\n      title: item.freelancerName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"user1\",\n      src: `https://dhihitu47nqhv.cloudfront.net/${item.userProfileUrl}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }))), index == 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"role-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 34\n      }\n    }, \"Team members\"));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center button-assign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    type: \"button\",\n    onClick: handleCreateTeam,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, \" \", \"Create a team\", \" \", loading ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-spinner fa-spin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 31\n    }\n  }) : \"\"))));\n}\n\nexport default TeamCreation;","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/companyAdmin/adminDashboard/teamCreation/index.js"],"names":["React","useState","Modal","Avatar","Grid","Stack","DropdownList","withStyles","makeStyles","Tooltip","notifications","getOptions","postMultipartFile","postOptions","request","ENDPOINT","useStylesBootstrap","theme","arrow","color","palette","common","black","tooltip","backgroundColor","zIndex","BootstrapTooltip","props","classes","TeamCreation","OrganizationFreelancers","index","setIndex","onHideCallBack","show","selectedTeam","setSelectedTeam","teamName","setTeamName","selectedMember","setSelectedMember","selectedTeamMembers","setSelectedTeamMembers","errorMessage","setErrorMessage","loading","setLoading","onTeamChange","value","handleSelectTeamMember","preSelectedTeamMembers","Member","find","item","individualFreelancerId","newMember","handleValidation","formIsValid","window","scrollTo","top","behavior","showWarning","length","handleCreateTeam","params","organizationId","teamLeaderId","freelancerMemberIds","map","result","success","showSuccess","handleSuccess","e","target","text","freelancerName","userProfileUrl"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport DropdownList from \"../../../../components/dropdowns/dropdownList\";\nimport \"./teamCreation.scss\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport notifications from \"../../../../utils/notifications\";\nimport {\n  getOptions,\n  postMultipartFile,\n  postOptions,\n} from \"../../../../utils/httpConfig\";\nimport request from \"../../../../utils/request\";\nimport { ENDPOINT } from \"../../../../utils/endpoint\";\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n  arrow: {\n    color: theme.palette.common.black,\n  },\n  tooltip: {\n    backgroundColor: theme.palette.common.black,\n    zIndex: 999999,\n  },\n}));\n\nfunction BootstrapTooltip(props) {\n  const classes = useStylesBootstrap();\n\n  return <Tooltip arrow classes={classes} {...props} />;\n}\n\nfunction TeamCreation(props) {\n  let OrganizationFreelancers=props.OrganizationFreelancers\n  const [index, setIndex] = useState(0);\n  const { onHideCallBack, show } = props;\n  const [selectedTeam, setSelectedTeam] = useState(null);\n  const [teamName, setTeamName] = useState(null);\n  const [selectedMember, setSelectedMember] = useState(null);\n  const [selectedTeamMembers, setSelectedTeamMembers] = useState([]);\n  const [errorMessage,setErrorMessage] = useState({});\n  const [loading,setLoading] = useState(false);\n  const onTeamChange = (value) => {\n    setSelectedTeam(value);\n  };\n\n  const handleSelectTeamMember=(value)=>{\n    setSelectedMember(value)\n    let preSelectedTeamMembers=selectedTeamMembers;\n      let Member=preSelectedTeamMembers.find((item)=>item.individualFreelancerId===value)\n    if(!Member){\n      let newMember=OrganizationFreelancers.find((item)=>item.individualFreelancerId===value)\n      setSelectedTeamMembers([...preSelectedTeamMembers,newMember])\n    }\n  }\n  const handleValidation=()=>{\n    let formIsValid = true;\n    let errorMessage = {};\n    if (!teamName) {\n      formIsValid = false;\n      errorMessage[\"teamName\"] = \"This field is required!\";\n      window.scrollTo({\n        top: \"198\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"Team name is required!\");\n      return;\n    }\n    if (!selectedTeam) {\n      formIsValid = false;\n      errorMessage[\"selectedTeam\"] = \"This field is required!\";\n      window.scrollTo({\n        top: \"198\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"Team leader is required!\");\n      return;\n    }\n    if (selectedTeamMembers.length===0) {\n      formIsValid = false;\n      errorMessage[\"selectedTeam\"] = \"This field is required!\";\n      window.scrollTo({\n        top: \"198\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"At least one team member is required\");\n      return;\n    }\n\n    if (!selectedTeamMembers.find((item)=>item.individualFreelancerId===selectedTeam)){\n      formIsValid = false;\n      errorMessage[\"selectedTeam\"] = \"This field is required!\";\n      notifications.showWarning(\"Team leader should be a member of team\");\n      return;\n    }\n    setErrorMessage(errorMessage)\n    return formIsValid;\n  }\n\n  const handleCreateTeam=async ()=>{\n    if(handleValidation()){\n      setLoading(true)\n\n      let params={\n        organizationId:selectedTeamMembers[0].organizationId,\n        teamName:teamName,\n        teamLeaderId:selectedTeam,\n        freelancerMemberIds:selectedTeamMembers.map((item)=>item.individualFreelancerId)\n      }\n\n      let result = await request(\n        `${ENDPOINT[\"CreateOrganizationTeam\"]}`,\n        postOptions(params)\n      );\n      if (result.success) {\n\n        notifications.showSuccess(\"Team is successfully created\")\n        props.handleSuccess()\n        setLoading(false)\n        props.onHideCallBack()\n        setTeamName('')\n        setSelectedTeam('')\n        setSelectedTeamMembers([])\n      }else{\n        setLoading(false)\n      }\n\n\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={() => onHideCallBack()} centered backdrop={true}>\n      <Modal.Body className=\"modal-body-content-team-creation\">\n        <div className=\"title\">\n          <h3>Team Creation</h3>\n        </div>\n\n        <div className=\"input-id-wrapper\">\n          <input placeholder=\"Team name\" value={teamName} onChange={(e)=>setTeamName(e.target.value)} className=\"input-id\" />\n        </div>\n\n        <div className=\"dropdown-list\">\n          <DropdownList\n            id=\"team\"\n            name=\"team\"\n            placeHolder=\"Select a lead\"\n            value={selectedTeam}\n            items={props.OrganizationFreelancers.map((item)=>({value:item.individualFreelancerId,text:item.freelancerName}))}\n            selectItem={onTeamChange}\n          />\n        </div>\n\n        <div className=\"dropdown-list\">\n          <DropdownList\n            id=\"team\"\n            name=\"team\"\n            placeHolder=\"Members\"\n            value={selectedMember}\n            items={props.OrganizationFreelancers.map((item)=>({value:item.individualFreelancerId,text:item.freelancerName}))}\n            selectItem={handleSelectTeamMember}\n          />\n        </div>\n        { \n          OrganizationFreelancers && OrganizationFreelancers.length>0 && selectedTeam &&  <div className=\"stack\">\n          <Stack direction=\"row\">\n          <div className=\"role-wrapper\">\n                  <div className=\"team-leader\">\n                    <Avatar alt=\"user1\" src={`https://dhihitu47nqhv.cloudfront.net/${OrganizationFreelancers.find((item)=>item.individualFreelancerId===selectedTeam).userProfileUrl}`} /> {\" \"} <span> {OrganizationFreelancers.find((item)=>item.individualFreelancerId===selectedTeam).freelancerName}</span>\n                  </div>\n               <div className=\"role-title\"> Team Lead</div>\n                </div>\n          </Stack>\n        </div>\n        }\n        {\n          selectedTeamMembers.length>0 &&         <div className=\"stack\">\n          <Stack direction=\"row\">\n            {selectedTeamMembers.map((item, index) => {\n              return (\n                <div className=\"role-wrapper\">\n                  <div className=\"team-leader\">\n                  <BootstrapTooltip placement=\"top\" title={item.freelancerName}>\n                    <Avatar alt=\"user1\" src={`https://dhihitu47nqhv.cloudfront.net/${item.userProfileUrl}`} />\n                    </BootstrapTooltip>\n                  </div>\n                  {index == 1 && <div className=\"role-title\">Team members</div>}\n                </div>\n              );\n            })}\n          </Stack>\n        </div>\n        }\n\n        <div className=\"text-center button-assign\">\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={handleCreateTeam}\n            disabled={loading}\n          >\n            {\" \"}\n            Create a team{\" \"}\n            {loading ? (\n                              <i className=\"fa fa-spinner fa-spin\"></i>\n                            ) : (\n                              \"\"\n                            )}\n          </button>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default TeamCreation;\n"]},"metadata":{},"sourceType":"module"}
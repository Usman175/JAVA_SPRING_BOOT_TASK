{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/contest/createProject/basicContestInfo.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Label from \"../../../components/postProject/label\";\nimport { v4 } from \"uuid\";\nimport DropdownList from \"../../../components/dropdowns/dropdownList\";\nimport notifications from \"../../../utils/notifications\";\nimport \"../contest.scss\";\nconst images = [];\nconst logo = [];\n\nfor (let i = 0; i < 16; i++) {\n  images.push({\n    id: v4(),\n    img: `https://source.unsplash.com/collection/151521/200x170?${i}`\n  });\n}\n\nlogo[0] = {\n  id: v4(),\n  img: `https://dxnqsgisijbjj.cloudfront.net/jungleworks/image/client_img.jpg`\n};\nlogo[1] = {\n  id: v4(),\n  img: \"https://dxnqsgisijbjj.cloudfront.net/jungleworks/image/renew-jungleworks-logo.png\"\n};\n\nfunction BasicContestInfo(props) {\n  const [errorMessage, setErrorMessage] = useState({});\n  const [designValidate, setDesignValidate] = useState({\n    currentData: 0,\n    max: 5,\n    min: 1\n  });\n  const [isContestTitleHide, setIsContestTitleHide] = useState(false);\n  let {\n    contestDetail\n  } = props;\n  const languageType = useSelector(state => state.languageReducer.languageType);\n\n  const handleChange = (field, e, value) => {\n    if (field === \"contestDesignStyles\") {\n      props.setContestDetail({ ...contestDetail,\n        contestDesignType: value,\n        [field]: value === \"Logo Design\" ? logo : value === \"Package Design\" ? images : [],\n        contestDesignStyleSamples: []\n      });\n    } else {\n      props.setContestDetail({ ...contestDetail,\n        [field]: e.target.value\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (contestDetail.projectId) {} else {\n      setIsContestTitleHide(false);\n    }\n  }, []);\n\n  const checkValidationCheckbox = event => {\n    let isSelected = event.currentTarget.checked;\n    const styleImg = event.currentTarget.dataset.id;\n\n    if (isSelected) {\n      if (designValidate.currentData < designValidate.max) {\n        setDesignValidate({ ...designValidate,\n          currentData: designValidate.currentData + 1\n        });\n        props.setContestDetail({ ...contestDetail,\n          contestDesignStyleSamples: [...contestDetail.contestDesignStyleSamples, contestDetail.contestDesignStyles.find(s => s.img === styleImg) || []]\n        });\n      } else {\n        event.preventDefault();\n        event.currentTarget.checked = false;\n        notifications.showError(\"You can only select maximum of 5 styles.\");\n      }\n    } else {\n      if (designValidate.currentData > designValidate.min) {\n        setDesignValidate({ ...designValidate,\n          currentData: designValidate.currentData - 1\n        });\n        props.setContestDetail({ ...contestDetail,\n          contestDesignStyleSamples: contestDetail.contestDesignStyleSamples.filter(s => s.img != styleImg)\n        });\n      } else {\n        setDesignValidate({ ...designValidate,\n          currentData: designValidate.currentData - 1\n        });\n        props.setContestDetail({ ...contestDetail,\n          contestDesignStyleSamples: contestDetail.contestDesignStyleSamples.filter(s => s.img != styleImg)\n        });\n      }\n    }\n\n    return;\n  };\n\n  const onFileChange = e => {\n    props.setContestDetail({ ...contestDetail,\n      contestDesignPreferenceAttachFile: e.target.files[0],\n      contestDesignPreferenceAttachFileName: e.target.files[0].name\n    });\n  };\n\n  const sliderCss = field => {\n    return {\n      left: `${parseInt(field || \"50\") - 4.6 * (0.9 - parseInt(field || \"50\") / 100)}%`,\n      transform: `translateX(-${field || \"50\"}%)`\n    };\n  };\n\n  const handleValidation = () => {\n    var _contestDetail$jobTit, _contestDetail$jobTit2, _contestDetail$contes;\n\n    let errorMessage = {};\n    let formIsValid = true;\n\n    if ((contestDetail.projectId === \"\" || contestDetail.projectId === null || contestDetail.projectId === undefined) && (contestDetail.jobTitle === null || (contestDetail === null || contestDetail === void 0 ? void 0 : (_contestDetail$jobTit = contestDetail.jobTitle) === null || _contestDetail$jobTit === void 0 ? void 0 : _contestDetail$jobTit.trim()) === \"\" || contestDetail.jobTitle === undefined || (contestDetail === null || contestDetail === void 0 ? void 0 : (_contestDetail$jobTit2 = contestDetail.jobTitle) === null || _contestDetail$jobTit2 === void 0 ? void 0 : _contestDetail$jobTit2.match(/\\S+/g).length) < 3)) {\n      var _contestDetail$jobTit3;\n\n      formIsValid = false;\n      errorMessage[\"jobTitle\"] = (contestDetail === null || contestDetail === void 0 ? void 0 : (_contestDetail$jobTit3 = contestDetail.jobTitle) === null || _contestDetail$jobTit3 === void 0 ? void 0 : _contestDetail$jobTit3.split(\" \").length) < 3 ? \"Minimum 3 words are required\" : languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\"\n      });\n    } else if (!contestDetail.contestDesignStyles || contestDetail.contestDesignStyles.length <= 0) {\n      formIsValid = false;\n      errorMessage[\"contestDesignStyles\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"120\",\n        behavior: \"smooth\"\n      });\n    } else if (contestDetail.contestDesignRequirement === null || contestDetail.contestDesignRequirement === \"\" || contestDetail.contestDesignRequirement === undefined || ((_contestDetail$contes = contestDetail.contestDesignRequirement) === null || _contestDetail$contes === void 0 ? void 0 : _contestDetail$contes.replace(/<[^>]*>/g, \"\").match(/\\S+/g).length) < 10) {\n      var _contestDetail$contes2, _contestDetail$contes3;\n\n      formIsValid = false;\n      errorMessage[\"contestDesignRequirement\"] = (contestDetail === null || contestDetail === void 0 ? void 0 : contestDetail.contestDesignRequirement) && (contestDetail === null || contestDetail === void 0 ? void 0 : (_contestDetail$contes2 = contestDetail.contestDesignRequirement) === null || _contestDetail$contes2 === void 0 ? void 0 : _contestDetail$contes2.split(\" \").length) < 10 && (contestDetail === null || contestDetail === void 0 ? void 0 : (_contestDetail$contes3 = contestDetail.contestDesignRequirement) === null || _contestDetail$contes3 === void 0 ? void 0 : _contestDetail$contes3.split(\" \").length) > 0 ? \"Minimum 10 words are required\" : languageType.REQUIRED_MESSAGE;\n    }\n\n    setErrorMessage(errorMessage);\n    return formIsValid;\n  };\n\n  const onHandlePage = () => {\n    if (handleValidation()) {\n      props.setTab(\"advance\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contest_bodr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contest-field-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contest-initial-guide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \"1.\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, languageType.CONTEST_STEP_TITLE_1), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, languageType.CONTEST_STEP_DESC_1)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contest_width add-title\",\n    hidden: isContestTitleHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    title: languageType.CONTEST_TITLE,\n    prefixBoxValid: errorMessage[\"jobTitle\"] ? false : true,\n    prefixBoxInValid: errorMessage[\"jobTitle\"] ? true : false,\n    compulsory: true,\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control h3\",\n    placeholder: languageType.CONTEST_TITLE,\n    name: \"jobTitle\",\n    maxLength: \"100\",\n    value: contestDetail.jobTitle,\n    onChange: e => handleChange(\"jobTitle\", e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }), errorMessage.jobTitle && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, errorMessage.jobTitle)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contest-field-area favorite-design-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contest-initial-guide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, \"2.\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, languageType.CONTEST_STEP_TITLE_2), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, languageType.CONTEST_STEP_DESC_2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contest_width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    title: languageType.SELECT_DESIGN_STYLE,\n    compulsory: true,\n    prefixBoxValid: errorMessage[\"contestDesignStyles\"] ? false : true,\n    prefixBoxInValid: errorMessage[\"contestDesignStyles\"] ? true : false,\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DropdownList, {\n    id: \"contestDesignStyles\",\n    name: \"contestDesignStyles\",\n    enableAutoCompleteSearch: true,\n    placeholder: languageType.SELECT_DESIGN_STYLE,\n    value: contestDetail.contestDesignType,\n    selectItem: value => {\n      handleChange(\"contestDesignStyles\", null, value);\n    },\n    items: [{\n      text: \"Logo/Branding\",\n      value: \"Logo Design\"\n    }, {\n      text: \"Package Design\",\n      value: \"Package Design\"\n    }, {\n      text: \"Naming\",\n      value: \"Naming\"\n    }, {\n      text: \"Product/3D\",\n      value: \"Product/3D\"\n    }, {\n      text: \"Printing\",\n      value: \"Printing\"\n    }, {\n      text: \"Web/Mobile\",\n      value: \"Web/Mobile\"\n    }, {\n      text: \"Character\",\n      value: \"Character\"\n    }, {\n      text: \"Graphic\",\n      value: \"Graphic\"\n    }, {\n      text: \"Others\",\n      value: \"Others\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, errorMessage.contestDesignStyles)), contestDetail.contestDesignStyles && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"style_box\",\n    style: {\n      marginBottom: \"25px\",\n      marginTop: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center\",\n    style: {\n      height: \"250px\",\n      overflowX: \"hidden\",\n      overflowY: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 19\n    }\n  }, contestDetail.contestDesignStyles.map((e, index) => {\n    var _contestDetail$contes4;\n\n    let checked = false;\n    if ((contestDetail === null || contestDetail === void 0 ? void 0 : (_contestDetail$contes4 = contestDetail.contestDesignStyleSamples) === null || _contestDetail$contes4 === void 0 ? void 0 : _contestDetail$contes4.filter(x => x.id === e.id).length) > 0) checked = true;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3\",\n      key: e.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"form-check-input\",\n      name: \"contestDesignStyles\",\n      \"data-id\": e.img,\n      id: `contestDesignStyles${index}`,\n      checked: checked,\n      onChange: e => {\n        checkValidationCheckbox(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        width: \"auto\",\n        height: \"auto\"\n      },\n      className: \"form-check-label\",\n      htmlFor: `contestDesignStyles${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: e.img,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 29\n      }\n    })));\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 19\n    }\n  }, errorMessage.selectedStyles)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contest-field-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contest-initial-guide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  }, \"3.\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }, languageType.CONTEST_STEP_TITLE_3), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }, languageType.CONTEST_STEP_DESC_3), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  }, \"4.\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 11\n    }\n  }, languageType.CONTEST_STEP_TITLE_4), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 11\n    }\n  }, languageType.CONTEST_STEP_DESC_4)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contest_width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    title: languageType.WRITE_YOUR_DESIGN_REQUIREMENT,\n    compulsory: true,\n    prefixBoxValid: errorMessage[\"contestDesignRequirement\"] ? false : true,\n    prefixBoxInValid: errorMessage[\"contestDesignRequirement\"] ? true : false,\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    maxLength: \"500\",\n    placeholder: languageType.WRITE_YOUR_DESIGN_REQUIREMENT,\n    rows: \"6\",\n    name: \"contestDesignRequirement\",\n    value: contestDetail.contestDesignRequirement,\n    onChange: e => handleChange(\"contestDesignRequirement\", e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }\n  }), errorMessage.contestDesignRequirement && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 19\n    }\n  }, errorMessage.contestDesignRequirement)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-10 col-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      font: \"normal normal normal 14px/19px Roboto\",\n      color: \"#101010\",\n      maxWidth: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 21\n    }\n  }, languageType.ATTACH_ADDITIONAL_DESIGN)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2 col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group upload_file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exampleFormControlFile1\",\n    style: {\n      height: \"10px\",\n      paddingTop: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-upload\",\n    style: {\n      fontSize: 15\n    },\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control-file\",\n    id: \"exampleFormControlFile1\",\n    onChange: e => onFileChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pt-2 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 17\n    }\n  }, contestDetail.contestDesignPreferenceAttachFileName && contestDetail.contestDesignPreferenceAttachFileName)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-12 col-md-12 contest_rangeMobileAlign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contest_range mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      font: \"normal normal normal 14px/19px Roboto\",\n      color: \"#101010\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 11\n    }\n  }, languageType.DESIGN_PREFERENCE, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center custom_range\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"contest-preference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 17\n    }\n  }, languageType.MALE), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"range_slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"1\",\n    max: \"100\",\n    defaultValue: contestDetail.maleFemalePercentage,\n    className: \"slider\",\n    id: \"gender\",\n    onChange: e => handleChange(\"maleFemalePercentage\", e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    htmlFor: \"myRange\",\n    className: \"slider-bubble\",\n    style: sliderCss(contestDetail.maleFemalePercentage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 19\n    }\n  }, \" \", `${contestDetail.maleFemalePercentage}%`, \" \")), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"contest-preference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 17\n    }\n  }, languageType.FEMALE)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center custom_range\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"contest-preference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 17\n    }\n  }, languageType.YOUNG), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"range_slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"1\",\n    max: \"100\",\n    defaultValue: contestDetail.youngMaturePercentage,\n    className: \"slider\",\n    id: \"age\",\n    onChange: e => handleChange(\"youngMaturePercentage\", e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    htmlFor: \"myRange\",\n    className: \"slider-bubble\",\n    style: sliderCss(contestDetail.youngMaturePercentage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 19\n    }\n  }, `${contestDetail.youngMaturePercentage}%`)), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"contest-preference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 17\n    }\n  }, languageType.MATURE)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center custom_range\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"contest-preference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 17\n    }\n  }, languageType.MODERN), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"range_slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"1\",\n    max: \"100\",\n    defaultValue: contestDetail.modernClassicPercentage,\n    className: \"slider\",\n    id: \"modern\",\n    onChange: e => handleChange(\"modernClassicPercentage\", e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    htmlFor: \"myRange\",\n    className: \"slider-bubble\",\n    style: sliderCss(contestDetail.modernClassicPercentage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 19\n    }\n  }, `${contestDetail.modernClassicPercentage}%`)), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"contest-preference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 17\n    }\n  }, languageType.CLASSIC))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center custom_range\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"contest-preference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 17\n    }\n  }, languageType.LUXURY), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"range_slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"1\",\n    max: \"100\",\n    defaultValue: contestDetail.luxuryPublicPercentage,\n    className: \"slider\",\n    id: \"luxury\",\n    onChange: e => handleChange(\"luxuryPublicPercentage\", e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    htmlFor: \"myRange\",\n    className: \"slider-bubble\",\n    style: sliderCss(contestDetail.luxuryPublicPercentage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 19\n    }\n  }, `${contestDetail.luxuryPublicPercentage}%`)), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"contest-preference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 17\n    }\n  }, languageType.PUBLIC)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center custom_range\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"contest-preference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 17\n    }\n  }, languageType.SIMPLE), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"range_slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"1\",\n    max: \"100\",\n    defaultValue: contestDetail.simpleComplexPercentage,\n    className: \"slider\",\n    id: \"complexity\",\n    onChange: e => handleChange(\"simpleComplexPercentage\", e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    htmlFor: \"myRange\",\n    className: \"slider-bubble\",\n    style: sliderCss(contestDetail.simpleComplexPercentage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 19\n    }\n  }, `${contestDetail.simpleComplexPercentage}%`)), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"contest-preference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 17\n    }\n  }, languageType.COMPLEX)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center custom_range\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"contest-preference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 17\n    }\n  }, languageType.CONCRETE), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"range_slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"1\",\n    max: \"100\",\n    defaultValue: contestDetail.abstractConcretePercentage,\n    className: \"slider\",\n    id: \"abstract\",\n    onChange: e => handleChange(\"abstractConcretePercentage\", e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    htmlFor: \"myRange\",\n    className: \"slider-bubble\",\n    style: sliderCss(contestDetail.abstractConcretePercentage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 19\n    }\n  }, `${contestDetail.abstractConcretePercentage}%`)), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"contest-preference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 17\n    }\n  }, languageType.ABSTRACT)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"save_cancel btnSpaceTop proposal-submission-buttons NextBtnProjectPostMobileF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => onHandlePage(),\n    type: \"button\",\n    className: \"btn contest-project-post-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 9\n    }\n  }, languageType.NEXT_TEXT)));\n}\n\nexport default BasicContestInfo;","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/contest/createProject/basicContestInfo.js"],"names":["React","useEffect","useState","useSelector","Label","v4","DropdownList","notifications","images","logo","i","push","id","img","BasicContestInfo","props","errorMessage","setErrorMessage","designValidate","setDesignValidate","currentData","max","min","isContestTitleHide","setIsContestTitleHide","contestDetail","languageType","state","languageReducer","handleChange","field","e","value","setContestDetail","contestDesignType","contestDesignStyleSamples","target","projectId","checkValidationCheckbox","event","isSelected","currentTarget","checked","styleImg","dataset","contestDesignStyles","find","s","preventDefault","showError","filter","onFileChange","contestDesignPreferenceAttachFile","files","contestDesignPreferenceAttachFileName","name","sliderCss","left","parseInt","transform","handleValidation","formIsValid","undefined","jobTitle","trim","match","length","split","REQUIRED_MESSAGE","window","scrollTo","top","behavior","contestDesignRequirement","replace","onHandlePage","setTab","CONTEST_STEP_TITLE_1","CONTEST_STEP_DESC_1","CONTEST_TITLE","CONTEST_STEP_TITLE_2","CONTEST_STEP_DESC_2","SELECT_DESIGN_STYLE","text","marginBottom","marginTop","height","overflowX","overflowY","map","index","x","width","selectedStyles","CONTEST_STEP_TITLE_3","CONTEST_STEP_DESC_3","CONTEST_STEP_TITLE_4","CONTEST_STEP_DESC_4","WRITE_YOUR_DESIGN_REQUIREMENT","font","color","maxWidth","ATTACH_ADDITIONAL_DESIGN","paddingTop","fontSize","DESIGN_PREFERENCE","MALE","maleFemalePercentage","FEMALE","YOUNG","youngMaturePercentage","MATURE","MODERN","modernClassicPercentage","CLASSIC","LUXURY","luxuryPublicPercentage","PUBLIC","SIMPLE","simpleComplexPercentage","COMPLEX","CONCRETE","abstractConcretePercentage","ABSTRACT","NEXT_TEXT"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Label from \"../../../components/postProject/label\";\nimport { v4 } from \"uuid\";\nimport DropdownList from \"../../../components/dropdowns/dropdownList\";\nimport notifications from \"../../../utils/notifications\";\nimport \"../contest.scss\";\nconst images = [];\nconst logo = [];\nfor (let i = 0; i < 16; i++) {\n  images.push({\n    id: v4(),\n    img: `https://source.unsplash.com/collection/151521/200x170?${i}`,\n  });\n}\n\nlogo[0] = {\n  id: v4(),\n  img: `https://dxnqsgisijbjj.cloudfront.net/jungleworks/image/client_img.jpg`,\n};\n\nlogo[1] = {\n  id: v4(),\n  img: \"https://dxnqsgisijbjj.cloudfront.net/jungleworks/image/renew-jungleworks-logo.png\",\n};\n\nfunction BasicContestInfo(props) {\n  const [errorMessage, setErrorMessage] = useState({});\n  const [designValidate, setDesignValidate] = useState({\n    currentData: 0,\n    max: 5,\n    min: 1,\n  });\n  const [isContestTitleHide, setIsContestTitleHide] = useState(false);\n  let { contestDetail } = props;\n\n  const languageType = useSelector(\n    (state) => state.languageReducer.languageType\n  );\n  const handleChange = (field, e, value) => {\n    if (field === \"contestDesignStyles\") {\n      props.setContestDetail({\n        ...contestDetail,\n        contestDesignType: value,\n        [field]:\n          value === \"Logo Design\"\n            ? logo\n            : value === \"Package Design\"\n            ? images\n            : [],\n        contestDesignStyleSamples: [],\n      });\n    } else {\n      props.setContestDetail({ ...contestDetail, [field]: e.target.value });\n    }\n  };\n\n  useEffect(() => {\n    if (contestDetail.projectId) {\n    } else {\n      setIsContestTitleHide(false);\n    }\n  }, []);\n\n  const checkValidationCheckbox = (event) => {\n    let isSelected = event.currentTarget.checked;\n    const styleImg = event.currentTarget.dataset.id;\n    if (isSelected) {\n      if (designValidate.currentData < designValidate.max) {\n        setDesignValidate({\n          ...designValidate,\n          currentData: designValidate.currentData + 1,\n        });\n   props.setContestDetail({\n          ...contestDetail,\n          contestDesignStyleSamples: [\n            ...contestDetail.contestDesignStyleSamples,\n            contestDetail.contestDesignStyles.find((s) => s.img === styleImg) || [],\n          ],\n        });\n      } else {\n        event.preventDefault();\n        event.currentTarget.checked = false;\n        notifications.showError(\"You can only select maximum of 5 styles.\");\n      }\n    } else {\n      if (designValidate.currentData > designValidate.min) {\n        setDesignValidate({\n          ...designValidate,\n          currentData: designValidate.currentData - 1,\n        });\n        props.setContestDetail({\n          ...contestDetail,\n          contestDesignStyleSamples:\n            contestDetail.contestDesignStyleSamples.filter(\n              (s) => s.img != styleImg\n            ),\n        });\n      } else {\n        setDesignValidate({\n          ...designValidate,\n          currentData: designValidate.currentData - 1,\n        });\n        props.setContestDetail({\n          ...contestDetail,\n          contestDesignStyleSamples:\n            contestDetail.contestDesignStyleSamples.filter(\n              (s) => s.img != styleImg\n            ),\n        });\n      }\n    }\n\n    return;\n  };\n  const onFileChange = (e) => {\n    props.setContestDetail({\n      ...contestDetail,\n      contestDesignPreferenceAttachFile: e.target.files[0],\n      contestDesignPreferenceAttachFileName: e.target.files[0].name,\n    });\n  };\n  const sliderCss = (field) => {\n    return {\n      left: `${\n        parseInt(field || \"50\") - 4.6 * (0.9 - parseInt(field || \"50\") / 100)\n      }%`,\n      transform: `translateX(-${field || \"50\"}%)`,\n    };\n  };\n  const handleValidation = () => {\n    let errorMessage = {};\n    let formIsValid = true;\n\n    if (\n      (contestDetail.projectId === \"\" ||\n        contestDetail.projectId === null ||\n        contestDetail.projectId === undefined) &&\n      (contestDetail.jobTitle === null ||\n        contestDetail?.jobTitle?.trim() === \"\" ||\n        contestDetail.jobTitle === undefined ||\n        contestDetail?.jobTitle?.match(/\\S+/g).length < 3)\n    ) {\n      formIsValid = false;\n      errorMessage[\"jobTitle\"] =\n        contestDetail?.jobTitle?.split(\" \").length < 3\n          ? \"Minimum 3 words are required\"\n          : languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\",\n      });\n    } else if (\n      !contestDetail.contestDesignStyles ||\n      contestDetail.contestDesignStyles.length <= 0\n    ) {\n      formIsValid = false;\n      errorMessage[\"contestDesignStyles\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"120\",\n        behavior: \"smooth\",\n      });\n    } else if (\n      contestDetail.contestDesignRequirement === null ||\n      contestDetail.contestDesignRequirement === \"\" ||\n      contestDetail.contestDesignRequirement === undefined ||\n      contestDetail.contestDesignRequirement\n        ?.replace(/<[^>]*>/g, \"\")\n        .match(/\\S+/g).length < 10\n    ) {\n      formIsValid = false;\n      errorMessage[\"contestDesignRequirement\"] =\n        contestDetail?.contestDesignRequirement &&\n        contestDetail?.contestDesignRequirement?.split(\" \").length < 10 &&\n        contestDetail?.contestDesignRequirement?.split(\" \").length > 0\n          ? \"Minimum 10 words are required\"\n          : languageType.REQUIRED_MESSAGE;\n    }\n    setErrorMessage(errorMessage);\n    return formIsValid;\n  };\n\n  const onHandlePage = () => {\n    if (handleValidation()) {\n      props.setTab(\"advance\");\n    }\n  };\n\n  return (\n    <div className=\"contest_bodr\">\n      <div className=\"contest-field-area\">\n        <div className=\"contest-initial-guide\">\n          <h3>1.</h3>\n          <h3>{languageType.CONTEST_STEP_TITLE_1}</h3>\n          <p>{languageType.CONTEST_STEP_DESC_1}</p>\n        </div>\n        <div className=\"contest_width add-title\" hidden={isContestTitleHide}>\n          <Label\n            title={languageType.CONTEST_TITLE}\n            prefixBoxValid={errorMessage[\"jobTitle\"] ? false : true}\n            prefixBoxInValid={errorMessage[\"jobTitle\"] ? true : false}\n            compulsory={true}\n            primary={true}\n          />\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control h3\"\n              placeholder={languageType.CONTEST_TITLE}\n              name=\"jobTitle\"\n              maxLength=\"100\"\n              value={contestDetail.jobTitle}\n              onChange={(e) => handleChange(\"jobTitle\", e)}\n            />\n            {errorMessage.jobTitle && (\n              <p className=\"text-danger\">{errorMessage.jobTitle}</p>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"contest-field-area favorite-design-wrapper\">\n        <div className=\"contest-initial-guide\">\n          <h3>2.</h3>\n          <h3>{languageType.CONTEST_STEP_TITLE_2}</h3>\n          <p>{languageType.CONTEST_STEP_DESC_2}</p>\n        </div>\n\n        <div className=\"contest_width\">\n          <div className=\"form-group\">\n            <Label\n              title={languageType.SELECT_DESIGN_STYLE}\n              compulsory={true}\n              prefixBoxValid={\n                errorMessage[\"contestDesignStyles\"] ? false : true\n              }\n              prefixBoxInValid={\n                errorMessage[\"contestDesignStyles\"] ? true : false\n              }\n              primary={true}\n            />\n\n            <DropdownList\n              id=\"contestDesignStyles\"\n              name=\"contestDesignStyles\"\n              enableAutoCompleteSearch\n              placeholder={languageType.SELECT_DESIGN_STYLE}\n              value={contestDetail.contestDesignType}\n              selectItem={(value) => {\n                handleChange(\"contestDesignStyles\", null, value);\n              }}\n              items={[\n                {\n                  text: \"Logo/Branding\",\n                  value: \"Logo Design\",\n                },\n                {\n                  text: \"Package Design\",\n                  value: \"Package Design\",\n                },\n                {\n                  text: \"Naming\",\n                  value: \"Naming\",\n                },\n                {\n                  text: \"Product/3D\",\n                  value: \"Product/3D\",\n                },\n                {\n                  text: \"Printing\",\n                  value: \"Printing\",\n                },\n                {\n                  text: \"Web/Mobile\",\n                  value: \"Web/Mobile\",\n                },\n                {\n                  text: \"Character\",\n                  value: \"Character\",\n                },\n                {\n                  text: \"Graphic\",\n                  value: \"Graphic\",\n                },\n                {\n                  text: \"Others\",\n                  value: \"Others\",\n                },\n              ]}\n            />\n            <span className=\"error\">{errorMessage.contestDesignStyles}</span>\n          </div>\n          {contestDetail.contestDesignStyles && (\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div\n                  className=\"style_box\"\n                  style={{ marginBottom: \"25px\", marginTop: \"15px\" }}\n                >\n                  <div\n                    className=\"row align-items-center\"\n                    style={{\n                      height: \"250px\",\n                      overflowX: \"hidden\",\n                      overflowY: \"auto\",\n                    }}\n                  >\n                    {contestDetail.contestDesignStyles.map((e, index) => {\n                      let checked = false;\n                      if (\n                        contestDetail?.contestDesignStyleSamples?.filter(\n                          (x) => x.id === e.id\n                        ).length > 0\n                      )\n                        checked = true;\n                      return (\n                        <div className=\"col-md-3\" key={e.id}>\n                          <input\n                            type=\"checkbox\"\n                            className=\"form-check-input\"\n                            name=\"contestDesignStyles\"\n                            data-id={e.img}\n                            id={`contestDesignStyles${index}`}\n                            checked={checked}\n                            onChange={(e) => {\n                              checkValidationCheckbox(e);\n                            }}\n                          />\n                          <label\n                            style={{\n                              width: \"auto\",\n                              height: \"auto\",\n                            }}\n                            className=\"form-check-label\"\n                            htmlFor={`contestDesignStyles${index}`}\n                          >\n                            <img src={e.img} alt=\"\" />\n                          </label>\n                        </div>\n                      );\n                    })}\n                  </div>\n                  <span className=\"error\">{errorMessage.selectedStyles}</span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"contest-field-area\">\n        <div className=\"contest-initial-guide\">\n          <h3>3.</h3>\n          <h3>{languageType.CONTEST_STEP_TITLE_3}</h3>\n          <p>{languageType.CONTEST_STEP_DESC_3}</p>\n          <br />\n          <br />\n          <h3>4.</h3>\n          <h3>{languageType.CONTEST_STEP_TITLE_4}</h3>\n          <p>{languageType.CONTEST_STEP_DESC_4}</p>\n        </div>\n\n        <div className=\"contest_width\">\n          <div className=\"form-group\">\n            <Label\n              title={languageType.WRITE_YOUR_DESIGN_REQUIREMENT}\n              compulsory={true}\n              prefixBoxValid={\n                errorMessage[\"contestDesignRequirement\"] ? false : true\n              }\n              prefixBoxInValid={\n                errorMessage[\"contestDesignRequirement\"] ? true : false\n              }\n              primary={true}\n            />\n\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <textarea\n                  className=\"form-control\"\n                  maxLength=\"500\"\n                  placeholder={languageType.WRITE_YOUR_DESIGN_REQUIREMENT}\n                  rows=\"6\"\n                  name=\"contestDesignRequirement\"\n                  value={contestDetail.contestDesignRequirement}\n                  onChange={(e) => handleChange(\"contestDesignRequirement\", e)}\n                />\n                {errorMessage.contestDesignRequirement && (\n                  <p className=\"text-danger\">\n                    {errorMessage.contestDesignRequirement}\n                  </p>\n                )}\n              </div>\n              <div className=\"col-md-12 pt-2\">\n                <div className=\"row\">\n                  <div className=\"col-md-10 col-10\">\n                    <p\n                      style={{\n                        font: \"normal normal normal 14px/19px Roboto\",\n                        color: \"#101010\",\n                        maxWidth: \"100%\",\n                      }}\n                    >\n                      {languageType.ATTACH_ADDITIONAL_DESIGN}\n                    </p>\n                  </div>\n                  <div className=\"col-md-2 col-2\">\n                    <div className=\"form-group upload_file\">\n                      <label\n                        htmlFor=\"exampleFormControlFile1\"\n                        style={{\n                          height: \"10px\",\n                          paddingTop: \"15px\",\n                        }}\n                      >\n                        <i\n                          className=\"fa fa-upload\"\n                          style={{ fontSize: 15 }}\n                          aria-hidden=\"true\"\n                        ></i>\n                      </label>\n\n                      <input\n                        type=\"file\"\n                        className=\"form-control-file\"\n                        id=\"exampleFormControlFile1\"\n                        onChange={(e) => onFileChange(e)}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-12 pt-2 py-2\">\n                  {contestDetail.contestDesignPreferenceAttachFileName &&\n                    contestDetail.contestDesignPreferenceAttachFileName}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-lg-12 col-md-12 contest_rangeMobileAlign\">\n        <div className=\"contest_range mt-4\">\n          <p\n            style={{\n              font: \"normal normal normal 14px/19px Roboto\",\n              color: \"#101010\",\n            }}\n          >\n            {languageType.DESIGN_PREFERENCE}:\n          </p>\n          <div className=\"row justify-content-between\">\n            <div className=\"col-md-6\">\n              <div className=\"d-flex align-items-center custom_range\">\n                <label className=\"contest-preference\">\n                  {languageType.MALE}\n                </label>\n                <div className=\"range_slider\">\n                  <input\n                    type=\"range\"\n                    min=\"1\"\n                    max=\"100\"\n                    defaultValue={contestDetail.maleFemalePercentage}\n                    className=\"slider\"\n                    id=\"gender\"\n                    onChange={(e) => handleChange(\"maleFemalePercentage\", e)}\n                  />\n                  <span\n                    htmlFor=\"myRange\"\n                    className=\"slider-bubble\"\n                    style={sliderCss(contestDetail.maleFemalePercentage)}\n                  >\n                    {\" \"}\n                    {`${contestDetail.maleFemalePercentage}%`}{\" \"}\n                  </span>\n                </div>\n                <label className=\"contest-preference\">\n                  {languageType.FEMALE}\n                </label>\n              </div>\n              <div className=\"d-flex align-items-center custom_range\">\n                <label className=\"contest-preference\">\n                  {languageType.YOUNG}\n                </label>\n                <div className=\"range_slider\">\n                  <input\n                    type=\"range\"\n                    min=\"1\"\n                    max=\"100\"\n                    defaultValue={contestDetail.youngMaturePercentage}\n                    className=\"slider\"\n                    id=\"age\"\n                    onChange={(e) => handleChange(\"youngMaturePercentage\", e)}\n                  />\n                  <span\n                    htmlFor=\"myRange\"\n                    className=\"slider-bubble\"\n                    style={sliderCss(contestDetail.youngMaturePercentage)}\n                  >\n                    {`${contestDetail.youngMaturePercentage}%`}\n                  </span>\n                </div>\n                <label className=\"contest-preference\">\n                  {languageType.MATURE}\n                </label>\n              </div>\n              <div className=\"d-flex align-items-center custom_range\">\n                <label className=\"contest-preference\">\n                  {languageType.MODERN}\n                </label>\n                <div className=\"range_slider\">\n                  <input\n                    type=\"range\"\n                    min=\"1\"\n                    max=\"100\"\n                    defaultValue={contestDetail.modernClassicPercentage}\n                    className=\"slider\"\n                    id=\"modern\"\n                    onChange={(e) => handleChange(\"modernClassicPercentage\", e)}\n                  />\n                  <span\n                    htmlFor=\"myRange\"\n                    className=\"slider-bubble\"\n                    style={sliderCss(contestDetail.modernClassicPercentage)}\n                  >\n                    {`${contestDetail.modernClassicPercentage}%`}\n                  </span>\n                </div>\n                <label className=\"contest-preference\">\n                  {languageType.CLASSIC}\n                </label>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"d-flex align-items-center custom_range\">\n                <label className=\"contest-preference\">\n                  {languageType.LUXURY}\n                </label>\n                <div className=\"range_slider\">\n                  <input\n                    type=\"range\"\n                    min=\"1\"\n                    max=\"100\"\n                    defaultValue={contestDetail.luxuryPublicPercentage}\n                    className=\"slider\"\n                    id=\"luxury\"\n                    onChange={(e) => handleChange(\"luxuryPublicPercentage\", e)}\n                  />\n                  <span\n                    htmlFor=\"myRange\"\n                    className=\"slider-bubble\"\n                    style={sliderCss(contestDetail.luxuryPublicPercentage)}\n                  >\n                    {`${contestDetail.luxuryPublicPercentage}%`}\n                  </span>\n                </div>\n                <label className=\"contest-preference\">\n                  {languageType.PUBLIC}\n                </label>\n              </div>\n              <div className=\"d-flex align-items-center custom_range\">\n                <label className=\"contest-preference\">\n                  {languageType.SIMPLE}\n                </label>\n                <div className=\"range_slider\">\n                  <input\n                    type=\"range\"\n                    min=\"1\"\n                    max=\"100\"\n                    defaultValue={contestDetail.simpleComplexPercentage}\n                    className=\"slider\"\n                    id=\"complexity\"\n                    onChange={(e) => handleChange(\"simpleComplexPercentage\", e)}\n                  />\n                  <span\n                    htmlFor=\"myRange\"\n                    className=\"slider-bubble\"\n                    style={sliderCss(contestDetail.simpleComplexPercentage)}\n                  >\n                    {`${contestDetail.simpleComplexPercentage}%`}\n                  </span>\n                </div>\n                <label className=\"contest-preference\">\n                  {languageType.COMPLEX}\n                </label>\n              </div>\n              <div className=\"d-flex align-items-center custom_range\">\n                <label className=\"contest-preference\">\n                  {languageType.CONCRETE}\n                </label>\n                <div className=\"range_slider\">\n                  <input\n                    type=\"range\"\n                    min=\"1\"\n                    max=\"100\"\n                    defaultValue={contestDetail.abstractConcretePercentage}\n                    className=\"slider\"\n                    id=\"abstract\"\n                    onChange={(e) =>\n                      handleChange(\"abstractConcretePercentage\", e)\n                    }\n                  />\n                  <span\n                    htmlFor=\"myRange\"\n                    className=\"slider-bubble\"\n                    style={sliderCss(contestDetail.abstractConcretePercentage)}\n                  >\n                    {`${contestDetail.abstractConcretePercentage}%`}\n                  </span>\n                </div>\n                <label className=\"contest-preference\">\n                  {languageType.ABSTRACT}\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"save_cancel btnSpaceTop proposal-submission-buttons NextBtnProjectPostMobileF\">\n        <span></span>\n        <button\n          onClick={() => onHandlePage()}\n          type=\"button\"\n          className=\"btn contest-project-post-btn\"\n        >\n          {languageType.NEXT_TEXT}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default BasicContestInfo;\n"]},"metadata":{},"sourceType":"module"}
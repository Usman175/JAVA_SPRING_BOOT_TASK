{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/work/myRegion.jsx\";\nimport { GoogleApiWrapper, InfoWindow, Map, Marker } from \"google-maps-react\";\nimport v4 from \"uuid\";\nimport React, { Component } from \"react\";\nimport { ReactNotifyAlert } from \"react-notify-alert\";\nimport \"react-notify-alert/dist/index.css\";\nimport { connect } from \"react-redux\";\nimport DeleteModal from \"../../components/modals/deleteModal.js\";\nimport { ENDPOINT } from \"../../utils/endpoint\";\nimport { getOptions, postOptions } from \"../../utils/httpConfig\";\nimport notifications from \"../../utils/notifications\";\nimport request from \"../../utils/request\";\nimport AddressManipulation from \"./addressmanipulation\";\nimport { isEmpty, stubTrue } from \"lodash\";\nimport moment from \"moment\";\nimport Heading from \"../../components/postProject/heading\";\nimport { selectSubScopes, selectSubScopesFromScope } from \"../../utils/helpers\";\nimport \"./work.scss\";\nimport SubHeader from '../../components/subHeader/index';\n\nclass MyRegion extends Component {\n  constructor(props) {\n    var _props$authUser, _props$authUser$myAut, _props$authUser$myAut2;\n\n    super(props);\n    this.myMap = React.createRef();\n    this.myRange = React.createRef(30);\n\n    this.bindCountry = async () => {\n      let array = [];\n      let result = await request(`${ENDPOINT[\"GeneralSettings\"]}?settingName=Countries`, getOptions({}));\n\n      if (result.success) {\n        if (result.result.data.length > 0) {\n          for (let index = 0; index < result.result.data[0].data.length; index++) {\n            const element = result.result.data[0].data[index];\n            array.push({\n              id: element.id,\n              name: element.name\n            });\n          }\n\n          this.setState({\n            countries: array\n          });\n        } else {\n          alert(\"No Country\");\n        }\n      } else {\n        alert(\"No Country\");\n      }\n    };\n\n    this.bindCities = async countryId => {\n      let array = [];\n      let result = await request(`${ENDPOINT[\"GeneralSettings\"]}?settingName=city_country_` + countryId, getOptions({}));\n\n      if (result.success) {\n        if (result.result.data.length > 0) {\n          for (let index = 0; index < result.result.data[0].data.length; index++) {\n            const element = result.result.data[0].data[index];\n            array.push({\n              id: element.id,\n              name: element.name\n            });\n          }\n\n          this.setState({\n            cities: array\n          });\n        } else {\n          alert(\"No City\");\n        }\n      } else {\n        alert(\"No City\");\n      }\n    };\n\n    this.onAddressSubmit = async data => {\n      let result = await request(`${ENDPOINT[\"GeneralSettings\"]}?settingName=city_info_` + data.cityId, getOptions({}));\n\n      if (result.success) {\n        if (result.result.data.length > 0) {\n          for (let index = 0; index < result.result.data[0].data.length; index++) {\n            const element = result.result.data[0].data[0].name;\n            const info = JSON.parse(element); //Call CreateAddress as per LoginUserId\n\n            var params = {\n              city: info.name,\n              street1: data.addressdetail,\n              userId: this.state.postUserId,\n              country: info.country_name,\n              statename: info.state_name,\n              isDefault: this.state.isMain,\n              regionId: info.region,\n              latitude: info.latitude,\n              longitude: info.longitude\n            };\n            let postresult = await request(ENDPOINT[\"PostUserAddress\"], postOptions(params));\n\n            if (postresult.success) {\n              this.closeModel();\n              this.setState({\n                alertSetting: {\n                  isOpen: true,\n                  type: result.success ? \"success\" : \"failed\",\n                  title: result.success ? \"Success\" : \"Failed\",\n                  infoText: \"You have Successfully Added Address\"\n                }\n              }); //this.BindAllLocations();\n            } else {\n              notifications.showError(postresult && postresult.message || \"Something went wrong\");\n            }\n          }\n        }\n      }\n    };\n\n    this.onUpdateAddress = async data => {\n      data.isDefault = true;\n      let postresult = await request(ENDPOINT[\"UpdateUserAddress\"], postOptions(data));\n\n      if (postresult.success) {\n        //this.BindAllLocations();\n        this.setState({\n          alertSetting: {\n            isOpen: true,\n            type: postresult.success ? \"Success\" : \"Failed\",\n            title: postresult.success ? \"Success\" : \"Failed\",\n            infoText: \"You have Successfully Updated Address\"\n          }\n        });\n      } else {\n        notifications.showError(postresult.message);\n      }\n    };\n\n    this.onDeleteAddress = async data => {\n      this.setState({\n        currentAddress: { ...data\n        }\n      }, () => {\n        this.setState({\n          openDeleteAlert: true\n        });\n      });\n    };\n\n    this.onTabChangeHandle = selectedTab => {\n      this.setState({\n        activeTab: selectedTab\n      });\n    };\n\n    this.BindAllLocations = async () => {\n      let param = {\n        userId: this.state.postUserId\n      };\n      let result = await request(ENDPOINT[\"GetUserAddress\"], postOptions(param));\n\n      if (result.success) {\n        this.setState({\n          getAllLocations: result.result\n        }); //Get Default Addresss and Bind Map\n\n        if (result.result.length > 0) {\n          let defaultLocation = result.result.filter(item => item.isDefault === true);\n\n          if (defaultLocation != null) {\n            if (defaultLocation.length > 0) {\n              // debugger;\n              let setDefaultLocation = {\n                lat: parseFloat(defaultLocation[0].latitude, 10),\n                lng: parseFloat(defaultLocation[0].longitude, 10)\n              };\n              let queryString = `?projectTypes=Office Work,Free Contract` + `&country=` + defaultLocation[0].country + `&city=` + defaultLocation[0].city + `&region=` + defaultLocation[0].regionId;\n              this.setState({\n                currentLocation: setDefaultLocation\n              });\n            }\n          }\n\n          this.setState({\n            openAlert: false\n          });\n        } else {\n          this.getUserLocation();\n          this.setState({\n            openAlert: true\n          });\n        }\n      } else {\n        //this.getUserLocation();\n        this.setState({\n          openAlert: true\n        });\n      }\n    };\n\n    this.closeModel = () => {\n      this.setState({\n        currentAddress: {}\n      });\n      this.BindAllLocations();\n      this.setState({\n        alertSetting: {\n          open: false,\n          type: \"\",\n          title: \"\",\n          message: \"\"\n        }\n      });\n    };\n\n    this.openModal = () => {\n      this.bindCountry();\n      this.setState({\n        openAlert: true\n      });\n    };\n\n    this.onActionHandle = async () => {\n      let postResult = await request(ENDPOINT[\"DeleteUserAddress\"], postOptions(this.state.currentAddress));\n\n      if (postResult.success) {\n        this.setState({\n          openDeleteAlert: false\n        });\n      } else {\n        notifications.showError(postResult && postResult.message);\n      }\n\n      this.closeModel();\n    };\n\n    this.handleAddNewAddress = () => {\n      this.setState({\n        addNewAddressFlag: true\n      });\n      window.scrollTo({\n        top: 200,\n        behavior: \"smooth\"\n      });\n    };\n\n    this.handleCancelAddress = () => {\n      this.setState({\n        addNewAddressFlag: false\n      });\n    };\n\n    let sessionUserType = sessionStorage.getItem(\"userType\");\n    this.state = {\n      openAlert: false,\n      addNewAddressFlag: false,\n      openDeleteAlert: false,\n      currentLocation: {\n        lat: 37.550844,\n        lng: 126.988552\n      },\n      countries: [],\n      range: 30,\n      zoom: 17,\n      cities: [],\n      coords: [{\n        lat: 37.545936,\n        lng: 126.977823,\n        range: 100\n      }, {\n        lat: 37.556397,\n        lng: 126.994634,\n        range: 80\n      }, {\n        lat: 37.561474,\n        lng: 126.979881,\n        range: 50\n      }, {\n        lat: 37.583965,\n        lng: 126.944493,\n        range: 120\n      }],\n      postUserId: (_props$authUser = props.authUser) === null || _props$authUser === void 0 ? void 0 : (_props$authUser$myAut = _props$authUser.myAuth) === null || _props$authUser$myAut === void 0 ? void 0 : (_props$authUser$myAut2 = _props$authUser$myAut.user) === null || _props$authUser$myAut2 === void 0 ? void 0 : _props$authUser$myAut2.userId,\n      projectsMapViewData: [],\n      activeTab: 1,\n      getAllLocations: {},\n      businessCategory: \"\",\n      businessCategories: [],\n      isMain: false,\n      stores: [{\n        lat: 47.49855629475769,\n        lng: -122.14184416996333\n      }, {\n        latitude: 47.359423,\n        longitude: -122.021071\n      }, {\n        latitude: 47.2052192687988,\n        longitude: -121.988426208496\n      }, {\n        latitude: 47.6307081,\n        longitude: -122.1434325\n      }, {\n        latitude: 47.3084488,\n        longitude: -122.2140121\n      }, {\n        latitude: 47.5524695,\n        longitude: -122.0425407\n      }],\n      bounds: {},\n      markerHtml: \"\",\n      infoHtml: \"\",\n      alertSetting: {\n        open: false,\n        type: \"\",\n        title: \"\",\n        message: \"\"\n      },\n      currentAddress: {},\n      userType: sessionUserType,\n      pagination: {\n        pageSize: 100,\n        lastPkEvaluated: \"\",\n        pageNumber: 1\n      },\n      isSkeletonLoading: false,\n      freelancerData: [],\n      lastPkEvaluatedTrack: [],\n      projectTypes: [],\n      showingInfoWindow: true,\n      activemarker: {}\n    };\n  } //Start onLOad\n\n\n  async componentDidMount() {\n    await this.BindAllLocations();\n    await this.bindCountry();\n    await this.getBusinessCategories();\n  } //End onLoad\n\n\n  async getBusinessCategories() {\n    let categoryResponse = await request(`${ENDPOINT[\"GeneralSettings\"]}?settingName=businessCategory`, getOptions({})); // debugger;\n\n    if (categoryResponse.success) {\n      this.setState({\n        businessCategories: categoryResponse && categoryResponse.result && categoryResponse.result.data && categoryResponse.result.data[0] && categoryResponse.result.data[0].data\n      });\n    } else {\n      notifications.showError(categoryResponse && categoryResponse.message);\n    }\n  } //Start Bind General Setting\n\n\n  getUserLocation() {\n    if (navigator.geolocation) {\n      //The working next statement.\n      const scope = this;\n      navigator.geolocation.getCurrentPosition(function (position) {\n        // Set State to users position\n        scope.setState({\n          currentLocation: scope.state.currentLocation\n        });\n      }, function (e) {\n        //Your error handling here\n        console.log(e);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 5000\n      });\n    }\n  } //End On Load Function\n  //Start Check Location\n\n\n  componentWillUpdate(prevProps, nextState) {\n    const prevRange = this.state.range;\n    const nextRange = nextState.range;\n\n    if (prevRange !== nextRange) {\n      this.setState({\n        currentLocation: this.state.currentLocation\n      });\n    }\n  } //End Check Location\n  //Start Modal Actions\n\n\n  render() {\n    console.log(\"cun sas asm as sma \", this.state); //Start GOOGLE MAP\n\n    const {\n      currentLocation,\n      userType,\n      zoom,\n      stores,\n      activeTab,\n      getAllLocations,\n      addNewAddressFlag\n    } = this.state;\n    const {\n      lookUpData\n    } = this.props;\n    let {\n      authUser,\n      languageType\n    } = this.props; //End GOOGLE MAP\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SubHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"card_sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bcknd_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-8 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project_post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      heading: \"Register new address\",\n      color: \"#333333\",\n      fontSize: \"26px\",\n      fontWeight: \"600\",\n      fontFamily: \"Raleway\",\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/addressIcon.svg\",\n      marginTop: \"6px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(AddressManipulation, {\n      handleCancelAddress: this.handleCancelAddress,\n      bindCities: this.bindCities,\n      cities: this.state.cities,\n      country: lookUpData.country,\n      countries: this.state.countries,\n      languageType: languageType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project_post invoice_tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"business_category post_form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-content\",\n      id: \"pills-tabContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      heading: \"All address\",\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/resume1.png\",\n      color: \"#333333\",\n      fontSize: \"26px\",\n      fontWeight: \"600\",\n      fontFamily: \"Raleway\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn cancel_btn my-3  \",\n      onClick: () => this.handleAddNewAddress() // this.openModal()\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 23\n      }\n    }, \"Add New Address\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn cancel_btn my-3 custom-address-button-margin\",\n      onClick: () => this.props.history.push(\"/clients-region\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 23\n      }\n    }, \"Client region\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn cancel_btn my-3 custom-address-button2-margin\",\n      onClick: () => this.props.history.push(\"/freelancers-region\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 23\n      }\n    }, \"Freelancer region\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-pane fade show active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"business_category post_form registerAddress_tableMobile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive detail_tbl feedback_tbl coupon_tbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 35\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 35\n      }\n    }, \"Main Address\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 35\n      }\n    }, \"Region\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 35\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 35\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 35\n      }\n    }, \"Address Detail\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 35\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 31\n      }\n    }, getAllLocations && getAllLocations.length > 0 ? getAllLocations.map((location, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 39\n      }\n    }, idx + 1), location.isDefault == true ? /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: \"30\",\n      height: \"-2px\",\n      src: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/greenTick.svg\",\n      alt: \"client-img\",\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 43\n      }\n    }), \" \") : /*#__PURE__*/React.createElement(\"td\", {\n      onClick: () => this.onUpdateAddress(location),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 41\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      width: \"30\",\n      height: \"-2px\",\n      src: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/tick.svg\",\n      alt: \"client-img\",\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 43\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 39\n      }\n    }, location.regionId), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 39\n      }\n    }, location.country), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 39\n      }\n    }, \" \", location.city), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 39\n      }\n    }, location.street1, \" \", \"  \", \" \", location.street2, \" \", location.statename), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 39\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn cancel_btn\",\n      onClick: () => this.onDeleteAddress(location),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 41\n      }\n    }, \"Delete\")))) : /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 37\n      }\n    }, \"There is no data data to display\"))))))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(DeleteModal, {\n      showModal: this.state.openDeleteAlert,\n      ModalTitle: \"Delete Address\",\n      ModalMessage: \"Are you sure to delete this Address ?\",\n      emitToHideDeleteModal: value => this.setState({\n        openDeleteAlert: value\n      }),\n      emitTheDeleteAction: () => this.onActionHandle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ReactNotifyAlert, {\n      isOpen: this.state.alertSetting.isOpen,\n      type: this.state.alertSetting.type,\n      title: this.state.alertSetting.title,\n      infoText: this.state.alertSetting.infoText,\n      onActionHandle: e => this.closeModel(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    authUser: state.authReducer,\n    userReducer: state.userReducer,\n    activeRoute: state.routeStore.activeRoute,\n    languageType: state.languageReducer.languageType,\n    lookUpData: state.lookUp.lookUpData,\n    languageReducer: state.languageReducer // defaultAddress:state.lookUp.defaultAddress\n\n  };\n}\n\nconst WrappedContainer = GoogleApiWrapper({\n  apiKey: \"AIzaSyA8hPK8F-8BbO-8H6tQZuiopY5nYES1UR0\",\n  sensor: true\n})(MyRegion);\nexport default connect(mapStateToProps)(WrappedContainer);","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/work/myRegion.jsx"],"names":["GoogleApiWrapper","InfoWindow","Map","Marker","v4","React","Component","ReactNotifyAlert","connect","DeleteModal","ENDPOINT","getOptions","postOptions","notifications","request","AddressManipulation","isEmpty","stubTrue","moment","Heading","selectSubScopes","selectSubScopesFromScope","SubHeader","MyRegion","constructor","props","myMap","createRef","myRange","bindCountry","array","result","success","data","length","index","element","push","id","name","setState","countries","alert","bindCities","countryId","cities","onAddressSubmit","cityId","info","JSON","parse","params","city","street1","addressdetail","userId","state","postUserId","country","country_name","statename","state_name","isDefault","isMain","regionId","region","latitude","longitude","postresult","closeModel","alertSetting","isOpen","type","title","infoText","showError","message","onUpdateAddress","onDeleteAddress","currentAddress","openDeleteAlert","onTabChangeHandle","selectedTab","activeTab","BindAllLocations","param","getAllLocations","defaultLocation","filter","item","setDefaultLocation","lat","parseFloat","lng","queryString","currentLocation","openAlert","getUserLocation","open","openModal","onActionHandle","postResult","handleAddNewAddress","addNewAddressFlag","window","scrollTo","top","behavior","handleCancelAddress","sessionUserType","sessionStorage","getItem","range","zoom","coords","authUser","myAuth","user","projectsMapViewData","businessCategory","businessCategories","stores","bounds","markerHtml","infoHtml","userType","pagination","pageSize","lastPkEvaluated","pageNumber","isSkeletonLoading","freelancerData","lastPkEvaluatedTrack","projectTypes","showingInfoWindow","activemarker","componentDidMount","getBusinessCategories","categoryResponse","navigator","geolocation","scope","getCurrentPosition","position","e","console","log","enableHighAccuracy","timeout","componentWillUpdate","prevProps","nextState","prevRange","nextRange","render","lookUpData","languageType","history","map","location","idx","street2","value","mapStateToProps","authReducer","userReducer","activeRoute","routeStore","languageReducer","lookUp","WrappedContainer","apiKey","sensor"],"mappings":";AAAA,SAASA,gBAAT,EAA2BC,UAA3B,EAAuCC,GAAvC,EAA4CC,MAA5C,QAA0D,mBAA1D;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAO,mCAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,wBAAxC;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,QAAlC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,SAASC,eAAT,EAA0BC,wBAA1B,QAA0D,qBAA1D;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,kCAAtB;;AACA,MAAMC,QAAN,SAAuBjB,SAAvB,CAAiC;AAG/BkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA;;AACjB,UAAMA,KAAN;AADiB,SAFnBC,KAEmB,GAFXrB,KAAK,CAACsB,SAAN,EAEW;AAAA,SADnBC,OACmB,GADTvB,KAAK,CAACsB,SAAN,CAAgB,EAAhB,CACS;;AAAA,SAsFnBE,WAtFmB,GAsFL,YAAY;AACxB,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,MAAM,GAAG,MAAMjB,OAAO,CACvB,GAAEJ,QAAQ,CAAC,iBAAD,CAAoB,wBADP,EAExBC,UAAU,CAAC,EAAD,CAFc,CAA1B;;AAIA,UAAIoB,MAAM,CAACC,OAAX,EAAoB;AAClB,YAAID,MAAM,CAACA,MAAP,CAAcE,IAAd,CAAmBC,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,eACE,IAAIC,KAAK,GAAG,CADd,EAEEA,KAAK,GAAGJ,MAAM,CAACA,MAAP,CAAcE,IAAd,CAAmB,CAAnB,EAAsBA,IAAtB,CAA2BC,MAFrC,EAGEC,KAAK,EAHP,EAIE;AACA,kBAAMC,OAAO,GAAGL,MAAM,CAACA,MAAP,CAAcE,IAAd,CAAmB,CAAnB,EAAsBA,IAAtB,CAA2BE,KAA3B,CAAhB;AACAL,YAAAA,KAAK,CAACO,IAAN,CAAW;AACTC,cAAAA,EAAE,EAAEF,OAAO,CAACE,EADH;AAETC,cAAAA,IAAI,EAAEH,OAAO,CAACG;AAFL,aAAX;AAID;;AACD,eAAKC,QAAL,CAAc;AAAEC,YAAAA,SAAS,EAAEX;AAAb,WAAd;AACD,SAbD,MAaO;AACLY,UAAAA,KAAK,CAAC,YAAD,CAAL;AACD;AACF,OAjBD,MAiBO;AACLA,QAAAA,KAAK,CAAC,YAAD,CAAL;AACD;AACF,KAhHkB;;AAAA,SAiHnBC,UAjHmB,GAiHN,MAAOC,SAAP,IAAqB;AAChC,UAAId,KAAK,GAAG,EAAZ;AACA,UAAIC,MAAM,GAAG,MAAMjB,OAAO,CACvB,GAAEJ,QAAQ,CAAC,iBAAD,CAAoB,4BAA/B,GAA6DkC,SADrC,EAExBjC,UAAU,CAAC,EAAD,CAFc,CAA1B;;AAIA,UAAIoB,MAAM,CAACC,OAAX,EAAoB;AAClB,YAAID,MAAM,CAACA,MAAP,CAAcE,IAAd,CAAmBC,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,eACE,IAAIC,KAAK,GAAG,CADd,EAEEA,KAAK,GAAGJ,MAAM,CAACA,MAAP,CAAcE,IAAd,CAAmB,CAAnB,EAAsBA,IAAtB,CAA2BC,MAFrC,EAGEC,KAAK,EAHP,EAIE;AACA,kBAAMC,OAAO,GAAGL,MAAM,CAACA,MAAP,CAAcE,IAAd,CAAmB,CAAnB,EAAsBA,IAAtB,CAA2BE,KAA3B,CAAhB;AACAL,YAAAA,KAAK,CAACO,IAAN,CAAW;AACTC,cAAAA,EAAE,EAAEF,OAAO,CAACE,EADH;AAETC,cAAAA,IAAI,EAAEH,OAAO,CAACG;AAFL,aAAX;AAID;;AACD,eAAKC,QAAL,CAAc;AAAEK,YAAAA,MAAM,EAAEf;AAAV,WAAd;AACD,SAbD,MAaO;AACLY,UAAAA,KAAK,CAAC,SAAD,CAAL;AACD;AACF,OAjBD,MAiBO;AACLA,QAAAA,KAAK,CAAC,SAAD,CAAL;AACD;AACF,KA3IkB;;AAAA,SA+InBI,eA/ImB,GA+ID,MAAOb,IAAP,IAAgB;AAChC,UAAIF,MAAM,GAAG,MAAMjB,OAAO,CACvB,GAAEJ,QAAQ,CAAC,iBAAD,CAAoB,yBAA/B,GAA0DuB,IAAI,CAACc,MADvC,EAExBpC,UAAU,CAAC,EAAD,CAFc,CAA1B;;AAIA,UAAIoB,MAAM,CAACC,OAAX,EAAoB;AAClB,YAAID,MAAM,CAACA,MAAP,CAAcE,IAAd,CAAmBC,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,eACE,IAAIC,KAAK,GAAG,CADd,EAEEA,KAAK,GAAGJ,MAAM,CAACA,MAAP,CAAcE,IAAd,CAAmB,CAAnB,EAAsBA,IAAtB,CAA2BC,MAFrC,EAGEC,KAAK,EAHP,EAIE;AACA,kBAAMC,OAAO,GAAGL,MAAM,CAACA,MAAP,CAAcE,IAAd,CAAmB,CAAnB,EAAsBA,IAAtB,CAA2B,CAA3B,EAA8BM,IAA9C;AACA,kBAAMS,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWd,OAAX,CAAb,CAFA,CAIA;;AACA,gBAAIe,MAAM,GAAG;AACXC,cAAAA,IAAI,EAAEJ,IAAI,CAACT,IADA;AAEXc,cAAAA,OAAO,EAAEpB,IAAI,CAACqB,aAFH;AAGXC,cAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,UAHR;AAIXC,cAAAA,OAAO,EAAEV,IAAI,CAACW,YAJH;AAKXC,cAAAA,SAAS,EAAEZ,IAAI,CAACa,UALL;AAMXC,cAAAA,SAAS,EAAE,KAAKN,KAAL,CAAWO,MANX;AAOXC,cAAAA,QAAQ,EAAEhB,IAAI,CAACiB,MAPJ;AAQXC,cAAAA,QAAQ,EAAElB,IAAI,CAACkB,QARJ;AASXC,cAAAA,SAAS,EAAEnB,IAAI,CAACmB;AATL,aAAb;AAYA,gBAAIC,UAAU,GAAG,MAAMtD,OAAO,CAC5BJ,QAAQ,CAAC,iBAAD,CADoB,EAE5BE,WAAW,CAACuC,MAAD,CAFiB,CAA9B;;AAKA,gBAAIiB,UAAU,CAACpC,OAAf,EAAwB;AACtB,mBAAKqC,UAAL;AACA,mBAAK7B,QAAL,CAAc;AACZ8B,gBAAAA,YAAY,EAAE;AACZC,kBAAAA,MAAM,EAAE,IADI;AAEZC,kBAAAA,IAAI,EAAEzC,MAAM,CAACC,OAAP,GAAiB,SAAjB,GAA6B,QAFvB;AAGZyC,kBAAAA,KAAK,EAAE1C,MAAM,CAACC,OAAP,GAAiB,SAAjB,GAA6B,QAHxB;AAIZ0C,kBAAAA,QAAQ,EAAE;AAJE;AADF,eAAd,EAFsB,CAUtB;AACD,aAXD,MAWO;AACL7D,cAAAA,aAAa,CAAC8D,SAAd,CACGP,UAAU,IAAIA,UAAU,CAACQ,OAA1B,IAAsC,sBADxC;AAGD;AACF;AACF;AACF;AACF,KAnMkB;;AAAA,SAqMnBC,eArMmB,GAqMD,MAAO5C,IAAP,IAAgB;AAChCA,MAAAA,IAAI,CAAC6B,SAAL,GAAiB,IAAjB;AACA,UAAIM,UAAU,GAAG,MAAMtD,OAAO,CAC5BJ,QAAQ,CAAC,mBAAD,CADoB,EAE5BE,WAAW,CAACqB,IAAD,CAFiB,CAA9B;;AAKA,UAAImC,UAAU,CAACpC,OAAf,EAAwB;AACtB;AACA,aAAKQ,QAAL,CAAc;AACZ8B,UAAAA,YAAY,EAAE;AACZC,YAAAA,MAAM,EAAE,IADI;AAEZC,YAAAA,IAAI,EAAEJ,UAAU,CAACpC,OAAX,GAAqB,SAArB,GAAiC,QAF3B;AAGZyC,YAAAA,KAAK,EAAEL,UAAU,CAACpC,OAAX,GAAqB,SAArB,GAAiC,QAH5B;AAIZ0C,YAAAA,QAAQ,EAAE;AAJE;AADF,SAAd;AAQD,OAVD,MAUO;AACL7D,QAAAA,aAAa,CAAC8D,SAAd,CAAwBP,UAAU,CAACQ,OAAnC;AACD;AACF,KAzNkB;;AAAA,SA2NnBE,eA3NmB,GA2ND,MAAO7C,IAAP,IAAgB;AAChC,WAAKO,QAAL,CAAc;AAAEuC,QAAAA,cAAc,EAAE,EAAE,GAAG9C;AAAL;AAAlB,OAAd,EAA+C,MAAM;AACnD,aAAKO,QAAL,CAAc;AAAEwC,UAAAA,eAAe,EAAE;AAAnB,SAAd;AACD,OAFD;AAGD,KA/NkB;;AAAA,SAkOnBC,iBAlOmB,GAkOEC,WAAD,IAAiB;AACnC,WAAK1C,QAAL,CAAc;AACZ2C,QAAAA,SAAS,EAAED;AADC,OAAd;AAGD,KAtOkB;;AAAA,SAyOnBE,gBAzOmB,GAyOA,YAAY;AAC7B,UAAIC,KAAK,GAAG;AACV9B,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC;AADT,OAAZ;AAIA,UAAI1B,MAAM,GAAG,MAAMjB,OAAO,CAACJ,QAAQ,CAAC,gBAAD,CAAT,EAA6BE,WAAW,CAACyE,KAAD,CAAxC,CAA1B;;AAEA,UAAItD,MAAM,CAACC,OAAX,EAAoB;AAClB,aAAKQ,QAAL,CAAc;AAAE8C,UAAAA,eAAe,EAAEvD,MAAM,CAACA;AAA1B,SAAd,EADkB,CAElB;;AAEA,YAAIA,MAAM,CAACA,MAAP,CAAcG,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,cAAIqD,eAAe,GAAGxD,MAAM,CAACA,MAAP,CAAcyD,MAAd,CACnBC,IAAD,IAAUA,IAAI,CAAC3B,SAAL,KAAmB,IADT,CAAtB;;AAIA,cAAIyB,eAAe,IAAI,IAAvB,EAA6B;AAC3B,gBAAIA,eAAe,CAACrD,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B;AACA,kBAAIwD,kBAAkB,GAAG;AACvBC,gBAAAA,GAAG,EAAEC,UAAU,CAACL,eAAe,CAAC,CAAD,CAAf,CAAmBrB,QAApB,EAA8B,EAA9B,CADQ;AAEvB2B,gBAAAA,GAAG,EAAED,UAAU,CAACL,eAAe,CAAC,CAAD,CAAf,CAAmBpB,SAApB,EAA+B,EAA/B;AAFQ,eAAzB;AAKA,kBAAI2B,WAAW,GACZ,yCAAD,GACC,WADD,GAEAP,eAAe,CAAC,CAAD,CAAf,CAAmB7B,OAFnB,GAGC,QAHD,GAIA6B,eAAe,CAAC,CAAD,CAAf,CAAmBnC,IAJnB,GAKC,UALD,GAMAmC,eAAe,CAAC,CAAD,CAAf,CAAmBvB,QAPrB;AAWA,mBAAKxB,QAAL,CAAc;AAAEuD,gBAAAA,eAAe,EAAEL;AAAnB,eAAd;AACD;AACF;;AACD,eAAKlD,QAAL,CAAc;AAAEwD,YAAAA,SAAS,EAAE;AAAb,WAAd;AACD,SA5BD,MA4BO;AACL,eAAKC,eAAL;AACA,eAAKzD,QAAL,CAAc;AAAEwD,YAAAA,SAAS,EAAE;AAAb,WAAd;AACD;AACF,OApCD,MAoCO;AACL;AACA,aAAKxD,QAAL,CAAc;AAAEwD,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;AACF,KAxRkB;;AAAA,SA0TnB3B,UA1TmB,GA0TN,MAAM;AACjB,WAAK7B,QAAL,CAAc;AAAEuC,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACA,WAAKK,gBAAL;AACA,WAAK5C,QAAL,CAAc;AACZ8B,QAAAA,YAAY,EAAE;AAAE4B,UAAAA,IAAI,EAAE,KAAR;AAAe1B,UAAAA,IAAI,EAAE,EAArB;AAAyBC,UAAAA,KAAK,EAAE,EAAhC;AAAoCG,UAAAA,OAAO,EAAE;AAA7C;AADF,OAAd;AAGD,KAhUkB;;AAAA,SAkUnBuB,SAlUmB,GAkUP,MAAM;AAChB,WAAKtE,WAAL;AACA,WAAKW,QAAL,CAAc;AAAEwD,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KArUkB;;AAAA,SAwUnBI,cAxUmB,GAwUF,YAAY;AAC3B,UAAIC,UAAU,GAAG,MAAMvF,OAAO,CAC5BJ,QAAQ,CAAC,mBAAD,CADoB,EAE5BE,WAAW,CAAC,KAAK4C,KAAL,CAAWuB,cAAZ,CAFiB,CAA9B;;AAIA,UAAIsB,UAAU,CAACrE,OAAf,EAAwB;AACtB,aAAKQ,QAAL,CAAc;AAAEwC,UAAAA,eAAe,EAAE;AAAnB,SAAd;AACD,OAFD,MAEO;AACLnE,QAAAA,aAAa,CAAC8D,SAAd,CAAwB0B,UAAU,IAAIA,UAAU,CAACzB,OAAjD;AACD;;AACD,WAAKP,UAAL;AACD,KAnVkB;;AAAA,SAyVnBiC,mBAzVmB,GAyVG,MAAM;AAC1B,WAAK9D,QAAL,CAAc;AAAE+D,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgB;AACdC,QAAAA,GAAG,EAAE,GADS;AAEdC,QAAAA,QAAQ,EAAE;AAFI,OAAhB;AAID,KA/VkB;;AAAA,SAgWnBC,mBAhWmB,GAgWG,MAAM;AAC1B,WAAKpE,QAAL,CAAc;AAAE+D,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACD,KAlWkB;;AAEjB,QAAIM,eAAe,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAtB;AAEA,SAAKvD,KAAL,GAAa;AACXwC,MAAAA,SAAS,EAAE,KADA;AAEXO,MAAAA,iBAAiB,EAAE,KAFR;AAGXvB,MAAAA,eAAe,EAAE,KAHN;AAIXe,MAAAA,eAAe,EAAE;AACfJ,QAAAA,GAAG,EAAE,SADU;AAEfE,QAAAA,GAAG,EAAE;AAFU,OAJN;AAQXpD,MAAAA,SAAS,EAAE,EARA;AASXuE,MAAAA,KAAK,EAAE,EATI;AAUXC,MAAAA,IAAI,EAAE,EAVK;AAWXpE,MAAAA,MAAM,EAAE,EAXG;AAYXqE,MAAAA,MAAM,EAAE,CACN;AAAEvB,QAAAA,GAAG,EAAE,SAAP;AAAkBE,QAAAA,GAAG,EAAE,UAAvB;AAAmCmB,QAAAA,KAAK,EAAE;AAA1C,OADM,EAGN;AAAErB,QAAAA,GAAG,EAAE,SAAP;AAAkBE,QAAAA,GAAG,EAAE,UAAvB;AAAmCmB,QAAAA,KAAK,EAAE;AAA1C,OAHM,EAKN;AAAErB,QAAAA,GAAG,EAAE,SAAP;AAAkBE,QAAAA,GAAG,EAAE,UAAvB;AAAmCmB,QAAAA,KAAK,EAAE;AAA1C,OALM,EAON;AAAErB,QAAAA,GAAG,EAAE,SAAP;AAAkBE,QAAAA,GAAG,EAAE,UAAvB;AAAmCmB,QAAAA,KAAK,EAAE;AAA1C,OAPM,CAZG;AAqBXvD,MAAAA,UAAU,qBAAEhC,KAAK,CAAC0F,QAAR,6EAAE,gBAAgBC,MAAlB,oFAAE,sBAAwBC,IAA1B,2DAAE,uBAA8B9D,MArB/B;AAsBX+D,MAAAA,mBAAmB,EAAE,EAtBV;AAuBXnC,MAAAA,SAAS,EAAE,CAvBA;AAwBXG,MAAAA,eAAe,EAAE,EAxBN;AAyBXiC,MAAAA,gBAAgB,EAAE,EAzBP;AA0BXC,MAAAA,kBAAkB,EAAE,EA1BT;AA2BXzD,MAAAA,MAAM,EAAE,KA3BG;AA4BX0D,MAAAA,MAAM,EAAE,CACN;AAAE9B,QAAAA,GAAG,EAAE,iBAAP;AAA0BE,QAAAA,GAAG,EAAE,CAAC;AAAhC,OADM,EAEN;AAAE3B,QAAAA,QAAQ,EAAE,SAAZ;AAAuBC,QAAAA,SAAS,EAAE,CAAC;AAAnC,OAFM,EAGN;AAAED,QAAAA,QAAQ,EAAE,gBAAZ;AAA8BC,QAAAA,SAAS,EAAE,CAAC;AAA1C,OAHM,EAIN;AAAED,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,SAAS,EAAE,CAAC;AAApC,OAJM,EAKN;AAAED,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,SAAS,EAAE,CAAC;AAApC,OALM,EAMN;AAAED,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,SAAS,EAAE,CAAC;AAApC,OANM,CA5BG;AAoCXuD,MAAAA,MAAM,EAAE,EApCG;AAqCXC,MAAAA,UAAU,EAAE,EArCD;AAsCXC,MAAAA,QAAQ,EAAE,EAtCC;AAuCXtD,MAAAA,YAAY,EAAE;AAAE4B,QAAAA,IAAI,EAAE,KAAR;AAAe1B,QAAAA,IAAI,EAAE,EAArB;AAAyBC,QAAAA,KAAK,EAAE,EAAhC;AAAoCG,QAAAA,OAAO,EAAE;AAA7C,OAvCH;AAwCXG,MAAAA,cAAc,EAAE,EAxCL;AAyCX8C,MAAAA,QAAQ,EAAEhB,eAzCC;AA0CXiB,MAAAA,UAAU,EAAE;AAAEC,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,eAAe,EAAE,EAAlC;AAAsCC,QAAAA,UAAU,EAAE;AAAlD,OA1CD;AA2CXC,MAAAA,iBAAiB,EAAE,KA3CR;AA4CXC,MAAAA,cAAc,EAAE,EA5CL;AA6CXC,MAAAA,oBAAoB,EAAE,EA7CX;AA8CXC,MAAAA,YAAY,EAAE,EA9CH;AA+CXC,MAAAA,iBAAiB,EAAE,IA/CR;AAgDXC,MAAAA,YAAY,EAAE;AAhDH,KAAb;AAkDD,GAzD8B,CA2D/B;;;AACuB,QAAjBC,iBAAiB,GAAG;AACxB,UAAM,KAAKpD,gBAAL,EAAN;AACA,UAAM,KAAKvD,WAAL,EAAN;AACA,UAAM,KAAK4G,qBAAL,EAAN;AACD,GAhE8B,CAiE/B;;;AAE2B,QAArBA,qBAAqB,GAAG;AAC5B,QAAIC,gBAAgB,GAAG,MAAM5H,OAAO,CACjC,GAAEJ,QAAQ,CAAC,iBAAD,CAAoB,+BADG,EAElCC,UAAU,CAAC,EAAD,CAFwB,CAApC,CAD4B,CAM5B;;AACA,QAAI+H,gBAAgB,CAAC1G,OAArB,EAA8B;AAC5B,WAAKQ,QAAL,CAAc;AACZgF,QAAAA,kBAAkB,EAChBkB,gBAAgB,IAChBA,gBAAgB,CAAC3G,MADjB,IAEA2G,gBAAgB,CAAC3G,MAAjB,CAAwBE,IAFxB,IAGAyG,gBAAgB,CAAC3G,MAAjB,CAAwBE,IAAxB,CAA6B,CAA7B,CAHA,IAIAyG,gBAAgB,CAAC3G,MAAjB,CAAwBE,IAAxB,CAA6B,CAA7B,EAAgCA;AANtB,OAAd;AAQD,KATD,MASO;AACLpB,MAAAA,aAAa,CAAC8D,SAAd,CAAwB+D,gBAAgB,IAAIA,gBAAgB,CAAC9D,OAA7D;AACD;AACF,GAtF8B,CAwF/B;;;AAoMAqB,EAAAA,eAAe,GAAG;AAChB,QAAI0C,SAAS,CAACC,WAAd,EAA2B;AACzB;AACA,YAAMC,KAAK,GAAG,IAAd;AACAF,MAAAA,SAAS,CAACC,WAAV,CAAsBE,kBAAtB,CACE,UAAUC,QAAV,EAAoB;AAClB;AACAF,QAAAA,KAAK,CAACrG,QAAN,CAAe;AAAEuD,UAAAA,eAAe,EAAE8C,KAAK,CAACrF,KAAN,CAAYuC;AAA/B,SAAf;AACD,OAJH,EAKE,UAAUiD,CAAV,EAAa;AACX;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,OARH,EASE;AACEG,QAAAA,kBAAkB,EAAE,IADtB;AAEEC,QAAAA,OAAO,EAAE;AAFX,OATF;AAcD;AACF,GA/S8B,CAiT/B;AACA;;;AACAC,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,UAAMC,SAAS,GAAG,KAAKhG,KAAL,CAAWwD,KAA7B;AACA,UAAMyC,SAAS,GAAGF,SAAS,CAACvC,KAA5B;;AACA,QAAIwC,SAAS,KAAKC,SAAlB,EAA6B;AAC3B,WAAKjH,QAAL,CAAc;AAAEuD,QAAAA,eAAe,EAAE,KAAKvC,KAAL,CAAWuC;AAA9B,OAAd;AACD;AACF,GAzT8B,CA2T/B;AACA;;;AA2CA2D,EAAAA,MAAM,GAAG;AACPT,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAK1F,KAAxC,EADO,CAEP;;AACA,UAAM;AACJuC,MAAAA,eADI;AAEJ8B,MAAAA,QAFI;AAGJZ,MAAAA,IAHI;AAIJQ,MAAAA,MAJI;AAKJtC,MAAAA,SALI;AAMJG,MAAAA,eANI;AAOJiB,MAAAA;AAPI,QAQF,KAAK/C,KART;AASA,UAAM;AAAEmG,MAAAA;AAAF,QAAiB,KAAKlI,KAA5B;AAEA,QAAI;AAAE0F,MAAAA,QAAF;AAAYyC,MAAAA;AAAZ,QAA6B,KAAKnI,KAAtC,CAdO,CAeP;;AAEA,wBACE,uDACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEE;AAAS,MAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,OAAO,EAAE,sBADX;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,QAAQ,EAAC,MAHX;AAIE,MAAA,UAAU,EAAC,KAJb;AAKE,MAAA,UAAU,EAAC,SALb;AAME,MAAA,IAAI,EAAE,qGANR;AAOE,MAAA,SAAS,EAAC,KAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,eAYE,oBAAC,mBAAD;AACE,MAAA,mBAAmB,EAAE,KAAKmF,mBAD5B;AAEE,MAAA,UAAU,EAAE,KAAKjE,UAFnB;AAGE,MAAA,MAAM,EAAE,KAAKa,KAAL,CAAWX,MAHrB;AAIE,MAAA,OAAO,EAAE8G,UAAU,CAACjG,OAJtB;AAKE,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWf,SALxB;AAME,MAAA,YAAY,EAAEmH,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF,eAuBE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,EAAE,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,OAAO,EAAE,aADX;AAEE,MAAA,IAAI,EAAE,iGAFR;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,QAAQ,EAAC,MAJX;AAKE,MAAA,UAAU,EAAC,KALb;AAME,MAAA,UAAU,EAAC,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,uBAFZ;AAGE,MAAA,OAAO,EACL,MAAM,KAAKtD,mBAAL,EADD,CAEL;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBATF,eAmBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,kDAFZ;AAGE,MAAA,OAAO,EAAE,MACP,KAAK7E,KAAL,CAAWoI,OAAX,CAAmBxH,IAAnB,CAAwB,iBAAxB,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAnBF,eA4BE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,mDAFZ;AAGE,MAAA,OAAO,EAAE,MACP,KAAKZ,KAAL,CAAWoI,OAAX,CAAmBxH,IAAnB,CAAwB,qBAAxB,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA5BF,eAsCE;AAAK,MAAA,SAAS,EAAE,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,eAOE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,CADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGiD,eAAe,IAChBA,eAAe,CAACpD,MAAhB,GAAyB,CADxB,GAECoD,eAAe,CAACwE,GAAhB,CAAoB,CAACC,QAAD,EAAWC,GAAX,kBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,GAAG,GAAG,CAAX,CADF,EAGGD,QAAQ,CAACjG,SAAT,IAAsB,IAAtB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAC,IADR;AAEE,MAAA,MAAM,EAAC,MAFT;AAGE,MAAA,GAAG,EAAE,6FAHP;AAIE,MAAA,GAAG,EAAC,YAJN;AAKE,MAAA,SAAS,EAAC,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOK,GAPL,CADD,gBAWC;AACE,MAAA,OAAO,EAAE,MACP,KAAKe,eAAL,CAAqBkF,QAArB,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,GALH,eAME;AACE,MAAA,KAAK,EAAC,IADR;AAEE,MAAA,MAAM,EAAC,MAFT;AAGE,MAAA,GAAG,EAAE,wFAHP;AAIE,MAAA,GAAG,EAAC,YAJN;AAKE,MAAA,SAAS,EAAC,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAdJ,eA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,QAAQ,CAAC/F,QAAd,CA9BF,eA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK+F,QAAQ,CAACrG,OAAd,CA/BF,eAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMqG,QAAQ,CAAC3G,IAAf,CAhCF,eAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG2G,QAAQ,CAAC1G,OADZ,OACsB,IADtB,EAC4B,GAD5B,EAEG0G,QAAQ,CAACE,OAFZ,OAEsBF,QAAQ,CAACnG,SAF/B,CAjCF,eAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,eAEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,gBAFZ;AAGE,MAAA,OAAO,EAAE,MACP,KAAKkB,eAAL,CAAqBiF,QAArB,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAtCF,CADF,CAFD,gBAwDC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CAzDJ,CAbF,CAFF,CADF,CADF,CAtCF,CADF,CADF,CAvBF,CAFF,eA0JE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1JF,CADF,CADF,eA+JE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAE,KAAKvG,KAAL,CAAWwB,eADxB;AAEE,MAAA,UAAU,EAAE,gBAFd;AAGE,MAAA,YAAY,EAAE,uCAHhB;AAIE,MAAA,qBAAqB,EAAGkF,KAAD,IACrB,KAAK1H,QAAL,CAAc;AAAEwC,QAAAA,eAAe,EAAEkF;AAAnB,OAAd,CALJ;AAOE,MAAA,mBAAmB,EAAE,MAAM,KAAK9D,cAAL,EAP7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/JF,eAwKE,oBAAC,gBAAD;AACE,MAAA,MAAM,EAAE,KAAK5C,KAAL,CAAWc,YAAX,CAAwBC,MADlC;AAEE,MAAA,IAAI,EAAE,KAAKf,KAAL,CAAWc,YAAX,CAAwBE,IAFhC;AAGE,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWc,YAAX,CAAwBG,KAHjC;AAIE,MAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWc,YAAX,CAAwBI,QAJpC;AAKE,MAAA,cAAc,EAAGsE,CAAD,IAAO,KAAK3E,UAAL,EALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxKF,CAFF,CADF;AAqLD;;AA7iB8B;;AAgjBjC,SAAS8F,eAAT,CAAyB3G,KAAzB,EAAgC;AAC9B,SAAO;AACL2D,IAAAA,QAAQ,EAAE3D,KAAK,CAAC4G,WADX;AAELC,IAAAA,WAAW,EAAE7G,KAAK,CAAC6G,WAFd;AAGLC,IAAAA,WAAW,EAAE9G,KAAK,CAAC+G,UAAN,CAAiBD,WAHzB;AAILV,IAAAA,YAAY,EAAEpG,KAAK,CAACgH,eAAN,CAAsBZ,YAJ/B;AAKLD,IAAAA,UAAU,EAAEnG,KAAK,CAACiH,MAAN,CAAad,UALpB;AAMLa,IAAAA,eAAe,EAAEhH,KAAK,CAACgH,eANlB,CAQL;;AARK,GAAP;AAUD;;AAED,MAAME,gBAAgB,GAAG1K,gBAAgB,CAAC;AACxC2K,EAAAA,MAAM,EAAE,yCADgC;AAExCC,EAAAA,MAAM,EAAE;AAFgC,CAAD,CAAhB,CAGtBrJ,QAHsB,CAAzB;AAKA,eAAef,OAAO,CAAC2J,eAAD,CAAP,CAAyBO,gBAAzB,CAAf","sourcesContent":["import { GoogleApiWrapper, InfoWindow, Map, Marker } from \"google-maps-react\";\nimport v4 from \"uuid\";\nimport React, { Component } from \"react\";\nimport { ReactNotifyAlert } from \"react-notify-alert\";\nimport \"react-notify-alert/dist/index.css\";\nimport { connect } from \"react-redux\";\nimport DeleteModal from \"../../components/modals/deleteModal.js\";\nimport { ENDPOINT } from \"../../utils/endpoint\";\nimport { getOptions, postOptions } from \"../../utils/httpConfig\";\nimport notifications from \"../../utils/notifications\";\nimport request from \"../../utils/request\";\nimport AddressManipulation from \"./addressmanipulation\";\nimport { isEmpty, stubTrue } from \"lodash\";\nimport moment from \"moment\";\nimport Heading from \"../../components/postProject/heading\";\nimport { selectSubScopes, selectSubScopesFromScope } from \"../../utils/helpers\";\nimport \"./work.scss\";\nimport SubHeader from '../../components/subHeader/index'\nclass MyRegion extends Component {\n  myMap = React.createRef();\n  myRange = React.createRef(30);\n  constructor(props) {\n    super(props);\n    let sessionUserType = sessionStorage.getItem(\"userType\");\n\n    this.state = {\n      openAlert: false,\n      addNewAddressFlag: false,\n      openDeleteAlert: false,\n      currentLocation: {\n        lat: 37.550844,\n        lng: 126.988552,\n      },\n      countries: [],\n      range: 30,\n      zoom: 17,\n      cities: [],\n      coords: [\n        { lat: 37.545936, lng: 126.977823, range: 100 },\n\n        { lat: 37.556397, lng: 126.994634, range: 80 },\n\n        { lat: 37.561474, lng: 126.979881, range: 50 },\n\n        { lat: 37.583965, lng: 126.944493, range: 120 },\n      ],\n      postUserId: props.authUser?.myAuth?.user?.userId,\n      projectsMapViewData: [],\n      activeTab: 1,\n      getAllLocations: {},\n      businessCategory: \"\",\n      businessCategories: [],\n      isMain: false,\n      stores: [\n        { lat: 47.49855629475769, lng: -122.14184416996333 },\n        { latitude: 47.359423, longitude: -122.021071 },\n        { latitude: 47.2052192687988, longitude: -121.988426208496 },\n        { latitude: 47.6307081, longitude: -122.1434325 },\n        { latitude: 47.3084488, longitude: -122.2140121 },\n        { latitude: 47.5524695, longitude: -122.0425407 },\n      ],\n      bounds: {},\n      markerHtml: \"\",\n      infoHtml: \"\",\n      alertSetting: { open: false, type: \"\", title: \"\", message: \"\" },\n      currentAddress: {},\n      userType: sessionUserType,\n      pagination: { pageSize: 100, lastPkEvaluated: \"\", pageNumber: 1 },\n      isSkeletonLoading: false,\n      freelancerData: [],\n      lastPkEvaluatedTrack: [],\n      projectTypes: [],\n      showingInfoWindow: true,\n      activemarker: {},\n    };\n  }\n\n  //Start onLOad\n  async componentDidMount() {\n    await this.BindAllLocations();\n    await this.bindCountry();\n    await this.getBusinessCategories();\n  }\n  //End onLoad\n\n  async getBusinessCategories() {\n    let categoryResponse = await request(\n      `${ENDPOINT[\"GeneralSettings\"]}?settingName=businessCategory`,\n      getOptions({})\n    );\n\n    // debugger;\n    if (categoryResponse.success) {\n      this.setState({\n        businessCategories:\n          categoryResponse &&\n          categoryResponse.result &&\n          categoryResponse.result.data &&\n          categoryResponse.result.data[0] &&\n          categoryResponse.result.data[0].data,\n      });\n    } else {\n      notifications.showError(categoryResponse && categoryResponse.message);\n    }\n  }\n\n  //Start Bind General Setting\n  bindCountry = async () => {\n    let array = [];\n    let result = await request(\n      `${ENDPOINT[\"GeneralSettings\"]}?settingName=Countries`,\n      getOptions({})\n    );\n    if (result.success) {\n      if (result.result.data.length > 0) {\n        for (\n          let index = 0;\n          index < result.result.data[0].data.length;\n          index++\n        ) {\n          const element = result.result.data[0].data[index];\n          array.push({\n            id: element.id,\n            name: element.name,\n          });\n        }\n        this.setState({ countries: array });\n      } else {\n        alert(\"No Country\");\n      }\n    } else {\n      alert(\"No Country\");\n    }\n  };\n  bindCities = async (countryId) => {\n    let array = [];\n    let result = await request(\n      `${ENDPOINT[\"GeneralSettings\"]}?settingName=city_country_` + countryId,\n      getOptions({})\n    );\n    if (result.success) {\n      if (result.result.data.length > 0) {\n        for (\n          let index = 0;\n          index < result.result.data[0].data.length;\n          index++\n        ) {\n          const element = result.result.data[0].data[index];\n          array.push({\n            id: element.id,\n            name: element.name,\n          });\n        }\n        this.setState({ cities: array });\n      } else {\n        alert(\"No City\");\n      }\n    } else {\n      alert(\"No City\");\n    }\n  };\n\n  //End Bind General Setting\n  //Start Address Manage Function\n  onAddressSubmit = async (data) => {\n    let result = await request(\n      `${ENDPOINT[\"GeneralSettings\"]}?settingName=city_info_` + data.cityId,\n      getOptions({})\n    );\n    if (result.success) {\n      if (result.result.data.length > 0) {\n        for (\n          let index = 0;\n          index < result.result.data[0].data.length;\n          index++\n        ) {\n          const element = result.result.data[0].data[0].name;\n          const info = JSON.parse(element);\n\n          //Call CreateAddress as per LoginUserId\n          var params = {\n            city: info.name,\n            street1: data.addressdetail,\n            userId: this.state.postUserId,\n            country: info.country_name,\n            statename: info.state_name,\n            isDefault: this.state.isMain,\n            regionId: info.region,\n            latitude: info.latitude,\n            longitude: info.longitude,\n          };\n\n          let postresult = await request(\n            ENDPOINT[\"PostUserAddress\"],\n            postOptions(params)\n          );\n\n          if (postresult.success) {\n            this.closeModel();\n            this.setState({\n              alertSetting: {\n                isOpen: true,\n                type: result.success ? \"success\" : \"failed\",\n                title: result.success ? \"Success\" : \"Failed\",\n                infoText: \"You have Successfully Added Address\",\n              },\n            });\n            //this.BindAllLocations();\n          } else {\n            notifications.showError(\n              (postresult && postresult.message) || \"Something went wrong\"\n            );\n          }\n        }\n      }\n    }\n  };\n\n  onUpdateAddress = async (data) => {\n    data.isDefault = true;\n    let postresult = await request(\n      ENDPOINT[\"UpdateUserAddress\"],\n      postOptions(data)\n    );\n\n    if (postresult.success) {\n      //this.BindAllLocations();\n      this.setState({\n        alertSetting: {\n          isOpen: true,\n          type: postresult.success ? \"Success\" : \"Failed\",\n          title: postresult.success ? \"Success\" : \"Failed\",\n          infoText: \"You have Successfully Updated Address\",\n        },\n      });\n    } else {\n      notifications.showError(postresult.message);\n    }\n  };\n\n  onDeleteAddress = async (data) => {\n    this.setState({ currentAddress: { ...data } }, () => {\n      this.setState({ openDeleteAlert: true });\n    });\n  };\n\n  //Tab Chane Function\n  onTabChangeHandle = (selectedTab) => {\n    this.setState({\n      activeTab: selectedTab,\n    });\n  };\n\n  //Start On Load Function\n  BindAllLocations = async () => {\n    let param = {\n      userId: this.state.postUserId,\n    };\n\n    let result = await request(ENDPOINT[\"GetUserAddress\"], postOptions(param));\n\n    if (result.success) {\n      this.setState({ getAllLocations: result.result });\n      //Get Default Addresss and Bind Map\n\n      if (result.result.length > 0) {\n        let defaultLocation = result.result.filter(\n          (item) => item.isDefault === true\n        );\n\n        if (defaultLocation != null) {\n          if (defaultLocation.length > 0) {\n            // debugger;\n            let setDefaultLocation = {\n              lat: parseFloat(defaultLocation[0].latitude, 10),\n              lng: parseFloat(defaultLocation[0].longitude, 10),\n            };\n\n            let queryString =\n              `?projectTypes=Office Work,Free Contract` +\n              `&country=` +\n              defaultLocation[0].country +\n              `&city=` +\n              defaultLocation[0].city +\n              `&region=` +\n              defaultLocation[0].regionId;\n\n         \n\n            this.setState({ currentLocation: setDefaultLocation });\n          }\n        }\n        this.setState({ openAlert: false });\n      } else {\n        this.getUserLocation();\n        this.setState({ openAlert: true });\n      }\n    } else {\n      //this.getUserLocation();\n      this.setState({ openAlert: true });\n    }\n  };\n  getUserLocation() {\n    if (navigator.geolocation) {\n      //The working next statement.\n      const scope = this;\n      navigator.geolocation.getCurrentPosition(\n        function (position) {\n          // Set State to users position\n          scope.setState({ currentLocation: scope.state.currentLocation });\n        },\n        function (e) {\n          //Your error handling here\n          console.log(e);\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 5000,\n        }\n      );\n    }\n  }\n\n  //End On Load Function\n  //Start Check Location\n  componentWillUpdate(prevProps, nextState) {\n    const prevRange = this.state.range;\n    const nextRange = nextState.range;\n    if (prevRange !== nextRange) {\n      this.setState({ currentLocation: this.state.currentLocation });\n    }\n  }\n\n  //End Check Location\n  //Start Modal Actions\n  closeModel = () => {\n    this.setState({ currentAddress: {} });\n    this.BindAllLocations();\n    this.setState({\n      alertSetting: { open: false, type: \"\", title: \"\", message: \"\" },\n    });\n  };\n\n  openModal = () => {\n    this.bindCountry();\n    this.setState({ openAlert: true });\n  };\n  //End Modal Actions\n  //Alert thing\n  onActionHandle = async () => {\n    let postResult = await request(\n      ENDPOINT[\"DeleteUserAddress\"],\n      postOptions(this.state.currentAddress)\n    );\n    if (postResult.success) {\n      this.setState({ openDeleteAlert: false });\n    } else {\n      notifications.showError(postResult && postResult.message);\n    }\n    this.closeModel();\n  };\n  //End\n\n\n\n\n  handleAddNewAddress = () => {\n    this.setState({ addNewAddressFlag: true });\n    window.scrollTo({\n      top: 200,\n      behavior: \"smooth\",\n    });\n  };\n  handleCancelAddress = () => {\n    this.setState({ addNewAddressFlag: false });\n  };\n\n  render() {\n    console.log(\"cun sas asm as sma \", this.state);\n    //Start GOOGLE MAP\n    const {\n      currentLocation,\n      userType,\n      zoom,\n      stores,\n      activeTab,\n      getAllLocations,\n      addNewAddressFlag,\n    } = this.state;\n    const { lookUpData } = this.props;\n\n    let { authUser, languageType } = this.props;\n    //End GOOGLE MAP\n\n    return (\n      <>\n      <SubHeader />\n        <section className=\"card_sec\">\n          <div className=\"bcknd_container\">\n            <div className=\"row\">\n              <div className=\"col-12 col-md-2\"></div>\n              <div className=\"col-lg-8 col-md-12\">\n                <div className=\"project_post\">\n                  <Heading\n                    heading={\"Register new address\"}\n                    color=\"#333333\"\n                    fontSize=\"26px\"\n                    fontWeight=\"600\"\n                    fontFamily=\"Raleway\"\n                    icon={\"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/addressIcon.svg\"}\n                    marginTop=\"6px\"\n                  \n                  />\n                  <br />\n                  <AddressManipulation\n                    handleCancelAddress={this.handleCancelAddress}\n                    bindCities={this.bindCities}\n                    cities={this.state.cities}\n                    country={lookUpData.country}\n                    countries={this.state.countries}\n                    languageType={languageType}\n                  />\n                </div>\n\n                <div className=\"project_post invoice_tab\">\n                  <div className=\"business_category post_form\">\n                    <div className=\"tab-content\" id=\"pills-tabContent\">\n                      <Heading\n                        heading={\"All address\"}\n                        icon={\"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/resume1.png\"}\n                        color=\"#333333\"\n                        fontSize=\"26px\"\n                        fontWeight=\"600\"\n                        fontFamily=\"Raleway\"\n                      />\n                      <button\n                        type=\"submit\"\n                        className=\"btn cancel_btn my-3  \"\n                        onClick={\n                          () => this.handleAddNewAddress()\n                          // this.openModal()\n                        }\n                      >\n                        Add New Address\n                      </button>\n                      <button\n                        type=\"submit\"\n                        className=\"btn cancel_btn my-3 custom-address-button-margin\"\n                        onClick={() =>\n                          this.props.history.push(\"/clients-region\")\n                        }\n                      >\n                        Client region\n                      </button>\n                      <button\n                        type=\"submit\"\n                        className=\"btn cancel_btn my-3 custom-address-button2-margin\"\n                        onClick={() =>\n                          this.props.history.push(\"/freelancers-region\")\n                        }\n                      >\n                        Freelancer region\n                      </button>\n\n                      <div className={\"tab-pane fade show active\"}>\n                        <div className=\"business_category post_form registerAddress_tableMobile\">\n                          <div className=\"table-responsive detail_tbl feedback_tbl coupon_tbl\">\n                            {/*         My address list        */}\n                            <table className=\"table\">\n                              <thead>\n                                <tr>\n                                  <th scope=\"col\">No</th>\n                                  <th scope=\"col\">Main Address</th>\n                                  <th scope=\"col\">Region</th>\n                                  <th scope=\"col\">Country</th>\n                                  <th scope=\"col\">City</th>\n                                  <th scope=\"col\">Address Detail</th>\n                                  <th scope=\"col\">Action</th>\n                                </tr>\n                              </thead>\n\n                              <tbody>\n                                {getAllLocations &&\n                                getAllLocations.length > 0 ? (\n                                  getAllLocations.map((location, idx) => (\n                                    <tr>\n                                      <td>{idx + 1}</td>\n\n                                      {location.isDefault == true ? (\n                                        <td>\n                                          <img\n                                            width=\"30\"\n                                            height=\"-2px\"\n                                            src={\"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/greenTick.svg\"}\n                                            alt=\"client-img\"\n                                            className=\"h-100\"\n                                          />{\" \"}\n                                        </td>\n                                      ) : (\n                                        <td\n                                          onClick={() =>\n                                            this.onUpdateAddress(location)\n                                          }\n                                        >\n                                          {\" \"}\n                                          <img\n                                            width=\"30\"\n                                            height=\"-2px\"\n                                            src={\"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/tick.svg\"}\n                                            alt=\"client-img\"\n                                            className=\"h-100\"\n                                          />\n                                        </td>\n                                      )}\n\n                                      <td>{location.regionId}</td>\n                                      <td>{location.country}</td>\n                                      <td> {location.city}</td>\n                                      <td>\n                                        {location.street1} {\"  \"}{\" \"}\n                                        {location.street2} {location.statename}\n                                      </td>\n\n                                      <td>\n                                        {\" \"}\n                                        <button\n                                          type=\"submit\"\n                                          className=\"btn cancel_btn\"\n                                          onClick={() =>\n                                            this.onDeleteAddress(location)\n                                          }\n                                        >\n                                          Delete\n                                        </button>\n                                      </td>\n                                    </tr>\n                                  ))\n                                ) : (\n                                  <tr>\n                                    <td colSpan=\"6\" className=\"text-center\">\n                                      There is no data data to display\n                                    </td>\n                                  </tr>\n                                )}\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-12 col-md-2\"></div>\n            </div>\n          </div>\n          <DeleteModal\n            showModal={this.state.openDeleteAlert}\n            ModalTitle={\"Delete Address\"}\n            ModalMessage={\"Are you sure to delete this Address ?\"}\n            emitToHideDeleteModal={(value) =>\n              this.setState({ openDeleteAlert: value })\n            }\n            emitTheDeleteAction={() => this.onActionHandle()}\n          />\n          <ReactNotifyAlert\n            isOpen={this.state.alertSetting.isOpen}\n            type={this.state.alertSetting.type}\n            title={this.state.alertSetting.title}\n            infoText={this.state.alertSetting.infoText}\n            onActionHandle={(e) => this.closeModel()}\n          ></ReactNotifyAlert>\n        </section> \n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    authUser: state.authReducer,\n    userReducer: state.userReducer,\n    activeRoute: state.routeStore.activeRoute,\n    languageType: state.languageReducer.languageType,\n    lookUpData: state.lookUp.lookUpData,\n    languageReducer: state.languageReducer,\n\n    // defaultAddress:state.lookUp.defaultAddress\n  };\n}\n\nconst WrappedContainer = GoogleApiWrapper({\n  apiKey: \"AIzaSyA8hPK8F-8BbO-8H6tQZuiopY5nYES1UR0\",\n  sensor: true,\n})(MyRegion);\n\nexport default connect(mapStateToProps)(WrappedContainer);\n"]},"metadata":{},"sourceType":"module"}
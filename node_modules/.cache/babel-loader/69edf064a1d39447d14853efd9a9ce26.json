{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/work/addressmanipulation.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Label from \"../../components/postProject/label\";\nimport DropdownList from \"../../components/dropdowns/dropdownList\";\nimport { CountryList } from \"../../utils/countrylist\";\nimport \"./work.scss\";\n\nfunction AddressManipulation(props) {\n  const [selectCountry, setSelectedCountry] = useState(props.country);\n  const [selectCty, setSelectedCity] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  useEffect(() => {\n    if (props.country) {\n      let country = CountryList.find(item => item.name === props.country);\n\n      if (country) {\n        setCountryCode(country.dial_code);\n        setSelectedCountry(props.country);\n      }\n\n      let countryId = props.countries.find(item => item.name === props.country);\n      console.log(countryId, props.country, props.countries, CountryList, \"countryId\");\n\n      if (countryId) {\n        props.bindCities(countryId.id);\n      }\n    }\n  }, [props.country]);\n  useEffect(() => {\n    if (props.countries && props.countries.length > 0) {\n      let countryId = props.countries.find(item => item.name === props.country);\n\n      if (countryId) {\n        props.bindCities(countryId.id);\n      }\n    }\n  }, [props.countries]);\n\n  const handleUpdateCity = value => {\n    setSelectedCity(value);\n  };\n  /* bindCities */\n\n\n  console.log(props.cities, \"props.cities\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_form addressManipulation_formMobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    title: props.languageType.COUNTRY_TEXT,\n    compulsory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DropdownList, {\n    enableAutoComplete: true,\n    enableAutoCompleteSearch: true,\n    id: `countries`,\n    name: `countries`,\n    value: selectCountry || props.country,\n    selectItem: value => {\n      setSelectedCountry(value);\n      let countryId = props.countries.find(item => item.name === value);\n\n      if (countryId) {\n        props.bindCities(countryId.id);\n      }\n    },\n    items: CountryList.map(country => ({\n      text: country.name,\n      value: country.name\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    title: props.languageType.COUNTRY_CODE,\n    compulsory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control gray_bg\",\n    placeholder: \"Country Code\",\n    value: countryCode,\n    maxLength: \"50\",\n    onChange: e => {\n      setCountryCode(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    title: props.languageType.MOBILE_NO,\n    compulsory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Mobile No\",\n    maxLength: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"save_cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn cancel_btn verify_btn\",\n    style: {\n      position: \"relative\",\n      top: \"29px\",\n      background: \"#0d2146\",\n      minWidth: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Verify\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group custom-form-top-margin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    title: props.languageType.ADDRESS + \"1\",\n    compulsory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group custom-form-top-margin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    title: props.languageType.ADDRESS + \"2\",\n    compulsory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-7 col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    title: props.languageType.CITY_TEXT,\n    compulsory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DropdownList, {\n    enableAutoComplete: true,\n    enableAutoCompleteSearch: true,\n    id: `cities`,\n    name: `cities`,\n    value: selectCty,\n    selectItem: value => {\n      handleUpdateCity(value);\n    },\n    items: props.cities.map(city => ({\n      text: city.name,\n      value: city.id\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-5 col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    title: props.languageType.POST_CODE,\n    compulsory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"postal code\",\n    maxLength: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"save_cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn cancel_btn verify_btn registerAddress_btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, \"Register Address\")))))));\n}\n\nexport default AddressManipulation;","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/work/addressmanipulation.js"],"names":["React","useState","useEffect","Label","DropdownList","CountryList","AddressManipulation","props","selectCountry","setSelectedCountry","country","selectCty","setSelectedCity","countryCode","setCountryCode","find","item","name","dial_code","countryId","countries","console","log","bindCities","id","length","handleUpdateCity","value","cities","languageType","COUNTRY_TEXT","map","text","COUNTRY_CODE","e","target","MOBILE_NO","position","top","background","minWidth","ADDRESS","CITY_TEXT","city","POST_CODE","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Label from \"../../components/postProject/label\";\nimport DropdownList from \"../../components/dropdowns/dropdownList\";\nimport { CountryList } from \"../../utils/countrylist\";\nimport \"./work.scss\";\n\nfunction AddressManipulation(props) {\n  const [selectCountry, setSelectedCountry] = useState(props.country);\n  const [selectCty, setSelectedCity] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n\n  useEffect(() => {\n    if (props.country) {\n      let country = CountryList.find((item) => item.name === props.country);\n      if (country) {\n        setCountryCode(country.dial_code);\n        setSelectedCountry(props.country);\n      }\n      let countryId = props.countries.find(\n        (item) => item.name === props.country\n      );\n      console.log(\n        countryId,\n        props.country,\n        props.countries,\n        CountryList,\n        \"countryId\"\n      );\n\n      if (countryId) {\n        props.bindCities(countryId.id);\n      }\n    }\n  }, [props.country]);\n  useEffect(() => {\n    if (props.countries && props.countries.length > 0) {\n      let countryId = props.countries.find(\n        (item) => item.name === props.country\n      );\n\n      if (countryId) {\n        props.bindCities(countryId.id);\n      }\n    }\n  }, [props.countries]);\n\n  const handleUpdateCity = (value) => {\n    setSelectedCity(value);\n  };\n  /* bindCities */\n  console.log(props.cities, \"props.cities\");\n  return (\n    <div className=\"post_form addressManipulation_formMobile\">\n      <div className=\"row\">\n        <div className=\"col-12 col-md-4\">\n          <div className=\"form-group\">\n            <Label\n              title={props.languageType.COUNTRY_TEXT}\n              compulsory={true}\n            ></Label>\n            <DropdownList\n              enableAutoComplete\n              enableAutoCompleteSearch\n              id={`countries`}\n              name={`countries`}\n              value={selectCountry || props.country}\n              selectItem={(value) => {\n                setSelectedCountry(value);\n                let countryId = props.countries.find(\n                  (item) => item.name === value\n                );\n                if (countryId) {\n                  props.bindCities(countryId.id);\n                }\n              }}\n              items={CountryList.map((country) => ({\n                text: country.name,\n                value: country.name,\n              }))}\n            />\n          </div>\n        </div>\n        <div className=\"col-12 col-md-2\">\n          <div className=\"form-group\">\n            <Label\n              title={props.languageType.COUNTRY_CODE}\n              compulsory={true}\n            ></Label>\n            <input\n              type=\"text\"\n              className=\"form-control gray_bg\"\n              placeholder=\"Country Code\"\n              value={countryCode}\n              maxLength=\"50\"\n              onChange={(e) => {\n                setCountryCode(e.target.value);\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <div className=\"form-group\">\n            <Label\n              title={props.languageType.MOBILE_NO}\n              compulsory={true}\n            ></Label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Mobile No\"\n              maxLength=\"10\"\n            />\n          </div>\n        </div>\n        <div className=\"col-md-2\">\n          <div className=\"form-group\">\n            <div className=\"save_cancel\">\n              <button\n                type=\"button\"\n                className=\"btn cancel_btn verify_btn\"\n                style={{\n                  position: \"relative\",\n                  top: \"29px\",\n                  background: \"#0d2146\",\n                  minWidth: \"100%\",\n                }}\n              >\n                Verify\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <div className=\"form-group custom-form-top-margin\">\n            <Label\n              title={props.languageType.ADDRESS + \"1\"}\n              compulsory={true}\n            ></Label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"address\" />\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <div className=\"form-group custom-form-top-margin\">\n            <Label\n              title={props.languageType.ADDRESS + \"2\"}\n              compulsory={true}\n            ></Label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"address\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-7 col-md-6\">\n          <div className=\"form-group\">\n            <Label\n              title={props.languageType.CITY_TEXT}\n              compulsory={true}\n            ></Label>\n\n            <DropdownList\n              enableAutoComplete\n              enableAutoCompleteSearch\n              id={`cities`}\n              name={`cities`}\n              value={selectCty}\n              selectItem={(value) => {\n                handleUpdateCity(value);\n              }}\n              items={props.cities.map((city) => ({\n                text: city.name,\n                value: city.id,\n              }))}\n            />\n          </div>\n        </div>\n        <div className=\"col-lg-5 col-md-6\">\n          <div className=\"form-group\">\n            <Label\n              title={props.languageType.POST_CODE}\n              compulsory={true}\n            ></Label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"postal code\"\n              maxLength=\"10\"\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div\n          className=\"col-12\"\n          style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n        >\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <div className=\"form-group\">\n              <div className=\"save_cancel\">\n                <button\n                  type=\"button\"\n                  className=\"btn cancel_btn verify_btn registerAddress_btn\"\n                >\n                  Register Address\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AddressManipulation;\n"]},"metadata":{},"sourceType":"module"}
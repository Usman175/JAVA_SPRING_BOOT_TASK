{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/companyAdmin/adminDashboard/teamAssignment/index.js\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { Select } from \"@material-ui/core\";\nimport Grid from \"@mui/material/Grid\";\nimport DropdownList from \"../../../../components/dropdowns/dropdownList\";\nimport \"./teamAssignment.scss\";\nimport notifications from \"../../../../utils/notifications\";\nimport { getOptions, postMultipartFile, postOptions } from \"../../../../utils/httpConfig\";\nimport request from \"../../../../utils/request\";\nimport { ENDPOINT } from \"../../../../utils/endpoint\";\n\nfunction TeamAssignment(props) {\n  let selectFreelancer = props.selectFreelancer;\n  let organizationTeams = props.organizationTeams;\n  const [index, setIndex] = useState(0);\n  const {\n    onHideCallBack,\n    show\n  } = props;\n  const [selectedTeam, setSelectedTeam] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({});\n\n  const onTeamChange = value => {\n    setSelectedTeam(value);\n  };\n\n  const handleValidation = () => {\n    let formIsValid = true;\n    let errorMessage = {};\n\n    if (!selectedTeam) {\n      formIsValid = false;\n      errorMessage[\"teamName\"] = \"This field is required!\";\n      window.scrollTo({\n        top: \"198\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"Team name is required!\");\n      return;\n    }\n\n    setErrorMessage(errorMessage);\n    return formIsValid;\n  };\n\n  const handleAssignTeam = async () => {\n    if (handleValidation()) {\n      setLoading(true);\n      let organization = organizationTeams.find(item => item.teamId === selectedTeam);\n      let result = await request(`${ENDPOINT[\"AddOrganizationFreelancerToTeam\"]}?organizationId=${organization.organizationId}&individualFreelancerId=${selectFreelancer.individualFreelancerId}&teamId=${selectedTeam}`, postOptions());\n\n      if (result.success) {\n        notifications.showSuccess(\"Team is successfully assigned\");\n        setLoading(false);\n        props.onHideCallBack();\n        setSelectedTeam('');\n      } else {\n        setLoading(false);\n        notifications.showError(\"Already assigned this team to this freelancer\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: () => onHideCallBack(),\n    centered: true,\n    backdrop: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    className: \"modal-body-content-team-assignment-header modal-header\",\n    closeButton: false,\n    title: \"Team Assignment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    className: \"position-relative d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Team Assignment\"), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => onHideCallBack(),\n    className: \"custom-close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"x\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"modal-body-content-team-assignment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Assign a team member\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-info-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"user\",\n    src: selectFreelancer.userProfileUrl ? `https://dhihitu47nqhv.cloudfront.net/${selectFreelancer.userProfileUrl}` : \"https://dhihitu47nqhv.cloudfront.net/profileimage/64205290-20ef-4083-8d04-02033194bf73.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, selectFreelancer.freelancerName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DropdownList, {\n    id: \"team\",\n    name: \"team\",\n    enableAutoCompleteSearch: true,\n    placeHolder: \"Select a team\",\n    value: selectedTeam,\n    items: organizationTeams.map(item => ({\n      text: item.teamName,\n      value: item.teamId\n    })),\n    selectItem: onTeamChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center button-assign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAssignTeam,\n    disabled: loading,\n    className: \"button\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \" \", \"Assign\", \" \", \"  \", loading ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-spinner fa-spin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 31\n    }\n  }) : \"\"))));\n}\n\nexport default TeamAssignment;","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/companyAdmin/adminDashboard/teamAssignment/index.js"],"names":["React","useState","Modal","Avatar","Select","Grid","DropdownList","notifications","getOptions","postMultipartFile","postOptions","request","ENDPOINT","TeamAssignment","props","selectFreelancer","organizationTeams","index","setIndex","onHideCallBack","show","selectedTeam","setSelectedTeam","loading","setLoading","errorMessage","setErrorMessage","onTeamChange","value","handleValidation","formIsValid","window","scrollTo","top","behavior","showWarning","handleAssignTeam","organization","find","item","teamId","result","organizationId","individualFreelancerId","success","showSuccess","showError","userProfileUrl","freelancerName","map","text","teamName"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { Select } from \"@material-ui/core\";\nimport Grid from \"@mui/material/Grid\";\nimport DropdownList from \"../../../../components/dropdowns/dropdownList\";\nimport \"./teamAssignment.scss\";\nimport notifications from \"../../../../utils/notifications\";\nimport {\n  getOptions,\n  postMultipartFile,\n  postOptions,\n} from \"../../../../utils/httpConfig\";\nimport request from \"../../../../utils/request\";\nimport { ENDPOINT } from \"../../../../utils/endpoint\";\n\n\nfunction TeamAssignment(props) {\n  let selectFreelancer=props.selectFreelancer;\n  let organizationTeams=props.organizationTeams\n  const [index, setIndex] = useState(0);\n  const { onHideCallBack, show } = props;\n  const [selectedTeam, setSelectedTeam] = useState(null);\n  const [loading,setLoading] = useState(false);\n  const [errorMessage,setErrorMessage] = useState({});\n\n  const onTeamChange = (value) => {\n    setSelectedTeam(value);\n  };\n\n  const handleValidation=()=>{\n    let formIsValid = true;\n    let errorMessage = {};\n    if (!selectedTeam) {\n      formIsValid = false;\n      errorMessage[\"teamName\"] = \"This field is required!\";\n      window.scrollTo({\n        top: \"198\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"Team name is required!\");\n      return;\n    }\n    setErrorMessage(errorMessage)\n    return formIsValid;\n  }\n\n  const handleAssignTeam=async ()=>{\n    if(handleValidation()){\n      setLoading(true)\n\n      let organization=organizationTeams.find((item)=>item.teamId===selectedTeam)\n\n      let result = await request(\n        `${ENDPOINT[\"AddOrganizationFreelancerToTeam\"]}?organizationId=${organization.organizationId}&individualFreelancerId=${selectFreelancer.individualFreelancerId}&teamId=${selectedTeam}`,\n        postOptions()\n      );\n      if (result.success) {\n\n        notifications.showSuccess(\"Team is successfully assigned\")\n        setLoading(false)\n        props.onHideCallBack()\n        setSelectedTeam('')\n      }else{\n        setLoading(false)\n        notifications.showError(\"Already assigned this team to this freelancer\")\n      }\n\n\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={() => onHideCallBack()} centered backdrop={true}>\n       <Modal.Header\n          className=\"modal-body-content-team-assignment-header modal-header\"\n          closeButton={false}\n          title=\"Team Assignment\"\n        >\n          <Modal.Title \n             className=\"position-relative d-flex\"\n          >\n            Team Assignment\n          </Modal.Title>\n          <span onClick={() => onHideCallBack()} className=\"custom-close\" >\n            x\n          </span>\n        </Modal.Header>\n      <Modal.Body className=\"modal-body-content-team-assignment\">\n        <div className=\"title\">\n          <h6>Assign a team member</h6>\n        </div>\n        <div className=\"user-info-wrapper\">\n          <Avatar\n            alt=\"user\"\n            src={selectFreelancer.userProfileUrl?`https://dhihitu47nqhv.cloudfront.net/${selectFreelancer.userProfileUrl}`:\"https://dhihitu47nqhv.cloudfront.net/profileimage/64205290-20ef-4083-8d04-02033194bf73.png\"}\n          />\n          <p>{selectFreelancer.freelancerName}</p>\n        </div>\n        <div className=\"dropdown-list\">\n          <DropdownList\n            id=\"team\"\n            name=\"team\"\n            enableAutoCompleteSearch\n            placeHolder=\"Select a team\"\n            value={selectedTeam}\n            items={organizationTeams.map((item)=>({text:item.teamName,value:item.teamId}))}\n            selectItem={onTeamChange}\n          />\n        </div>\n        <div className=\"text-center button-assign\">\n          <button   onClick={handleAssignTeam}  disabled={loading} className=\"button\" type=\"button\">\n            {\" \"}\n            Assign{\" \"}  {loading ? (\n                              <i className=\"fa fa-spinner fa-spin\"></i>\n                            ) : (\n                              \"\"\n                            )}\n          </button>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default TeamAssignment;\n"]},"metadata":{},"sourceType":"module"}
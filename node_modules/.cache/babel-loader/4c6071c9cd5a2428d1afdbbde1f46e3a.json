{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/components/postProject/label.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport \"./postProject.scss\";\n\nfunction Label({\n  title,\n  compulsory,\n  question,\n  prefixBoxValid,\n  prefixBoxInValid,\n  primary,\n  bold,\n  fontSize,\n  icon,\n  color,\n  width,\n  marginLeft\n}) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, icon ? /*#__PURE__*/React.createElement(\"img\", {\n    className: \"label_icon\",\n    style: {\n      width: width ? width : \"\",\n      marginLeft: marginLeft ? marginLeft : \"\"\n    },\n    src: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }) : prefixBoxValid || prefixBoxInValid ? prefixBoxValid ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-label-prefix-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"in-valid-label-prefix-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      fontWeight: bold ? \"bold\" : \"\",\n      fontSize: fontSize ? fontSize : \"\",\n      color: color ? color : \"\"\n    },\n    className: `${classes.label} ${primary ? \"customer-primary-label\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, title)), compulsory && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.starWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.star,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"*\")), question && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.starWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-question-circle\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default Label;\nconst useStyles = makeStyles(theme => ({\n  Container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    '@media(max-width:855px) and (min-width:505px)': {\n      flexWrap: 'wrap !important'\n    }\n  },\n  label: {\n    textAlign: \"left\",\n    font: \"normal normal bold 14px/16px Roboto\",\n    letterSpacing: \"0px\",\n    color: \"#707070\",\n    opacity: 1\n  },\n  star: {\n    color: \"#B51818\",\n    opacity: 1,\n    width: 6\n  },\n  starWrapper: {\n    margin: \"0px 0px 3px 3px\"\n  }\n}));","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/components/postProject/label.js"],"names":["React","makeStyles","Grid","Label","title","compulsory","question","prefixBoxValid","prefixBoxInValid","primary","bold","fontSize","icon","color","width","marginLeft","classes","useStyles","Container","fontWeight","label","starWrapper","star","theme","display","alignItems","flexWrap","textAlign","font","letterSpacing","opacity","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport \"./postProject.scss\";\n\nfunction Label({\n  title,\n  compulsory,\n  question,\n  prefixBoxValid,\n  prefixBoxInValid,\n  primary,\n  bold,\n  fontSize,\n  icon,\n  color,\n  width,\n  marginLeft,\n}) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container className={classes.Container}>\n        <Grid item>\n          {icon ? (\n            <img\n              className=\"label_icon\"\n              style={{\n                width: width ? width : \"\",\n                marginLeft: marginLeft ? marginLeft : \"\",\n              }}\n              src={icon}\n            />\n          ) : prefixBoxValid || prefixBoxInValid ? (\n            prefixBoxValid ? (\n              <div className=\"valid-label-prefix-box\"></div>\n            ) : (\n              <div className=\"in-valid-label-prefix-box\"></div>\n            )\n          ) : null}\n          <label\n            style={{\n              fontWeight: bold ? \"bold\" : \"\",\n              fontSize: fontSize ? fontSize : \"\",\n              color: color ? color : \"\",\n            }}\n            className={`${classes.label} ${\n              primary ? \"customer-primary-label\" : \"\"\n            }`}\n          >\n            {title}\n          </label>\n        </Grid>\n        {compulsory && (\n          <Grid item className={classes.starWrapper}>\n            <span className={classes.star}>*</span>\n          </Grid>\n        )}\n        {question && (\n          <Grid item className={classes.starWrapper}>\n            <i className=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n          </Grid>\n        )}\n      </Grid>\n    </>\n  );\n}\n\nexport default Label;\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    '@media(max-width:855px) and (min-width:505px)':{\n        flexWrap: 'wrap !important', \n    },\n  },\n  label: {\n    textAlign: \"left\",\n    font: \"normal normal bold 14px/16px Roboto\",\n    letterSpacing: \"0px\",\n    color: \"#707070\",\n    opacity: 1,\n  },\n  star: {\n    color: \"#B51818\",\n    opacity: 1,\n    width: 6,\n  },\n  starWrapper: {\n    margin: \"0px 0px 3px 3px\",\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}
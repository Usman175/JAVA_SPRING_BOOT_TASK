{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/components/charts/weeklyWorkGraph.jsx\";\nimport React, { PureComponent } from \"react\";\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport moment from \"moment\";\nconst data = [{\n  name: \"Monday\",\n  \"Total hours\": 0,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: \"Tuesday\",\n  \"Total hours\": 0,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: \"Wednesday\",\n  \"Total hours\": 0,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: \"Thursday\",\n  \"Total hours\": 0,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: \"Friday\",\n  \"Total hours\": 0,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: \"Saturday\",\n  \"Total hours\": 0,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: \"Sunday\",\n  \"Total hours\": 0,\n  pv: 4300,\n  amt: 2100\n}];\nexport class WeeklyWorkGraph extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphData: data,\n      updateFlag: false\n    };\n  }\n\n  componentDidUpdate() {\n    let graphData = this.state.graphData;\n    data.map((item, dayNo) => {\n      const foundData = this.props.chartData.find(d => moment(d.trackingDate).day() - 1 === dayNo);\n\n      if (foundData) {\n        graphData[dayNo][\"Total hours\"] = Number(foundData.trackingTime.totalHours);\n      }\n    });\n    setTimeout(() => {\n      this.setState({\n        graphData: graphData,\n        updateFlag: true\n      });\n    }, 1000);\n  }\n\n  render() {\n    const width = this.props.width || \"100%\";\n    const height = this.props.height || 400;\n    const {\n      graphData,\n      updateFlag\n    } = this.state;\n    return /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: width,\n      height: height,\n      margin: {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AreaChart, {\n      data: graphData,\n      margin: {\n        top: 10,\n        right: 0,\n        left: -20,\n        bottom: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      domain: [0, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      active: true,\n      filterNull: false,\n      itemStyle: {\n        width: 100,\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"Total hours\",\n      stackId: \"1\",\n      stroke: \"#2386f5\",\n      fill: \"#77abe5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/components/charts/weeklyWorkGraph.jsx"],"names":["React","PureComponent","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","moment","data","name","pv","amt","WeeklyWorkGraph","constructor","props","state","graphData","updateFlag","componentDidUpdate","map","item","dayNo","foundData","chartData","find","d","trackingDate","day","Number","trackingTime","totalHours","setTimeout","setState","render","width","height","top","left","right","bottom","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,aALF,EAMEC,OANF,EAOEC,mBAPF,QAQO,UARP;AASA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,IAAI,EAAE,QADR;AAEE,iBAAe,CAFjB;AAGEC,EAAAA,EAAE,EAAE,IAHN;AAIEC,EAAAA,GAAG,EAAE;AAJP,CADW,EAOX;AACEF,EAAAA,IAAI,EAAE,SADR;AAEE,iBAAe,CAFjB;AAGEC,EAAAA,EAAE,EAAE,IAHN;AAIEC,EAAAA,GAAG,EAAE;AAJP,CAPW,EAaX;AACEF,EAAAA,IAAI,EAAE,WADR;AAEE,iBAAe,CAFjB;AAGEC,EAAAA,EAAE,EAAE,IAHN;AAIEC,EAAAA,GAAG,EAAE;AAJP,CAbW,EAmBX;AACEF,EAAAA,IAAI,EAAE,UADR;AAEE,iBAAe,CAFjB;AAGEC,EAAAA,EAAE,EAAE,IAHN;AAIEC,EAAAA,GAAG,EAAE;AAJP,CAnBW,EAyBX;AACEF,EAAAA,IAAI,EAAE,QADR;AAEE,iBAAe,CAFjB;AAGEC,EAAAA,EAAE,EAAE,IAHN;AAIEC,EAAAA,GAAG,EAAE;AAJP,CAzBW,EA+BX;AACEF,EAAAA,IAAI,EAAE,UADR;AAEE,iBAAe,CAFjB;AAGEC,EAAAA,EAAE,EAAE,IAHN;AAIEC,EAAAA,GAAG,EAAE;AAJP,CA/BW,EAqCX;AACEF,EAAAA,IAAI,EAAE,QADR;AAEE,iBAAe,CAFjB;AAGEC,EAAAA,EAAE,EAAE,IAHN;AAIEC,EAAAA,GAAG,EAAE;AAJP,CArCW,CAAb;AA6CA,OAAO,MAAMC,eAAN,SAA8Bb,aAA9B,CAA4C;AACjDc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAACR,IADD;AAETS,MAAAA,UAAU,EAAC;AAFF,KAAb;AAID;;AAEDC,EAAAA,kBAAkB,GAAE;AAElB,QAAIF,SAAS,GAAC,KAAKD,KAAL,CAAWC,SAAzB;AACAR,IAAAA,IAAI,CAACW,GAAL,CAAS,CAACC,IAAD,EAAMC,KAAN,KAAc;AACrB,YAAMC,SAAS,GAAG,KAAKR,KAAL,CAAWS,SAAX,CAAqBC,IAArB,CAA2BC,CAAD,IAAQlB,MAAM,CAACkB,CAAC,CAACC,YAAH,CAAN,CAAuBC,GAAvB,KAA6B,CAA7B,KAAmCN,KAArE,CAAlB;;AACA,UAAGC,SAAH,EAAa;AACXN,QAAAA,SAAS,CAACK,KAAD,CAAT,CAAiB,aAAjB,IAAgCO,MAAM,CAACN,SAAS,CAACO,YAAV,CAAuBC,UAAxB,CAAtC;AACD;AACF,KALD;AAOAC,IAAAA,UAAU,CAAC,MAAI;AACb,WAAKC,QAAL,CAAc;AAAChB,QAAAA,SAAS,EAACA,SAAX;AAAqBC,QAAAA,UAAU,EAAC;AAAhC,OAAd;AACD,KAFS,EAER,IAFQ,CAAV;AAID;;AAEDgB,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKpB,KAAL,CAAWoB,KAAX,IAAoB,MAAlC;AACA,UAAMC,MAAM,GAAG,KAAKrB,KAAL,CAAWqB,MAAX,IAAqB,GAApC;AACA,UAAM;AAACnB,MAAAA,SAAD;AAAWC,MAAAA;AAAX,QAAuB,KAAKF,KAAlC;AACA,wBACE,oBAAC,mBAAD;AACE,MAAA,KAAK,EAAEmB,KADT;AAEE,MAAA,MAAM,EAAEC,MAFV;AAGE,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,IAAI,EAAE,CAAhB;AAAmBC,QAAAA,KAAK,EAAE,CAA1B;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEvB,SADR;AAEE,MAAA,MAAM,EAAE;AACNoB,QAAAA,GAAG,EAAE,EADC;AAENE,QAAAA,KAAK,EAAE,CAFD;AAGND,QAAAA,IAAI,EAAE,CAAC,EAHD;AAINE,QAAAA,MAAM,EAAE;AAJF,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAUE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,eAWE,oBAAC,OAAD;AACE,MAAA,MAAM,EAAE,IADV;AAEE,MAAA,UAAU,EAAE,KAFd;AAGE,MAAA,SAAS,EAAE;AAAEL,QAAAA,KAAK,EAAE,GAAT;AAAcM,QAAAA,OAAO,EAAE;AAAvB,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,eAgBE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAE,aAFX;AAGE,MAAA,OAAO,EAAC,GAHV;AAIE,MAAA,MAAM,EAAC,SAJT;AAKE,MAAA,IAAI,EAAC,SALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CANF,CADF;AAiCD;;AA9DgD","sourcesContent":["import React, { PureComponent } from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport moment from \"moment\";\n\nconst data = [\n  {\n    name: \"Monday\",\n    \"Total hours\": 0,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: \"Tuesday\",\n    \"Total hours\": 0,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: \"Wednesday\",\n    \"Total hours\": 0,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: \"Thursday\",\n    \"Total hours\": 0,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: \"Friday\",\n    \"Total hours\": 0,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: \"Saturday\",\n    \"Total hours\": 0,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: \"Sunday\",\n    \"Total hours\": 0,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport class WeeklyWorkGraph extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n        graphData:data,\n        updateFlag:false\n    }\n  }\n\n  componentDidUpdate(){\n     \n    let graphData=this.state.graphData;\n    data.map((item,dayNo)=>{\n      const foundData = this.props.chartData.find((d) =>  moment(d.trackingDate).day()-1 === dayNo);\n      if(foundData){\n        graphData[dayNo][\"Total hours\"]=Number(foundData.trackingTime.totalHours)\n      }\n    })\n\n    setTimeout(()=>{\n      this.setState({graphData:graphData,updateFlag:true})\n    },1000)\n\n  }\n\n  render() {\n    const width = this.props.width || \"100%\";\n    const height = this.props.height || 400;\n    const {graphData,updateFlag}=this.state\n    return (\n      <ResponsiveContainer\n        width={width}\n        height={height}\n        margin={{ top: 0, left: 0, right: 0, bottom: 0 }}\n      >\n        \n        <AreaChart\n          data={graphData}\n          margin={{\n            top: 10,\n            right: 0,\n            left: -20,\n            bottom: 0,\n          }}\n        >\n          <XAxis dataKey={\"name\"} />\n          <YAxis domain={[0, 24]} />\n          <Tooltip\n            active={true}\n            filterNull={false}\n            itemStyle={{ width: 100, display: \"flex\" }}\n          />\n          <Area\n            type=\"monotone\"\n            dataKey={\"Total hours\"}\n            stackId=\"1\"\n            stroke=\"#2386f5\"\n            fill=\"#77abe5\"\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
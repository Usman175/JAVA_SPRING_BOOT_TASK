{"ast":null,"code":"import { LANGUAGE_CONST } from \"../../constants/constant\";\nimport { MainTextEnglish, MainTextKorean, MainTextJapanese } from \"../../../utils/languageConst\";\nimport { GetPositionTypes } from \"../../../utils/postitionType\";\nimport { GetProjectCompletedTimeTypes, GetCurrencyTypes, GetProjectScopes, GetContractTypes, GetEducationTypes, GetPeriodTypes, GetApplyProbationTypes, GetPurposalSearchTypes, GetProjectLanguages } from \"../../../utils/projectConst\";\nimport { GetProjectTypes, ProjectScopeConst } from \"../../../utils/projectConst\";\nimport { GetProjectStatuses } from \"../../../utils/projectConst\";\nimport { GetJobOfferStatuses } from \"../../../utils/jobOfferConst\";\nimport { GetNoOfDaysTypes } from \"../../../utils/noOfDaysConst\";\nimport { GetFreelancerTypeConst } from \"../../../utils/freelancerConst\";\nconst initialstate = {\n  languageType: MainTextEnglish,\n  language: 'english',\n  projectTypes: GetProjectTypes(\"english\"),\n  noOfDays: GetNoOfDaysTypes(\"english\"),\n  freelancerTypes: GetFreelancerTypeConst(\"english\"),\n  projectStatuses: GetProjectStatuses(\"english\"),\n  jobOfferStatuses: GetJobOfferStatuses(\"english\"),\n  projectScopes: GetProjectScopes(\"english\"),\n  noOfContracts: GetContractTypes(\"english\"),\n  educationType: GetEducationTypes(\"english\"),\n  projectPeriod: GetPeriodTypes(\"english\"),\n  applyProbationPeriod: GetApplyProbationTypes(\"english\"),\n  purposalSearchTypes: GetPurposalSearchTypes(\"english\"),\n  currencies: GetCurrencyTypes(\"english\"),\n  projectCompletionTime: GetProjectCompletedTimeTypes(\"english\"),\n  positionType: GetPositionTypes(\"english\"),\n  languages: GetProjectLanguages(\"english\")\n};\nexport default ((state = initialstate, action) => {\n  if (action.type === LANGUAGE_CONST) {\n    let lang = {};\n\n    if (action.payload === \"english\") {\n      lang = MainTextEnglish;\n    } else if (action.payload === 'korean') {\n      lang = MainTextKorean;\n    } else if (action.payload === 'japanese') {\n      lang = MainTextJapanese;\n    }\n\n    return { ...state,\n      languageType: lang,\n      language: action.payload,\n      projectTypes: GetProjectTypes(action.payload),\n      noOfDays: GetNoOfDaysTypes(action.payload),\n      freelancerTypes: GetFreelancerTypeConst(action.payload),\n      projectStatuses: GetProjectStatuses(action.payload),\n      jobOfferStatuses: GetJobOfferStatuses(action.payload),\n      projectScopes: GetProjectScopes(action.payload),\n      noOfContracts: GetContractTypes(action.payload),\n      educationType: GetEducationTypes(action.payload),\n      projectPeriod: GetPeriodTypes(action.payload),\n      applyProbationPeriod: GetApplyProbationTypes(action.payload),\n      purposalSearchTypes: GetPurposalSearchTypes(action.payload),\n      currencies: GetCurrencyTypes(action.payload),\n      projectCompletionTime: GetProjectCompletedTimeTypes(action.payload),\n      positionType: GetPositionTypes(action.payload),\n      languages: GetProjectLanguages(action.payload)\n    };\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/store/reducer/languageReducer/languageReducer.js"],"names":["LANGUAGE_CONST","MainTextEnglish","MainTextKorean","MainTextJapanese","GetPositionTypes","GetProjectCompletedTimeTypes","GetCurrencyTypes","GetProjectScopes","GetContractTypes","GetEducationTypes","GetPeriodTypes","GetApplyProbationTypes","GetPurposalSearchTypes","GetProjectLanguages","GetProjectTypes","ProjectScopeConst","GetProjectStatuses","GetJobOfferStatuses","GetNoOfDaysTypes","GetFreelancerTypeConst","initialstate","languageType","language","projectTypes","noOfDays","freelancerTypes","projectStatuses","jobOfferStatuses","projectScopes","noOfContracts","educationType","projectPeriod","applyProbationPeriod","purposalSearchTypes","currencies","projectCompletionTime","positionType","languages","state","action","type","lang","payload"],"mappings":"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","sourcesContent":["import {\n  LANGUAGE_CONST\n} from \"../../constants/constant\";\nimport {\n  MainTextEnglish, MainTextKorean, MainTextJapanese\n} from \"../../../utils/languageConst\";\nimport {GetPositionTypes} from \"../../../utils/postitionType\";\nimport {GetProjectCompletedTimeTypes,GetCurrencyTypes,GetProjectScopes,GetContractTypes,GetEducationTypes,GetPeriodTypes,GetApplyProbationTypes,GetPurposalSearchTypes,GetProjectLanguages} from \"../../../utils/projectConst\";\nimport {GetProjectTypes,ProjectScopeConst} from \"../../../utils/projectConst\";\nimport {GetProjectStatuses} from \"../../../utils/projectConst\";\nimport {GetJobOfferStatuses} from \"../../../utils/jobOfferConst\";\nimport {GetNoOfDaysTypes} from \"../../../utils/noOfDaysConst\";\nimport {GetFreelancerTypeConst} from \"../../../utils/freelancerConst\";\nconst initialstate = {\n  languageType: MainTextEnglish,\n  language: 'english',\n  projectTypes: GetProjectTypes(\"english\"),\n  noOfDays: GetNoOfDaysTypes(\"english\"),\n  freelancerTypes: GetFreelancerTypeConst(\"english\"),\n  projectStatuses:GetProjectStatuses(\"english\"),\n  jobOfferStatuses:GetJobOfferStatuses(\"english\"),\n  projectScopes: GetProjectScopes(\"english\"),\n  noOfContracts:GetContractTypes(\"english\"),\n  educationType:GetEducationTypes(\"english\"),\n  projectPeriod:GetPeriodTypes(\"english\"),\n  applyProbationPeriod:GetApplyProbationTypes(\"english\"),\n  purposalSearchTypes:GetPurposalSearchTypes(\"english\"),\n  currencies:GetCurrencyTypes(\"english\"),\n  projectCompletionTime:GetProjectCompletedTimeTypes(\"english\"),\n  positionType:GetPositionTypes(\"english\"),\n  languages:GetProjectLanguages(\"english\"),\n}\n\nexport default (state = initialstate, action) => {\n  if (action.type === LANGUAGE_CONST) {\n    let lang = {};\n    if (action.payload === \"english\") {\n      lang = MainTextEnglish;\n    } else if (action.payload === 'korean') {\n      lang = MainTextKorean;\n    } else if (action.payload === 'japanese') {\n      lang = MainTextJapanese;\n    }\n      \n    return { ...state, \n    languageType: lang, \n    language: action.payload, \n    projectTypes: GetProjectTypes(action.payload), \n    noOfDays: GetNoOfDaysTypes(action.payload),\n    freelancerTypes:GetFreelancerTypeConst(action.payload),\n    projectStatuses:GetProjectStatuses(action.payload),\n    jobOfferStatuses:GetJobOfferStatuses(action.payload),\n    projectScopes:GetProjectScopes(action.payload),\n    noOfContracts:GetContractTypes(action.payload),\n    educationType:GetEducationTypes(action.payload),\n    projectPeriod:GetPeriodTypes(action.payload),\n    applyProbationPeriod:GetApplyProbationTypes(action.payload),\n    purposalSearchTypes:GetPurposalSearchTypes(action.payload),\n    currencies:GetCurrencyTypes(action.payload),\n    projectCompletionTime:GetProjectCompletedTimeTypes(action.payload),\n    positionType:GetPositionTypes(action.payload),\n    languages:GetProjectLanguages(action.payload)\n  };\n    \n  } \n  return state;\n}\n\n"]},"metadata":{},"sourceType":"module"}
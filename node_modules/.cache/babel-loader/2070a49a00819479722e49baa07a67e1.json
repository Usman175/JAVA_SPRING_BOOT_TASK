{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/evaluation/evaluation.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DropdownList from \"../../components/dropdowns/dropdownList\";\nimport RightBottom from \"../../components/rightbar/rightBottom\";\nimport RightTop from \"../../components/rightbar/rightTop\";\nimport Skeleton from \"../../components/skeleton/skeleton.jsx\";\nimport { hitApiGetUser } from \"../../services/userService.js\";\nimport { ENDPOINT } from \"../../utils/endpoint.js\";\nimport { getOptions, postOptions } from \"../../utils/httpConfig.js\";\nimport notifications from \"../../utils/notifications.js\";\nimport request from \"../../utils/request.js\";\nimport PublicFeedback from \"./publicFeedback\";\nimport RightSection from \"./rightSection\";\nimport ProjectCardbox from \"../project/allprojects/projectCardbox\";\nimport \"./evaluation.scss\";\nimport SubHeader from \"../../components/subHeader\";\n\nfunction validateWords(string, noOfWords) {\n  return string.replace(/(^\\s*)|(\\s*$)/gi, \"\").replace(/[ ]{2,}/gi, \" \").replace(/\\n /, \"\\n\").split(\" \").length < parseInt(noOfWords);\n}\n\nconst endContractReasons = [{\n  text: \"Job completed successfully\",\n  value: \"Job completed successfully\"\n}, {\n  text: \"Job cancelled due freelancer  performance\",\n  value: \"Job cancelled due freelancer  performance\"\n}, {\n  text: \"Job cancelled for other reason\",\n  value: \"Job cancelled for other reason\"\n}, {\n  text: \"Another reason\",\n  value: \"Another reason\"\n}];\n\nclass Evaluation extends Component {\n  renderType() {\n    return sessionStorage.getItem(\"userType\") == \"Freelancer\" ? \"Client\" : this.props.organizationReducer != null ? \"\" : \"Freelancer\";\n  }\n\n  constructor(props) {\n    var _this$props$location, _this$props$location$;\n\n    super(props);\n\n    this.handleUpdateFeedBack = (field, value) => {\n      this.setState({\n        feedback: { ...this.state.feedback,\n          [field]: value\n        }\n      });\n    };\n\n    this.getProjectData = async () => {\n      const {\n        history\n      } = this.props;\n      this.setState({\n        isSkeletonLoading: true\n      });\n      let response = await request(`${ENDPOINT[\"GetProject\"]}?projectId=` + this.state.projectId + \"&userId=\" + this.state.freelancerUserId, getOptions({}));\n\n      if (response.success) {\n        if (response.result) {\n          if (response.result) {\n            this.setState({\n              projectDetailResponse: response.result,\n              projectResponse: response.result\n            }, () => {\n              this.setState({\n                isSkeletonLoading: false\n              });\n            });\n          }\n        }\n      } else {\n        this.setState({\n          isSkeletonLoading: false\n        });\n        history.goBack();\n      }\n    };\n\n    this.onFieldChange = e => {\n      const {\n        fields\n      } = this.state;\n      fields[e.target.name] = e.target.value;\n      this.setState({\n        fields\n      });\n    };\n\n    this.handleSubmitClientFeedbackToOrganization = async () => {\n      var _contractDetail$userP;\n\n      const {\n        projectResponse,\n        projectContractDetail,\n        totalScore,\n        reviewText,\n        reasonForEndContract,\n        fields,\n        feedback\n      } = this.state;\n      let contractDetail = this.props.location.state.contractDetail;\n      let params = {\n        contractId: contractDetail.projectContractId,\n        clientId: contractDetail.postUserId,\n        organizationId: contractDetail === null || contractDetail === void 0 ? void 0 : (_contractDetail$userP = contractDetail.userProfile) === null || _contractDetail$userP === void 0 ? void 0 : _contractDetail$userP.organizationId,\n        createdDateTime: \"\",\n        updatedDateTime: \"\",\n        reasonForEnding: reasonForEndContract,\n        otherReason: \"\",\n        recommendPercent: fields.recommendPercentage.toString(),\n        availabilityPublicRating: feedback.availabilityStars.toString(),\n        teamSkillPublicRating: feedback.teamSkillStars.toString(),\n        qualityPublicRating: feedback.qualityOfWorkStars.toString(),\n        managementPublicRating: feedback.managementStars.toString(),\n        understandingPublicRating: feedback.understandingTask.toString(),\n        feedbackMessage: reviewText,\n        communicationEmoji: feedback.emojiFeedback,\n        totalScore: totalScore.toString()\n      };\n      this.setState({\n        loading: true\n      });\n      let reviewResponse = await request(ENDPOINT[\"AddNewOrganizationFeedback\"], postOptions(params));\n\n      if (reviewResponse.success) {\n        notifications.showSuccess(\"You have successfully added feedback for freelancer\");\n        this.props.history.push(\"/my-contracts\");\n        this.setState({\n          loading: false\n        });\n      } else {\n        notifications.showError(reviewResponse.message ? reviewResponse.message : \"Something went wrong! try later.\");\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.handleSubmitClientFeedbackToFreelancer = async () => {\n      var _contractDetail$userP2;\n\n      const {\n        projectResponse,\n        projectContractDetail,\n        totalScore,\n        reviewText,\n        reasonForEndContract,\n        fields,\n        feedback,\n        emojiFeedback\n      } = this.state;\n      let contractDetail = this.props.location.state.contractDetail;\n      let params = {\n        contractId: contractDetail.projectContractId,\n        clientId: contractDetail.postUserId,\n        individualFreelancerId: contractDetail === null || contractDetail === void 0 ? void 0 : (_contractDetail$userP2 = contractDetail.userProfile) === null || _contractDetail$userP2 === void 0 ? void 0 : _contractDetail$userP2.individualFreelancerId,\n        createdDateTime: \"\",\n        updatedDateTime: \"\",\n        reasonForEnding: reasonForEndContract,\n        otherReason: \"\",\n        recommendPercent: fields.recommendPercentage.toString(),\n        skillPublicRating: feedback.skillsStars.toString(),\n        qualityPublicRating: feedback.qualityOfWorkStars.toString(),\n        availabilityPublicRating: feedback.availabilityStars.toString(),\n        understandingPublicRating: feedback.understandingTask.toString(),\n        realiabilityFeedback: \"0\",\n        communicationEmoji: feedback.emojiFeedback,\n        feedbackMessage: reviewText,\n        totalScore: totalScore.toString()\n      };\n      this.setState({\n        loading: true\n      });\n      let reviewResponse = await request(ENDPOINT[\"AddNewFreelancerFeedback\"], postOptions(params));\n\n      if (reviewResponse.success) {\n        notifications.showSuccess(\"You have successfully added feedback for freelancer\");\n        this.props.history.push(\"/my-contracts\");\n        this.setState({\n          loading: false\n        });\n      } else {\n        notifications.showError(reviewResponse.message ? reviewResponse.message : \"Something went wrong! try later.\");\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.handleSubmitFreelancerFeedbackToClient = async () => {\n      var _contractDetail$userP3, _contractDetail$userP4;\n\n      const {\n        projectResponse,\n        projectContractDetail,\n        totalScore,\n        reviewText,\n        reasonForEndContract,\n        fields,\n        feedback,\n        emojiFeedback\n      } = this.state;\n      let contractDetail = this.props.location.state.contractDetail;\n      let params = {\n        contractId: contractDetail.projectContractId,\n        clientId: contractDetail.postUserId,\n        individualFreelancerId: contractDetail === null || contractDetail === void 0 ? void 0 : (_contractDetail$userP3 = contractDetail.userProfile) === null || _contractDetail$userP3 === void 0 ? void 0 : _contractDetail$userP3.individualFreelancerId,\n        createdDateTime: \"\",\n        updatedDateTime: \"\",\n        freelancerType: (contractDetail === null || contractDetail === void 0 ? void 0 : (_contractDetail$userP4 = contractDetail.userProfile) === null || _contractDetail$userP4 === void 0 ? void 0 : _contractDetail$userP4.individualFreelancerId) ? \"Individual\" : \"Organization\",\n        reasonForEnding: reasonForEndContract,\n        otherReason: \"\",\n        recommendPercent: fields.recommendPercentage,\n        projectPublicRating: feedback.projectUnderStandStar.toString(),\n        qualityPublicRating: feedback.qualityOfWorkStars.toString(),\n        availabilityPublicRating: feedback.availabilityStars.toString(),\n        reasonablePublicRating: feedback.responsibleStar.toString(),\n        feedbackMessage: reviewText,\n        communicationEmoji: feedback.emojiFeedback,\n        totalScore: totalScore.toString()\n      };\n      this.setState({\n        loading: true\n      });\n      let reviewResponse = await request(ENDPOINT[\"AddNewClientFeedback\"], postOptions(params));\n\n      if (reviewResponse.success) {\n        notifications.showSuccess(\"You have successfully added feedback for client\");\n        this.props.history.push(\"/my-contracts\");\n        this.setState({\n          loading: false\n        });\n      } else {\n        notifications.showError(reviewResponse.message ? reviewResponse.message : \"Something went wrong! try later.\");\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.handleSubmitEvaluationForm = async () => {\n      if (this.validateEvaluationForm()) {\n        await this.submitTheReview();\n      }\n    };\n\n    this.validateEvaluationForm = () => {\n      const {\n        reasonForEndContract,\n        reviewText,\n        totalScore,\n        errors\n      } = this.state;\n      let evaluationErrors = { ...errors\n      };\n\n      if (!reasonForEndContract || !reviewText || !totalScore || validateWords(reviewText, 5)) {\n        if (!reasonForEndContract) {\n          evaluationErrors.endingReason.hasError = true;\n          evaluationErrors.endingReason.errorMsg = \"Please select reason to end the contract\";\n        } else {\n          evaluationErrors.endingReason.hasError = false;\n          evaluationErrors.endingReason.errorMsg = \"\";\n        }\n\n        if (!reviewText) {\n          evaluationErrors.reviewText.hasError = true;\n          evaluationErrors.reviewText.errorMsg = `Please give feedback to the ${this.renderType()}`;\n        } else if (validateWords(reviewText, 5)) {\n          evaluationErrors.reviewText.hasError = true;\n          evaluationErrors.reviewText.errorMsg = \"Please write at least 5 words in your feedback\";\n        } else {\n          evaluationErrors.reviewText.hasError = false;\n          evaluationErrors.reviewText.errorMsg = \"\";\n        }\n\n        if (!totalScore) {\n          evaluationErrors.totalScore.hasError = true;\n          evaluationErrors.totalScore.errorMsg = `Please give ratings to the ${this.renderType()}`;\n        } else {\n          evaluationErrors.totalScore.hasError = false;\n          evaluationErrors.totalScore.errorMsg = \"\";\n        }\n\n        this.setState({\n          errors: { ...evaluationErrors\n          }\n        });\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.renderError = type => {\n      const {\n        errors\n      } = this.state;\n      return errors[type].hasError === true ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 7\n        }\n      }, errors[type].errorMsg) : null;\n    };\n\n    this.state = {\n      fields: {\n        recommendPercentage: 100\n      },\n      projectContractDetail: (_this$props$location = this.props.location) === null || _this$props$location === void 0 ? void 0 : (_this$props$location$ = _this$props$location.state) === null || _this$props$location$ === void 0 ? void 0 : _this$props$location$.contractDetail,\n      isSkeletonLoading: false,\n      projectId: new URLSearchParams(this.props.location.search).get(\"projectId\"),\n      type: new URLSearchParams(this.props.location.search).get(\"type\") || \"freelancer\",\n      projectDetailResponse: {},\n      projectResponse: {},\n      userData: {},\n      reasonForEndContract: \"\",\n      totalScore: 0,\n      reviewText: \"\",\n      errors: [\"endingReason\", \"totalScore\", \"reviewText\"].reduce((current, item) => {\n        current[item] = {};\n        current[item][\"hasError\"] = false;\n        current[item][\"errorMsg\"] = \"\";\n        return current;\n      }, {}),\n      feedback: {\n        skillsStars: 0,\n        qualityOfWorkStars: 0,\n        availabilityStars: 0,\n        understandingTask: 0,\n        communicationStars: 0,\n        cooperationStars: 0,\n        emojiFeedback: \"gestureEmojy\",\n        teamSkillStars: 0,\n        managementStars: 0,\n        responsibleStar: 0,\n        projectUnderStandStar: 0,\n        qualityOfRequirementStar: 0\n      },\n      loading: false\n    };\n  }\n\n  async componentDidMount() {\n    var _this$props$location$2, _this$props$location$3;\n\n    let projectId = new URLSearchParams(this.props.location.search).get(\"projectId\");\n    console.log(this.props, \"projectId projectId projectId projectId \");\n\n    if (projectId !== null) {\n      await this.getProjectData();\n    } else {\n      this.props.history.push(\"/\");\n    }\n\n    if ((_this$props$location$2 = this.props.location.state) === null || _this$props$location$2 === void 0 ? void 0 : (_this$props$location$3 = _this$props$location$2.contractDetail) === null || _this$props$location$3 === void 0 ? void 0 : _this$props$location$3.projectContractId) {} else {\n      notifications.showWarning(\"Not select any contract, first select contract!\");\n      this.props.history.push('/my-contracts');\n    }\n  }\n\n  // call to submit the reviews\n  async submitTheReview() {\n    let {\n      type\n    } = this.state;\n\n    if (type === \"freelancer\") {\n      this.handleSubmitClientFeedbackToFreelancer();\n    } else if (type === \"company\") {\n      this.handleSubmitClientFeedbackToOrganization();\n    } else if (type === \"client\") {\n      this.handleSubmitFreelancerFeedbackToClient();\n    }\n  }\n\n  render() {\n    const {\n      fields,\n      isSkeletonLoading,\n      projectDetailResponse,\n      projectResponse,\n      reasonForEndContract,\n      errors,\n      type,\n      feedback,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SubHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"card_sec evaluation-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bcknd_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }\n    }, isSkeletonLoading && /*#__PURE__*/React.createElement(Skeleton, {\n      count: 3,\n      isSkeletonLoading: isSkeletonLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 15\n      }\n    }), !isSkeletonLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-8 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card_box hover_none pfont_14\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer-evaluation-card-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ProjectCardbox, {\n      key: `cardProject${1}`,\n      selectedProject: this.state.projectDetailResponse,\n      index: 1,\n      disableShadow: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post_form feedbk_box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"green_text feedbk_lbl\",\n      style: {\n        marginLeft: \"4px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 29\n      }\n    }, \" \", \"Reason for ending contract\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: \"reason\",\n      name: \"reason\",\n      enableAutoCompleteSearch: true,\n      value: reasonForEndContract,\n      selectItem: value => {\n        this.setState({\n          reasonForEndContract: value\n        });\n      },\n      items: endContractReasons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 31\n      }\n    }), this.renderError(\"endingReason\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"position_rel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"evaluation_tab_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 25\n      }\n    }, type === \"company\" ? \"Client feedback to Company\" : \"\", type === \"freelancer\" ? \"Client feedback to Individual freelancer\" : \"\", type === \"client\" ? \"Individual Freelancer or Company to Client\" : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"feedbk_bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 29\n      }\n    }, \"How likely are you to recommend this\", \" \", this.renderType(), \" to a friend or a colleague?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress_bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 33\n      }\n    }, \"Not at all likely\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 33\n      }\n    }, \"Extremely likely\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slidecontainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      onChange: this.onFieldChange,\n      name: \"recommendPercentage\",\n      min: \"0\",\n      max: \"100\",\n      value: fields.recommendPercentage,\n      className: \"slider\",\n      id: \"myRange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"demo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 37\n      }\n    }, fields.recommendPercentage), \"%\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 35\n      }\n    }, \"100%\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"public_feedbk\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(PublicFeedback, {\n      errors: { ...errors\n      },\n      userType: this.renderType(),\n      type: this.state.type,\n      emitToSetTotalScore: score => this.setState({\n        totalScore: score\n      }),\n      feedback: feedback,\n      handleUpdateFeedBack: this.handleUpdateFeedBack,\n      emitToSetReviewText: review => this.setState({\n        reviewText: review\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"evaluation-bottom-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 25\n      }\n    }, \"Ending this contract will permanently lock your\", \" \", this.renderType(), \"'s Work Diary for this project. We'll let your \", this.renderType(), \" know the job is done and send you a final statement for any unpaid work.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"save_cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn save_btn\",\n      onClick: () => this.handleSubmitEvaluationForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 27\n      }\n    }, \"Submit\", \" \", loading ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-spinner fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 31\n      }\n    }) : \"\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.history.push(\"/my-contracts\"),\n      type: \"submit\",\n      className: \"btn cancel_btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 27\n      }\n    }, \"Cancel\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    organizationReducer: state.organizationReducer.organization,\n    userReducer: state.userReducer\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, null)(Evaluation));","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/evaluation/evaluation.jsx"],"names":["React","Component","connect","withRouter","DropdownList","RightBottom","RightTop","Skeleton","hitApiGetUser","ENDPOINT","getOptions","postOptions","notifications","request","PublicFeedback","RightSection","ProjectCardbox","SubHeader","validateWords","string","noOfWords","replace","split","length","parseInt","endContractReasons","text","value","Evaluation","renderType","sessionStorage","getItem","props","organizationReducer","constructor","handleUpdateFeedBack","field","setState","feedback","state","getProjectData","history","isSkeletonLoading","response","projectId","freelancerUserId","success","result","projectDetailResponse","projectResponse","goBack","onFieldChange","e","fields","target","name","handleSubmitClientFeedbackToOrganization","projectContractDetail","totalScore","reviewText","reasonForEndContract","contractDetail","location","params","contractId","projectContractId","clientId","postUserId","organizationId","userProfile","createdDateTime","updatedDateTime","reasonForEnding","otherReason","recommendPercent","recommendPercentage","toString","availabilityPublicRating","availabilityStars","teamSkillPublicRating","teamSkillStars","qualityPublicRating","qualityOfWorkStars","managementPublicRating","managementStars","understandingPublicRating","understandingTask","feedbackMessage","communicationEmoji","emojiFeedback","loading","reviewResponse","showSuccess","push","showError","message","handleSubmitClientFeedbackToFreelancer","individualFreelancerId","skillPublicRating","skillsStars","realiabilityFeedback","handleSubmitFreelancerFeedbackToClient","freelancerType","projectPublicRating","projectUnderStandStar","reasonablePublicRating","responsibleStar","handleSubmitEvaluationForm","validateEvaluationForm","submitTheReview","errors","evaluationErrors","endingReason","hasError","errorMsg","renderError","type","URLSearchParams","search","get","userData","reduce","current","item","communicationStars","cooperationStars","qualityOfRequirementStar","componentDidMount","console","log","showWarning","render","marginLeft","score","review","mapStateToProps","organization","userReducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DropdownList from \"../../components/dropdowns/dropdownList\";\nimport RightBottom from \"../../components/rightbar/rightBottom\";\nimport RightTop from \"../../components/rightbar/rightTop\";\nimport Skeleton from \"../../components/skeleton/skeleton.jsx\";\nimport { hitApiGetUser } from \"../../services/userService.js\";\nimport { ENDPOINT } from \"../../utils/endpoint.js\";\nimport { getOptions, postOptions } from \"../../utils/httpConfig.js\";\nimport notifications from \"../../utils/notifications.js\";\nimport request from \"../../utils/request.js\";\nimport PublicFeedback from \"./publicFeedback\";\nimport RightSection from \"./rightSection\";\nimport ProjectCardbox from \"../project/allprojects/projectCardbox\";\nimport \"./evaluation.scss\";\nimport SubHeader from \"../../components/subHeader\";\n\nfunction validateWords(string, noOfWords) {\n  return (\n    string\n      .replace(/(^\\s*)|(\\s*$)/gi, \"\")\n      .replace(/[ ]{2,}/gi, \" \")\n      .replace(/\\n /, \"\\n\")\n      .split(\" \").length < parseInt(noOfWords)\n  );\n}\n\nconst endContractReasons = [\n  {\n    text: \"Job completed successfully\",\n    value: \"Job completed successfully\",\n  },\n  {\n    text: \"Job cancelled due freelancer  performance\",\n    value: \"Job cancelled due freelancer  performance\",\n  },\n  {\n    text: \"Job cancelled for other reason\",\n    value: \"Job cancelled for other reason\",\n  },\n  {\n    text: \"Another reason\",\n    value: \"Another reason\",\n  },\n];\n\nclass Evaluation extends Component {\n  renderType() {\n    return sessionStorage.getItem(\"userType\") == \"Freelancer\"\n      ? \"Client\"\n      : this.props.organizationReducer != null\n      ? \"\"\n      : \"Freelancer\";\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: { recommendPercentage: 100 },\n      projectContractDetail: this.props.location?.state?.contractDetail,\n      isSkeletonLoading: false,\n      projectId: new URLSearchParams(this.props.location.search).get(\n        \"projectId\"\n      ),\n      type:\n        new URLSearchParams(this.props.location.search).get(\"type\") ||\n        \"freelancer\",\n      projectDetailResponse: {},\n      projectResponse: {},\n      userData: {},\n      reasonForEndContract: \"\",\n      totalScore: 0,\n      reviewText: \"\",\n      errors: [\"endingReason\", \"totalScore\", \"reviewText\"].reduce(\n        (current, item) => {\n          current[item] = {};\n          current[item][\"hasError\"] = false;\n          current[item][\"errorMsg\"] = \"\";\n          return current;\n        },\n        {}\n      ),\n      feedback: {\n        skillsStars: 0,\n        qualityOfWorkStars: 0,\n        availabilityStars: 0,\n        understandingTask: 0,\n        communicationStars: 0,\n        cooperationStars: 0,\n        emojiFeedback: \"gestureEmojy\",\n        teamSkillStars: 0,\n        managementStars: 0,\n        responsibleStar: 0,\n        projectUnderStandStar: 0,\n        qualityOfRequirementStar: 0,\n      },\n      loading: false,\n    };\n  }\n\n  handleUpdateFeedBack = (field, value) => {\n    this.setState({\n      feedback: { ...this.state.feedback, [field]: value },\n    });\n  };\n  async componentDidMount() {\n    let projectId = new URLSearchParams(this.props.location.search).get(\n      \"projectId\"\n    );\n    console.log(this.props, \"projectId projectId projectId projectId \");\n    if (projectId !== null) {\n      await this.getProjectData();\n    } else {\n      this.props.history.push(\"/\");\n    }\n\n    if( this.props.location.state?.contractDetail?.projectContractId){\n\n    }else{\n      notifications.showWarning(\"Not select any contract, first select contract!\")\n      this.props.history.push('/my-contracts')\n    }\n  }\n\n  getProjectData = async () => {\n    const { history } = this.props;\n    this.setState({ isSkeletonLoading: true });\n    let response = await request(\n      `${ENDPOINT[\"GetProject\"]}?projectId=` +\n        this.state.projectId +\n        \"&userId=\" +\n        this.state.freelancerUserId,\n      getOptions({})\n    );\n    if (response.success) {\n      if (response.result) {\n        if (response.result) {\n          this.setState(\n            {\n              projectDetailResponse: response.result,\n              projectResponse: response.result,\n            },\n            () => {\n              this.setState({ isSkeletonLoading: false });\n            }\n          );\n        }\n      }\n    } else {\n      this.setState({ isSkeletonLoading: false });\n      history.goBack();\n    }\n  };\n\n  onFieldChange = (e) => {\n    const { fields } = this.state;\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields });\n  };\n\n  // call to submit the reviews\n\n  async submitTheReview() {\n    let { type } = this.state;\n\n    if (type === \"freelancer\") {\n      this.handleSubmitClientFeedbackToFreelancer();\n    } else if (type === \"company\") {\n      this.handleSubmitClientFeedbackToOrganization();\n    } else if (type === \"client\") {\n      this.handleSubmitFreelancerFeedbackToClient();\n    }\n  }\n  handleSubmitClientFeedbackToOrganization = async () => {\n    const {\n      projectResponse,\n      projectContractDetail,\n      totalScore,\n      reviewText,\n      reasonForEndContract,\n      fields,\n      feedback,\n    } = this.state;\n    let contractDetail = this.props.location.state.contractDetail;\n    let params = {\n      contractId: contractDetail.projectContractId,\n      clientId: contractDetail.postUserId,\n      organizationId: contractDetail?.userProfile?.organizationId,\n      createdDateTime: \"\",\n      updatedDateTime: \"\",\n      reasonForEnding: reasonForEndContract,\n      otherReason: \"\",\n      recommendPercent: fields.recommendPercentage.toString(),\n      availabilityPublicRating: feedback.availabilityStars.toString(),\n      teamSkillPublicRating: feedback.teamSkillStars.toString(),\n      qualityPublicRating: feedback.qualityOfWorkStars.toString(),\n      managementPublicRating:feedback.managementStars.toString(),\n      understandingPublicRating: feedback.understandingTask.toString(),\n      feedbackMessage: reviewText,\n      communicationEmoji:feedback.emojiFeedback,\n      totalScore: totalScore.toString(),\n    };\n    this.setState({ loading: true });\n    let reviewResponse = await request(\n      ENDPOINT[\"AddNewOrganizationFeedback\"],\n      postOptions(params)\n    );\n\n    if (reviewResponse.success) {\n      notifications.showSuccess(\n        \"You have successfully added feedback for freelancer\"\n      );\n      this.props.history.push(\"/my-contracts\");\n      this.setState({ loading: false });\n    } else {\n      notifications.showError(\n        reviewResponse.message\n          ? reviewResponse.message\n          : \"Something went wrong! try later.\"\n      );\n      this.setState({ loading: false });\n    }\n\n  };\n  handleSubmitClientFeedbackToFreelancer = async () => {\n    const {\n      projectResponse,\n      projectContractDetail,\n      totalScore,\n      reviewText,\n      reasonForEndContract,\n      fields,\n      feedback,\n      emojiFeedback\n    } = this.state;\n    let contractDetail = this.props.location.state.contractDetail;\n    let params = {\n      contractId: contractDetail.projectContractId,\n      clientId: contractDetail.postUserId,\n      individualFreelancerId:\n        contractDetail?.userProfile?.individualFreelancerId,\n      createdDateTime: \"\",\n      updatedDateTime: \"\",\n      reasonForEnding: reasonForEndContract,\n      otherReason: \"\",\n      recommendPercent: fields.recommendPercentage.toString(),\n      skillPublicRating: feedback.skillsStars.toString(),\n      qualityPublicRating: feedback.qualityOfWorkStars.toString(),\n      availabilityPublicRating: feedback.availabilityStars.toString(),\n      understandingPublicRating: feedback.understandingTask.toString(),\n      realiabilityFeedback: \"0\",\n      \n      communicationEmoji:feedback.emojiFeedback,\n      feedbackMessage: reviewText,\n      totalScore: totalScore.toString(),\n    };\n    this.setState({ loading: true });\n    let reviewResponse = await request(\n      ENDPOINT[\"AddNewFreelancerFeedback\"],\n      postOptions(params)\n    );\n\n    if (reviewResponse.success) {\n      notifications.showSuccess(\n        \"You have successfully added feedback for freelancer\"\n      );\n      this.props.history.push(\"/my-contracts\");\n      this.setState({ loading: false });\n    } else {\n      notifications.showError(\n        reviewResponse.message\n          ? reviewResponse.message\n          : \"Something went wrong! try later.\"\n      );\n      this.setState({ loading: false });\n    }\n  };\n  handleSubmitFreelancerFeedbackToClient = async () => {\n    const {\n      projectResponse,\n      projectContractDetail,\n      totalScore,\n      reviewText,\n      reasonForEndContract,\n      fields,\n      feedback,\n      emojiFeedback\n    } = this.state;\n    let contractDetail = this.props.location.state.contractDetail;\n    let params = {\n      contractId: contractDetail.projectContractId,\n      clientId: contractDetail.postUserId,\n      individualFreelancerId:\n        contractDetail?.userProfile?.individualFreelancerId,\n      createdDateTime: \"\",\n      updatedDateTime: \"\",\n      freelancerType: contractDetail?.userProfile?.individualFreelancerId\n        ? \"Individual\"\n        : \"Organization\",\n      reasonForEnding: reasonForEndContract,\n      otherReason: \"\",\n      recommendPercent: fields.recommendPercentage,\n      projectPublicRating: feedback.projectUnderStandStar.toString(),\n      qualityPublicRating: feedback.qualityOfWorkStars.toString(),\n      availabilityPublicRating: feedback.availabilityStars.toString(),\n      reasonablePublicRating: feedback.responsibleStar.toString(),\n      feedbackMessage: reviewText,\n      communicationEmoji:feedback.emojiFeedback,\n      totalScore: totalScore.toString(),\n    };\n    this.setState({ loading: true });\n    let reviewResponse = await request(\n      ENDPOINT[\"AddNewClientFeedback\"],\n      postOptions(params)\n    );\n\n    if (reviewResponse.success) {\n      notifications.showSuccess(\n        \"You have successfully added feedback for client\"\n      );\n      this.props.history.push(\"/my-contracts\");\n      this.setState({ loading: false });\n    } else {\n      notifications.showError(\n        reviewResponse.message\n          ? reviewResponse.message\n          : \"Something went wrong! try later.\"\n      );\n      this.setState({ loading: false });\n    }\n  };\n  handleSubmitEvaluationForm = async () => {\n    if (this.validateEvaluationForm()) {\n      await this.submitTheReview();\n    }\n  };\n\n  validateEvaluationForm = () => {\n    const { reasonForEndContract, reviewText, totalScore, errors } = this.state;\n    let evaluationErrors = { ...errors };\n\n    if (\n      !reasonForEndContract ||\n      !reviewText ||\n      !totalScore ||\n      validateWords(reviewText, 5)\n    ) {\n      if (!reasonForEndContract) {\n        evaluationErrors.endingReason.hasError = true;\n        evaluationErrors.endingReason.errorMsg =\n          \"Please select reason to end the contract\";\n      } else {\n        evaluationErrors.endingReason.hasError = false;\n        evaluationErrors.endingReason.errorMsg = \"\";\n      }\n\n      if (!reviewText) {\n        evaluationErrors.reviewText.hasError = true;\n        evaluationErrors.reviewText.errorMsg = `Please give feedback to the ${this.renderType()}`;\n      } else if (validateWords(reviewText, 5)) {\n        evaluationErrors.reviewText.hasError = true;\n        evaluationErrors.reviewText.errorMsg =\n          \"Please write at least 5 words in your feedback\";\n      } else {\n        evaluationErrors.reviewText.hasError = false;\n        evaluationErrors.reviewText.errorMsg = \"\";\n      }\n\n      if (!totalScore) {\n        evaluationErrors.totalScore.hasError = true;\n        evaluationErrors.totalScore.errorMsg = `Please give ratings to the ${this.renderType()}`;\n      } else {\n        evaluationErrors.totalScore.hasError = false;\n        evaluationErrors.totalScore.errorMsg = \"\";\n      }\n      this.setState({ errors: { ...evaluationErrors } });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  renderError = (type) => {\n    const { errors } = this.state;\n    return errors[type].hasError === true ? (\n      <p className=\"text-danger\">{errors[type].errorMsg}</p>\n    ) : null;\n  };\n\n  render() {\n    const {\n      fields,\n      isSkeletonLoading,\n      projectDetailResponse,\n      projectResponse,\n      reasonForEndContract,\n      errors,\n      type,\n      feedback,\n      loading,\n      \n    } = this.state;\n    return (\n      <>\n        <SubHeader />\n        <section className=\"card_sec evaluation-page\">\n          <div className=\"bcknd_container\">\n            {isSkeletonLoading && (\n              <Skeleton count={3} isSkeletonLoading={isSkeletonLoading} />\n            )}\n\n            {!isSkeletonLoading && (\n              <div className=\"row\">\n                <div className=\"col-lg-2 col-md-12\"></div>\n                <div className=\"col-lg-8 col-md-12\">\n                  <div className=\"card_box hover_none pfont_14\">\n                    <div className=\"customer-evaluation-card-margin\">\n                      <ProjectCardbox\n                        key={`cardProject${1}`}\n                        selectedProject={this.state.projectDetailResponse}\n                        index={1}\n                        disableShadow\n                      />\n                    </div>\n\n                    <div className=\"post_form feedbk_box\">\n                      <div className=\"row justify-content-between align-items-center\">\n                        <div className=\"col-md-5\">\n                          <div className=\"form-group\">\n                            <label\n                              className=\"green_text feedbk_lbl\"\n                              style={{ marginLeft: \"4px\" }}\n                            >\n                              {\" \"}\n                              Reason for ending contract\n                            </label>\n                            <div className=\"\">\n                              <DropdownList\n                                id=\"reason\"\n                                name=\"reason\"\n                                enableAutoCompleteSearch\n                                value={reasonForEndContract}\n                                selectItem={(value) => {\n                                  this.setState(\n                                    { reasonForEndContract: value },\n                                  );\n                                }}\n                                items={endContractReasons}\n                              />\n                              {this.renderError(\"endingReason\")}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"position_rel\">\n                        <h3 className=\"evaluation_tab_title\">\n                          {type === \"company\"\n                            ? \"Client feedback to Company\"\n                            : \"\"}\n                          {type === \"freelancer\"\n                            ? \"Client feedback to Individual freelancer\"\n                            : \"\"}\n                          {type === \"client\"\n                            ? \"Individual Freelancer or Company to Client\"\n                            : \"\"}\n                          {/* Give Feedback to Your {this.renderType()} */}\n                        </h3>\n                      </div>\n\n                      <div className=\"feedbk_bar\">\n                        <div className=\"row justify-content-between align-items-center\">\n                          <div className=\"col-md-7\">\n                            <p>\n                              How likely are you to recommend this{\" \"}\n                              {this.renderType()} to a friend or a colleague?\n                            </p>\n                            <div className=\"progress_bar\">\n                              <div className=\"d-flex justify-content-between\">\n                                <label>Not at all likely</label>\n                                <label>Extremely likely</label>\n                              </div>\n                              <div className=\"slidecontainer\">\n                                <input\n                                  type=\"range\"\n                                  onChange={this.onFieldChange}\n                                  name=\"recommendPercentage\"\n                                  min=\"0\"\n                                  max=\"100\"\n                                  value={fields.recommendPercentage}\n                                  className=\"slider\"\n                                  id=\"myRange\"\n                                />\n                                <div className=\"d-flex justify-content-between\">\n                                  <label>\n                                    <span id=\"demo\">\n                                      {fields.recommendPercentage}\n                                    </span>\n                                    %\n                                  </label>\n                                  <label>100%</label>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"public_feedbk\">\n                        <PublicFeedback\n                          errors={{ ...errors }}\n                          userType={this.renderType()}\n                          type={this.state.type}\n                          emitToSetTotalScore={(score) =>\n                            this.setState({ totalScore: score })\n                          }\n                          feedback={feedback}\n                          handleUpdateFeedBack={this.handleUpdateFeedBack}\n                          emitToSetReviewText={(review) =>\n                            this.setState({ reviewText: review })\n                          }\n                        />\n                      </div>\n                      <div className=\"evaluation-bottom-area\">\n                        <p>\n                          Ending this contract will permanently lock your{\" \"}\n                          {this.renderType()}'s Work Diary for this project.\n                          We'll let your {this.renderType()} know the job is\n                          done and send you a final statement for any unpaid\n                          work.\n                        </p>\n                        <div className=\"save_cancel\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn save_btn\"\n                            onClick={() => this.handleSubmitEvaluationForm()}\n                          >\n                            Submit{\" \"}\n                            {loading ? (\n                              <i className=\"fa fa-spinner fa-spin\"></i>\n                            ) : (\n                              \"\"\n                            )}\n                          </button>\n                          <button\n                            onClick={() =>\n                              this.props.history.push(\"/my-contracts\")\n                            }\n                            type=\"submit\"\n                            className=\"btn cancel_btn\"\n                          >\n                            Cancel\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-2 col-md-12\"></div>\n              </div>\n            )}\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    organizationReducer: state.organizationReducer.organization,\n    userReducer: state.userReducer,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, null)(Evaluation));\n"]},"metadata":{},"sourceType":"module"}
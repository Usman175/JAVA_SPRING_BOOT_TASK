{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/components/proposals/withdrawModal/index.js\";\nimport React from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport './withdrawModal.scss';\n\nfunction WithDrawModal(props) {\n  return /*#__PURE__*/React.createElement(Modal, {\n    dialogClassName: \"jungle-modal withdraw-proposal-modal\",\n    contentClassName: \"jungle-modal-content lg\",\n    show: props.isWithdrawalProposalModelOpen,\n    onHide: () => props.handleClose(),\n    centered: true,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    className: \"position-relative jungle-modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/bearoleIcon.png\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => props.handleClose(),\n    className: \"custom-close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, ' ', \"x\", ' ')), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"withdraw-proposal-modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"withdraw-proposal-modal-desc d-flex justify-content-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"We Will politely notify the client that you are not interested. The client will be able to view the reason you've withdrawn your proposal.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"withdraw-proposal-modal-content-list justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left_card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, props.projectProposalWithdrawReasons && props.projectProposalWithdrawReasons.map((reason, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"withdraw-proposal-modal-content-list-item\",\n    key: `radioWithdrawReason${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    className: \"form-check-input\",\n    name: \"projectProposalWithdrawReasons\",\n    id: `${props.modalKey}radioReason${reason.id}`,\n    value: reason.name,\n    onChange: e => {\n      const proposalWithdraw = props.proposalWithdraw;\n\n      if (!e.target.checked) {\n        proposalWithdraw.withdrawReason = \"\";\n        props.handleUpdateProposalWithdraw(proposalWithdraw);\n      } else {\n        proposalWithdraw.withdrawReason = e.target.value;\n        props.handleUpdateProposalWithdraw(proposalWithdraw);\n      }\n    },\n    checked: props.proposalWithdraw.withdrawReason !== \"\" && props.proposalWithdraw.withdrawReason === reason.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      width: \"auto\",\n      height: \"auto\"\n    },\n    className: \"form-check-label\",\n    htmlFor: `${props.modalKey}radioReason${reason.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \" \", reason.name, \" \"))), props.errorMessage.withdrawReason && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, props.errorMessage.withdrawReason))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-between align-items-center mb-4\",\n    hidden: props.proposalWithdraw.withdrawReason !== \"Other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 left_card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Message\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"compulsory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 26\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Add an optional message to share with the client when we notify them that this proposal has been withdrawan.\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    placeholder: \"Message\",\n    name: \"withdrawMessage\",\n    value: props.proposalWithdraw.withdrawMessage,\n    maxLength: \"500\",\n    onChange: e => {\n      let errorMessage = {};\n      const {\n        proposalWithdraw\n      } = props;\n      proposalWithdraw.withdrawMessage = e.target.value;\n      if (proposalWithdraw.withdrawMessage !== undefined && proposalWithdraw.withdrawMessage !== null && proposalWithdraw.withdrawMessage !== \"\") errorMessage[\"withdrawMessage\"] = null;\n      props.setErrorMessage(errorMessage);\n      props.handleUpdateProposalWithdraw(proposalWithdraw);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), props.errorMessage.withdrawMessage && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, props.errorMessage.withdrawMessage))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"custom-control-input\",\n    name: `isBlockFutureInvitation${props.modalKey}`,\n    id: `chkIsBlockFutureInvitation${props.modalKey}`,\n    onChange: e => {\n      const proposalWithdraw = props.proposalWithdraw;\n      proposalWithdraw.isBlockFutureInvitation = e.target.checked;\n      props.handleUpdateProposalWithdraw(proposalWithdraw);\n    },\n    checked: props.proposalWithdraw.isBlockFutureInvitation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: `chkIsBlockFutureInvitation${props.modalKey}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \" \", \"Block future invitations from this client\", \" \")))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    className: \"withdrawlProposal_savebtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: props.loading,\n    onClick: () => props.onPageRedirectHandle(\"/my-proposals\"),\n    className: \"btn save_btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \" \", \"Withdraw\", \" \", \"  \", props.loading ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-spinner fa-spin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }) : \"\"))));\n}\n\nexport default WithDrawModal;","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/components/proposals/withdrawModal/index.js"],"names":["React","Modal","WithDrawModal","props","isWithdrawalProposalModelOpen","handleClose","projectProposalWithdrawReasons","map","reason","index","modalKey","id","name","e","proposalWithdraw","target","checked","withdrawReason","handleUpdateProposalWithdraw","value","width","height","errorMessage","withdrawMessage","undefined","setErrorMessage","isBlockFutureInvitation","loading","onPageRedirectHandle"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Modal from \"react-bootstrap/Modal\";\nimport './withdrawModal.scss'\nfunction WithDrawModal(props) {\n    return (\n        <Modal\n        dialogClassName = \"jungle-modal withdraw-proposal-modal\"\n        contentClassName=\"jungle-modal-content lg\"\n        show={props.isWithdrawalProposalModelOpen}\n        onHide={() =>props.handleClose()}\n        centered\n        size=\"lg\"\n      >\n        <Modal.Header className=\"position-relative jungle-modal-header\">\n          <img\n            src =\"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/bearoleIcon.png\"\n            alt=\"\"\n          />\n          <span\n            onClick={()=>props.handleClose()}\n            className=\"custom-close\"\n          >\n            {' '}\n            x{' '}\n          </span>\n        </Modal.Header>\n        <Modal.Body>\n          <div className = \"withdraw-proposal-modal-content\" >\n            <div className = \"withdraw-proposal-modal-desc d-flex justify-content-center align-items-center\">\n              We Will politely notify the client that you are not\n              interested. The client will be able to view the reason you've\n              withdrawn your proposal.\n            </div>\n            <div className = \"withdraw-proposal-modal-content-list justify-content-between align-items-center\" >\n              <div className=\"left_card\">\n                {props.projectProposalWithdrawReasons &&\n                  props.projectProposalWithdrawReasons.map(\n                    (reason, index) => (\n                      <div\n                        className=\"withdraw-proposal-modal-content-list-item\"\n                        key={`radioWithdrawReason${index}`}\n                      >\n                        <input\n                          type=\"radio\"\n                          className=\"form-check-input\"\n                          name=\"projectProposalWithdrawReasons\"\n                          id={`${props.modalKey}radioReason${reason.id}`}\n                          value={reason.name}\n                          onChange={(e) => {\n                            const proposalWithdraw = props.proposalWithdraw;\n                            if (!e.target.checked) {\n                              proposalWithdraw.withdrawReason = \"\";\n                              props.handleUpdateProposalWithdraw(proposalWithdraw)\n                            } else {\n                              proposalWithdraw.withdrawReason =e.target.value;\n                              props.handleUpdateProposalWithdraw(proposalWithdraw)\n                            }\n                          }}\n                          checked={\n                            props.proposalWithdraw.withdrawReason !==\n                              \"\" &&\n                            props.proposalWithdraw.withdrawReason ===\n                              reason.name\n                          }\n                        />\n                        <label\n                          style={{ width: \"auto\", height: \"auto\" }}\n                          className=\"form-check-label\"\n                          htmlFor={`${props.modalKey}radioReason${reason.id}`}\n                        >\n                          {\" \"}\n                          {reason.name}{\" \"}\n                        </label>\n                      </div>\n                    )\n                  )}\n                {props.errorMessage.withdrawReason && (\n                  <p className=\"text-danger\">\n                    {props.errorMessage.withdrawReason}\n                  </p>\n                )}\n              </div>\n            </div>\n\n            <div\n              className=\"row justify-content-between align-items-center mb-4\"\n              hidden={\n                props.proposalWithdraw.withdrawReason !== \"Other\"\n              }\n            >\n              <div className=\"col-md-12 left_card\">\n                <h6>\n                  Message<span className=\"compulsory\">*</span>\n                </h6>\n                <div className=\"d-flex justify-content-center align-items-center mb-2\">\n                  Add an optional message to share with the client when we\n                  notify them that this proposal has been withdrawan.\n                </div>\n                <textarea\n                  className=\"form-control\"\n                  placeholder=\"Message\"\n                  name=\"withdrawMessage\"\n                  value={props.proposalWithdraw.withdrawMessage}\n                  maxLength=\"500\"\n                  onChange={(e) => {\n                    let errorMessage = {};\n                    const { proposalWithdraw } = props;\n                    proposalWithdraw.withdrawMessage = e.target.value;\n                    if (\n                      proposalWithdraw.withdrawMessage !== undefined &&\n                      proposalWithdraw.withdrawMessage !== null &&\n                      proposalWithdraw.withdrawMessage !== \"\"\n                    )\n                      errorMessage[\"withdrawMessage\"] = null;\n                      props.setErrorMessage(errorMessage)\n                      props.handleUpdateProposalWithdraw(proposalWithdraw)\n                  }}\n                ></textarea>\n                {props.errorMessage.withdrawMessage && (\n                  <p className=\"text-danger\">\n                    {props.errorMessage.withdrawMessage}\n                  </p>\n                )}\n              </div>\n            </div>\n\n            <div className=\"custom-control custom-checkbox\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                name={`isBlockFutureInvitation${props.modalKey}`}\n                id={`chkIsBlockFutureInvitation${props.modalKey}`}\n                onChange={(e) => {\n                  const proposalWithdraw = props.proposalWithdraw;\n                  proposalWithdraw.isBlockFutureInvitation =\n                    e.target.checked;\n                    props.handleUpdateProposalWithdraw(proposalWithdraw)\n                }}\n                checked={\n                  props.proposalWithdraw.isBlockFutureInvitation\n                }\n              />\n              <label\n                className=\"custom-control-label\"\n                htmlFor={`chkIsBlockFutureInvitation${props.modalKey}`}\n              >\n                {\" \"}\n                Block future invitations from this client{\" \"}\n              </label>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer className=\"withdrawlProposal_savebtn\">\n          <div>\n          <button\n            type=\"button\"\n            disabled={props.loading}\n            onClick={() => props.onPageRedirectHandle(\"/my-proposals\")}\n            className=\"btn save_btn\"\n          >\n            {\" \"}\n            Withdraw{\" \"}  {props.loading ? (\n                            <i className=\"fa fa-spinner fa-spin\"></i>\n                          ) : (\n                            \"\"\n                          )}\n          </button>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    )\n}\n\nexport default WithDrawModal\n"]},"metadata":{},"sourceType":"module"}
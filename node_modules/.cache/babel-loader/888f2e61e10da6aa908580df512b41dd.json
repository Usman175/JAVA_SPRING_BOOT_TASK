{"ast":null,"code":"import * as types from \"../../constants/constant.js\";\nexport function getContestByIdRequest() {\n  return {\n    type: types.GET_CONTEST_BY_PROJECT_ID_REQUEST\n  };\n}\nexport function getContestByIdRequestSuccess(data) {\n  return {\n    type: types.GET_CONTEST_BY_PROJECT_ID_REQUEST_SUCCESS,\n    payload: data\n  };\n}\nexport function getContestByIdRequestFailure(data) {\n  return {\n    type: types.GET_CONTEST_BY_PROJECT_ID_REQUEST_FAILED,\n    payload: data\n  };\n}\nexport function getContestByIdRequestCleanUp() {\n  return {\n    type: types.GET_CONTEST_BY_PROJECT_ID_REQUEST_CLEANUP\n  };\n}","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/store/action/Contest/contestActions.js"],"names":["types","getContestByIdRequest","type","GET_CONTEST_BY_PROJECT_ID_REQUEST","getContestByIdRequestSuccess","data","GET_CONTEST_BY_PROJECT_ID_REQUEST_SUCCESS","payload","getContestByIdRequestFailure","GET_CONTEST_BY_PROJECT_ID_REQUEST_FAILED","getContestByIdRequestCleanUp","GET_CONTEST_BY_PROJECT_ID_REQUEST_CLEANUP"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,6BAAvB;AAEA,OAAO,SAASC,qBAAT,GAAiC;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAEF,KAAK,CAACG;AADT,GAAP;AAGH;AAED,OAAO,SAASC,4BAAT,CAAsCC,IAAtC,EAA4C;AAC/C,SAAO;AACHH,IAAAA,IAAI,EAAEF,KAAK,CAACM,yCADT;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH;AAED,OAAO,SAASG,4BAAT,CAAsCH,IAAtC,EAA4C;AAC/C,SAAM;AACFH,IAAAA,IAAI,EAAEF,KAAK,CAACS,wCADV;AAEFF,IAAAA,OAAO,EAAEF;AAFP,GAAN;AAIH;AAGD,OAAO,SAASK,4BAAT,GAAwC;AAC3C,SAAM;AACFR,IAAAA,IAAI,EAAEF,KAAK,CAACW;AADV,GAAN;AAGH","sourcesContent":["import * as types from \"../../constants/constant.js\"\n\nexport function getContestByIdRequest() {\n    return {\n        type: types.GET_CONTEST_BY_PROJECT_ID_REQUEST\n    }\n}\n\nexport function getContestByIdRequestSuccess(data) {\n    return {\n        type: types.GET_CONTEST_BY_PROJECT_ID_REQUEST_SUCCESS,\n        payload: data\n    }\n}\n\nexport function getContestByIdRequestFailure(data) {\n    return{\n        type: types.GET_CONTEST_BY_PROJECT_ID_REQUEST_FAILED,\n        payload: data\n    }\n}\n\n\nexport function getContestByIdRequestCleanUp() {\n    return{\n        type: types.GET_CONTEST_BY_PROJECT_ID_REQUEST_CLEANUP,\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
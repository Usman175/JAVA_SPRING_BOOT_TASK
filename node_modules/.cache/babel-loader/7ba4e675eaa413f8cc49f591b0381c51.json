{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/freelancer/freelancerContents/leftFreelancerContent.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport request from \"../../../utils/request\";\nimport { ENDPOINT } from \"../../../utils/endpoint\";\nimport { getOptions } from \"../../../utils/httpConfig\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Status from \"../../../components/status/status\";\nimport \"./freelancerContents.scss\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { getProfileImage } from \"../../../utils/getProfileUrl\";\nconst useStylesBootstrap = makeStyles(theme => ({\n  arrow: {\n    color: theme.palette.common.black\n  },\n  tooltip: {\n    backgroundColor: theme.palette.common.black,\n    zIndex: 999999\n  }\n}));\n\nfunction BootstrapTooltip(props) {\n  const classes = useStylesBootstrap();\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    arrow: true,\n    classes: classes\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction LeftFreelancerContent({\n  freelancer,\n  ...props\n}) {\n  var _freelancer$onlineSta;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"client_profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"freelancer-profile-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"freelancer-profile-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, (freelancer === null || freelancer === void 0 ? void 0 : freelancer.userProfileUrl) || freelancer.companyLogo ? /*#__PURE__*/React.createElement(\"img\", {\n    src: getProfileImage(freelancer.userProfileUrl || freelancer.companyLogo),\n    alt: \"\",\n    className: \"freelancer-profile-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Skeleton, {\n    width: \"100%\",\n    style: {\n      height: \"113px\",\n      marginTop: \"-30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }) // <i class=\"fa fa-4x fa-user\" aria-hidden=\"true\"></i>\n  , /*#__PURE__*/React.createElement(Status, {\n    status: ((_freelancer$onlineSta = freelancer.onlineStatus) === null || _freelancer$onlineSta === void 0 ? void 0 : _freelancer$onlineSta.toLowerCase()) || \"offline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), freelancer.companyName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"company-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \" Company\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"individual-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Individual\")), /*#__PURE__*/React.createElement(BootstrapTooltip, {\n    PopperProps: {\n      disablePortal: true\n    },\n    arrow: true,\n    placement: \"left\",\n    title: freelancer.companyName ? freelancer.companyName : freelancer.userName && freelancer.userName != \" \" ? freelancer.userName : \"Not Available\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    onClick: () => {\n      if (freelancer.organizationId) {\n        props.history.push(`/organization-profile/${freelancer.organizationId}`);\n      }\n\n      if (freelancer.individualFreelancerId) {\n        props.history.push(`/freelancer-profile/${freelancer.individualFreelancerId}`);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \" \", freelancer.companyName ? freelancer.companyName : freelancer.userName && freelancer.userName != \" \" ? freelancer.userName : \"Not Available\", \" \")))));\n}\n\nexport default LeftFreelancerContent;","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/freelancer/freelancerContents/leftFreelancerContent.jsx"],"names":["React","useEffect","useState","request","ENDPOINT","getOptions","Skeleton","Status","withStyles","makeStyles","Tooltip","getProfileImage","useStylesBootstrap","theme","arrow","color","palette","common","black","tooltip","backgroundColor","zIndex","BootstrapTooltip","props","classes","LeftFreelancerContent","freelancer","userProfileUrl","companyLogo","height","marginTop","onlineStatus","toLowerCase","companyName","disablePortal","userName","organizationId","history","push","individualFreelancerId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport request from \"../../../utils/request\";\nimport { ENDPOINT } from \"../../../utils/endpoint\";\nimport { getOptions } from \"../../../utils/httpConfig\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Status from \"../../../components/status/status\";\nimport \"./freelancerContents.scss\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { getProfileImage } from \"../../../utils/getProfileUrl\";\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n  arrow: {\n    color: theme.palette.common.black,\n  },\n  tooltip: {\n    backgroundColor: theme.palette.common.black,\n    zIndex: 999999,\n  },\n}));\n\nfunction BootstrapTooltip(props) {\n  const classes = useStylesBootstrap();\n\n  return <Tooltip arrow classes={classes} {...props} />;\n}\nfunction LeftFreelancerContent({ freelancer, ...props }) {\n\n  return (\n    <>\n      <div className=\"client_profile\">\n        <div className=\"freelancer-profile-box\">\n          <span className=\"freelancer-profile-area\">\n            {freelancer?.userProfileUrl || freelancer.companyLogo ? (\n              <img\n                src={getProfileImage(freelancer.userProfileUrl || freelancer.companyLogo)}\n                alt=\"\"\n                className=\"freelancer-profile-img\"\n              />\n            ) : (\n              <Skeleton\n                width=\"100%\"\n                style={{ height: \"113px\", marginTop: \"-30px\" }}\n              />\n              // <i class=\"fa fa-4x fa-user\" aria-hidden=\"true\"></i>\n            )}\n            <Status status={freelancer.onlineStatus?.toLowerCase() || \"offline\"} />\n            {freelancer.companyName ? (\n              <div className=\"company-label\"> Company</div>\n            ) : (\n              <div className=\"individual-label\">Individual</div>\n            )}\n          </span>\n          <BootstrapTooltip\n            PopperProps={{\n              disablePortal: true,\n            }}\n            arrow\n            placement=\"left\"\n            title={\n              freelancer.companyName\n                ? freelancer.companyName\n                : freelancer.userName && freelancer.userName != \" \"\n                ? freelancer.userName\n                : \"Not Available\"\n            }\n          >\n            <h4\n              onClick={() => {\n                if (freelancer.organizationId) {\n                  props.history.push(\n                    `/organization-profile/${freelancer.organizationId}`\n                  );\n                }\n                if (freelancer.individualFreelancerId) {\n                  props.history.push(\n                    `/freelancer-profile/${freelancer.individualFreelancerId}`\n                  );\n                }\n              }}\n            >\n              {\" \"}\n              {freelancer.companyName\n                ? freelancer.companyName\n                : freelancer.userName && freelancer.userName != \" \"\n                ? freelancer.userName\n                : \"Not Available\"}{\" \"}\n            </h4>\n          </BootstrapTooltip>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LeftFreelancerContent;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/talentSearch/resumePage.js\";\nimport React, { Component } from \"react\";\nimport DropdownList from \"../../components/dropdowns/dropdownList\";\nimport v4 from \"uuid\";\nimport { CountryList } from \"../../utils/countrylist\";\nimport { isNumeric, isValidString } from \"../../utils/validationConfig\";\nimport notifications from \"../../utils/notifications\";\nimport request from \"../../utils/request\";\nimport { ENDPOINT } from \"../../utils/endpoint\";\nimport Heading from \"../../components/postProject/heading\";\nimport Label from \"../../components/postProject/label\";\nimport Skeleton from \"../../components/skeleton/skeleton\";\nimport { connect } from \"react-redux\";\nimport SubHeader from \"../../components/subHeader\";\nimport { GetSpecificYearsList } from \"../../utils/years\";\nimport \"./resumePage.scss\";\nimport { GET_IMAGE_PREFIX, GET_IMAGE_PREFIX1 } from \"../../store/constants/constant\"; // import './documentType.scss'\n\nimport { getOptions, postMultipartFile, postOptions } from \"../../utils/httpConfig\";\nimport \"./talentSearch.scss\";\n\nclass ResumePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectCountry = country => {\n      this.setState({\n        country: country\n      });\n    };\n\n    this.onSubmitProfessionalArea = async () => {\n      if (this.onResumeValidation()) {\n        let {\n          selfIntroduction,\n          introductionTitle,\n          wishedWorkingConditionCountry,\n          wishedWorkingConditionCity,\n          wishedWorkingConditionAreaOfWork,\n          wishedWorkingConditionFromSalary,\n          wishedWorkingConditionToSalary\n        } = this.state;\n        /* hhhhhhhhhhhhhhhh */\n\n        this.setState({\n          loading: true\n        });\n        let CertificateArray = [];\n        this.state.certifications.map(item => {\n          if (item.yearIssued && item.certificate || item.level || item.issuedBy) {\n            let object = {\n              instruction: \"\",\n              type: \"Certificate\",\n              yearStart: item.yearIssued.toString(),\n              yearEnd: item.yearIssued.toString(),\n              qualification: \"\",\n              studyDepartment: \"\",\n              schoolName: \"\",\n              companyName: \"\",\n              workDepartment: \"\",\n              dutyOfWork: \"\",\n              status: \"\",\n              certificate: item.certificate,\n              level: item.level,\n              issuedBy: item.issuedBy\n            };\n            CertificateArray.push(object);\n          }\n        });\n        let EmploymentArray = [];\n        this.state.employments.map(item => {\n          if (item.fromYear && item.toYear && item.company || item.department || item.dutyOfWork || item.status) {\n            let object = {\n              instruction: \"\",\n              type: \"Employment\",\n              yearStart: item.fromYear.toString(),\n              yearEnd: item.toYear.toString(),\n              qualification: \"\",\n              studyDepartment: \"\",\n              schoolName: \"\",\n              companyName: item.company,\n              workDepartment: item.department,\n              dutyOfWork: item.dutyOfWork,\n              status: item.status,\n              certificate: \"\",\n              level: \"\",\n              issuedBy: \"\"\n            };\n            EmploymentArray.push(object);\n          }\n        });\n        let EducationArray = [];\n        this.state.educations.map(item => {\n          if (item.fromYear && item.toYear || item.areaOfStudy || item.qualification || item.shoolName) {\n            let object = {\n              instruction: \"\",\n              type: \"Education\",\n              yearStart: item.fromYear.toString(),\n              yearEnd: item.toYear.toString(),\n              qualification: item.qualification,\n              studyDepartment: item.areaOfStudy,\n              schoolName: item.shoolName,\n              companyName: \"\",\n              workDepartment: \"\",\n              dutyOfWork: \"\",\n              status: \"\",\n              certificate: \"\",\n              level: \"\",\n              issuedBy: \"\"\n            };\n            EducationArray.push(object);\n          }\n        });\n        let param = {\n          individualFreelancerId: this.props.userId,\n          userResumes: [...EducationArray, ...CertificateArray, ...EmploymentArray],\n          selfIntroduction: selfIntroduction,\n          introductionTitle: introductionTitle,\n          wishedWorkingCondition: {\n            wishedCountry: wishedWorkingConditionCountry,\n            wishedCity: wishedWorkingConditionCity,\n            areaOfWork: wishedWorkingConditionAreaOfWork,\n            wishedMinSalary: wishedWorkingConditionFromSalary,\n            wishedMaxSalary: wishedWorkingConditionToSalary\n          }\n        };\n        let result = await request(ENDPOINT[\"UpdateFreelancerResume\"], postOptions(param));\n\n        if (result.success) {\n          this.props.handleNext(\"FreelancerProfileConfirmation\");\n          localStorage.setItem(\"IndividaulFreelancerRegistrationInfo\", JSON.stringify({\n            step: \"FreelancerProfileConfirmation\",\n            userId: result.result.individualFreelancerId\n          }));\n          window.scrollTo({\n            top: \"0\",\n            behavior: \"smooth\"\n          });\n        } else notifications.showError(result.message);\n      }\n    };\n\n    this.getFreelancerDetail = async () => {\n      if (this.props.userId) {\n        this.setState({\n          isSkeletonLoading: true\n        });\n        let result = await request(`${ENDPOINT[\"GetIndividualFreelancer\"]}?individualFreelancerId=${this.props.userId}`, getOptions());\n\n        if (result.success && result.result) {\n          if (result.result.wishedWorkingCondition) {\n            this.setState({\n              selfIntroduction: result.result.selfIntroduction,\n              introductionTitle: result.result.introductionTitle,\n              wishedWorkingConditionCountry: result.result.wishedWorkingCondition.wishedCountry,\n              wishedWorkingConditionCity: result.result.wishedWorkingCondition.wishedCity,\n              wishedWorkingConditionAreaOfWork: result.result.wishedWorkingCondition.areaOfWork,\n              wishedWorkingConditionFromSalary: result.result.wishedWorkingCondition.wishedMinSalary,\n              wishedWorkingConditionToSalary: result.result.wishedWorkingCondition.wishedMaxSalary\n            });\n          }\n\n          this.setState({\n            isSkeletonLoading: false\n          });\n\n          if (result.result.userResumes && result.result.userResumes.length > 0) {\n            let certificatesArray = [];\n            let EducationsArray = [];\n            let employmentArray = [];\n            result.result.userResumes.map(item => {\n              if (item.type === \"Certificate\") {\n                certificatesArray.push({\n                  id: v4(),\n                  yearIssued: item.yearStart || item.yearEnd,\n                  certificate: item.certificate,\n                  level: item.level,\n                  issuedBy: item.issuedBy\n                });\n              }\n\n              if (item.type === \"Employment\") {\n                employmentArray.push({\n                  id: v4(),\n                  fromYear: item.yearStart,\n                  toYear: item.yearEnd,\n                  company: item.companyName,\n                  department: item.workDepartment,\n                  dutyOfWork: item.dutyOfWork,\n                  status: item.status\n                });\n              }\n\n              if (item.type === \"Education\") {\n                EducationsArray.push({\n                  id: v4(),\n                  fromYear: item.yearStart,\n                  toYear: item.yearEnd,\n                  areaOfStudy: item.studyDepartment,\n                  qualification: item.qualification,\n                  shoolName: item.schoolName\n                });\n              }\n            });\n\n            if (certificatesArray.length > 0) {\n              this.setState({\n                certifications: certificatesArray\n              });\n            }\n\n            if (EducationsArray.length > 0) {\n              this.setState({\n                educations: EducationsArray\n              });\n            }\n\n            if (employmentArray.length > 0) {\n              this.setState({\n                employments: employmentArray\n              });\n            }\n          }\n          /* userResumes: [{instruction: \"\", type: \"Education\", yearStart: \"1981\", yearEnd: \"1985\",…},…]\n          0: {instruction */\n          // console.log(result,\"result\")\n\n\n          if (result.result.wishedWorkingCondition) {\n            setTimeout(() => {\n              if (this.state.countries && this.state.countries.length > 0) {\n                let countryId = this.state.countries.find(item => item.name === result.result.wishedWorkingCondition.wishedCountry);\n\n                if (countryId) {\n                  this.bindCities(countryId.id);\n                  this.setState({\n                    wishedWorkingConditionCity: result.result.wishedWorkingCondition.wishedCity\n                  });\n                }\n              }\n            }, 1000);\n          }\n        } else {\n          this.setState({\n            isSkeletonLoading: false\n          });\n        }\n      }\n      /* printable */\n\n\n      if (this.props.printable) {\n        this.handlePrintAble();\n      }\n    };\n\n    this.bindCountry = async () => {\n      let array = [];\n      let result = await request(`${ENDPOINT[\"GeneralSettings\"]}?settingName=Countries`, getOptions({}));\n\n      if (result.success) {\n        if (result.result.data.length > 0) {\n          for (let index = 0; index < result.result.data[0].data.length; index++) {\n            const element = result.result.data[0].data[index];\n            array.push({\n              id: element.id,\n              name: element.name\n            });\n          }\n\n          this.setState({\n            countries: array\n          });\n        } else {\n          alert(\"No Country\");\n        }\n      } else {\n        alert(\"No Country\");\n      }\n    };\n\n    this.bindCities = async countryId => {\n      let array = [];\n      let result = await request(`${ENDPOINT[\"GeneralSettings\"]}?settingName=city_country_` + countryId, getOptions({}));\n\n      if (result.success) {\n        if (result.result.data.length > 0) {\n          for (let index = 0; index < result.result.data[0].data.length; index++) {\n            const element = result.result.data[0].data[index];\n            array.push({\n              id: element.id,\n              name: element.name\n            });\n          }\n\n          this.setState({\n            cities: array\n          });\n        } else {\n          alert(\"No City\");\n        }\n      } else {\n        alert(\"No City\");\n      }\n    };\n\n    this.handlePrintAble = () => {\n      /* printable-area */\n      var printContents = document.getElementById(\"printable-area\").innerHTML;\n      var originalContents = document.body.innerHTML;\n      document.body.innerHTML = printContents;\n      window.print();\n      document.body.innerHTML = originalContents;\n    };\n\n    this.state = {\n      certifications: [],\n      languageProficiency: [],\n      portfolio: [],\n      certifications: [],\n      educations: [],\n      employments: [],\n      employmentHistory: [],\n      selfIntroduction: \"\",\n      introductionTitle: \"\",\n      languageTests: [],\n      wouldLikeToGetJobProposal: false,\n      countryList: CountryList,\n      country: \"\",\n      errorMessage: {},\n      loading: false,\n      cities: [],\n      countries: [],\n      programmingLanguage: [{\n        id: v4(),\n        language: \"\",\n        proficiency: \"\"\n      }],\n      isSkeletonLoading: false,\n      wishedWorkingConditionCountry: \"\",\n      wishedWorkingConditionCity: \"\",\n      wishedWorkingConditionAreaOfWork: \"\",\n      wishedWorkingConditionFromSalary: \"\",\n      wishedWorkingConditionToSalary: \"\",\n      selectedImg: \"\"\n    };\n    /* hhhhhhhhhhhhhhhh */\n\n    this.state.certifications.push({\n      id: v4(),\n      yearIssued: \"\",\n      certificate: \"\",\n      level: \"\",\n      issuedBy: \"\"\n    });\n    this.state.educations.push({\n      id: v4(),\n      fromYear: \"\",\n      toYear: \"\",\n      areaOfStudy: \"\",\n      qualification: \"\",\n      shoolName: \"\"\n    });\n    this.state.employments.push({\n      id: v4(),\n      fromYear: \"\",\n      toYear: \"\",\n      company: \"\",\n      department: \"\",\n      dutyOfWork: \"\",\n      status: \"\"\n    });\n  }\n\n  onResumeValidation() {\n    let {\n      languageType\n    } = this.props;\n    let errorMessage = {};\n    let formIsValid = true;\n\n    if (!isValidString(this.state.selfIntroduction)) {\n      formIsValid = false;\n      errorMessage[\"selfIntroduction\"] = languageType.REQUIRED_MESSAGE;\n      notifications.showWarning(\"self Introduction is Required \");\n    } else if (!isValidString(this.state.introductionTitle)) {\n      formIsValid = false;\n      errorMessage[\"introductionTitle\"] = languageType.REQUIRED_MESSAGE;\n      notifications.showWarning(\"Introduction Title is Required \");\n    } else if (!isValidString(this.state.wishedWorkingConditionCountry)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionCountry\"] = languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionCity)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionCity\"] = languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionAreaOfWork)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionAreaOfWork\"] = languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionFromSalary)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionFromSalary\"] = languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionToSalary)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionToSalary\"] = languageType.REQUIRED_MESSAGE;\n    } // else if (!isValidString(this.state.programmingLanguage)) {\n    //   formIsValid = false;\n    //   errorMessage[\"programmingLanguage\"] = languageType.REQUIRED_MESSAGE;\n    // }\n    // else if (!isValidString(this.state.programmingLanguageLevel)) {\n    //   formIsValid = false;\n    //   errorMessage[\"programmingLanguageLevel\"] = languageType.REQUIRED_MESSAGE;\n    // }\n\n\n    this.setState({\n      errorMessage: errorMessage\n    });\n    return formIsValid;\n  }\n\n  componentDidMount() {\n    this.bindCountry();\n    this.getFreelancerDetail();\n  }\n\n  render() {\n    let {\n      selfIntroduction,\n      introductionTitle,\n      programmingLanguageLevel,\n      loading,\n      isSkeletonLoading\n    } = this.state;\n    let {\n      languageReducer,\n      languageType\n    } = this.props;\n    let {\n      imgUrl,\n      professionalFields,\n      firstName,\n      lastName,\n      country,\n      countryCode,\n      phoneNo,\n      address,\n      city,\n      postalCode,\n      selectedImg\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SubHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"talent-search-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bcknd_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-1 col-lg-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-10 col-lg-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"printable-area\",\n      className: \"hourly_limit resume-registration-new   project_post card_sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      count: 5,\n      isSkeletonLoading: isSkeletonLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      hidden: isSkeletonLoading,\n      className: \"position_rel Img_heading_userResume\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      heading: languageType.USER_RESUME_REGISTRATION_TEXT,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/resume1.png\",\n      color: \"#333333\",\n      fontSize: \"26px\",\n      fontWeight: \"600\",\n      fontFamily: \"Raleway\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"download_sampleExcel_pc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-cloud-download-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 21\n      }\n    }), \"  Download Sample Excel form\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"download_sampleExcel_mobile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-cloud-download-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"post_form\",\n      style: {\n        maxWidth: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"save_cancel profile_userResume_mobile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profile_box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 27\n      }\n    }, selectedImg && selectedImg !== null && /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.selectedImg ? URL.createObjectURL(this.state.selectedImg) : this.state.profilePicture,\n      alt: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 31\n      }\n    }), (selectedImg && selectedImg !== null || this.state.profilePicture) && !this.state.uploading1 && /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => {\n        this.setState({\n          selectedImg: null,\n          profilePicture: \"\",\n          imgUrl: {}\n        });\n      },\n      className: \"trash-bin-icon-for-image-change\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 35\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group upload_file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"addAphoto\",\n      style: {\n        width: \"124px\"\n      },\n      className: \"btn create-freelancer-file-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-plus-circle\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 31\n      }\n    }), languageType.ADD_PHOTO), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control-file\",\n      id: \"addAphoto\",\n      onChange: async e => {\n        let errorMessage = {};\n\n        if (e.target.files[0] && e.target.files[0].name && !e.target.files[0].name.match(/\\.(jpg|jpeg|png|PNG|gif)$/)) {\n          this.setState({\n            invalidFile: \"Please select valid image\"\n          });\n          return false;\n        }\n\n        let size = e.target.files[0] ? e.target.files[0].size : 0;\n\n        if (size < 1048576) {\n          this.setState({\n            selectedImg: e.target.files[0]\n          }); // this.uploadImage(e.target.files[0],\"imgUrl\")\n\n          if (this.state.selectedImg !== null) errorMessage[\"selectedImg\"] = null;\n          this.setState({\n            invalidFile: null,\n            errorMessage: errorMessage\n          });\n\n          if (this.props.userId) {\n            this.setState({\n              updatesProfile: true\n            });\n          }\n        } else {\n          notifications.showWarning(languageType.IMAGE_UPLOADING_SIZE_TEXT);\n          return false;\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 29\n      }\n    }), this.state.invalidFile && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 31\n      }\n    }, \" \", this.state.invalidFile, \" \"), this.state.errorMessage.selectedImg && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 31\n      }\n    }, \" \", this.state.errorMessage.selectedImg, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: languageType.FIRST_NAME,\n      compulsory: true,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/nameIcon.svg\",\n      color: \"#333333\",\n      width: \"20px\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: firstName,\n      maxLength: \"100\",\n      onChange: e => {\n        let errorMessage = {};\n        if (!isValidString(e.target.value)) errorMessage[\"firstName\"] = null;\n        this.setState({\n          firstName: e.target.value,\n          errorMessage: errorMessage\n        });\n      },\n      placeholder: languageType.EX_JOHN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 31\n      }\n    }), this.state.errorMessage.firstName && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 33\n      }\n    }, \" \", this.state.errorMessage.firstName, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: languageType.LAST_NAME,\n      compulsory: true,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/nameIcon.svg\",\n      color: \"#333333\",\n      width: \"20px\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: lastName,\n      maxLength: \"100\",\n      onChange: e => {\n        let errorMessage = {};\n        if (!isValidString(e.target.value)) errorMessage[\"lastName\"] = null;\n        this.setState({\n          lastName: e.target.value,\n          errorMessage: errorMessage\n        });\n      },\n      placeholder: languageType.EX_CARRY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 31\n      }\n    }), this.state.errorMessage.lastName && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 33\n      }\n    }, \" \", this.state.errorMessage.lastName, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-6 col-xl-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: languageType.COUNTRY_TEXT,\n      compulsory: true,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/languages_world_icon.png\",\n      color: \"#333333\",\n      width: \"21px\",\n      prefixBoxInValid: this.state.errorMessage[\"country\"] ? true : false,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(DropdownList, {\n      id: `CountryList}`,\n      gray_bg: true,\n      name: `CountryList`,\n      className: `${this.state.country ? \"countryListActive\" : \"countryListnotactive\"} \"countryList_userResume\"`,\n      enableAutoComplete: true,\n      enableAutoCompleteSearch: true,\n      placeHolder: languageType.COUNTRY_TEXT,\n      value: country,\n      selectItem: this.onSelectCountry,\n      items: CountryList.map(country => ({\n        text: country.name,\n        value: country.name\n      })),\n      onChange: e => {\n        let errorMessage = {};\n        if (!isValidString(e.target.value)) errorMessage[\"country\"] = null;\n        this.setState({\n          country: e.target.value,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 31\n      }\n    }), this.state.errorMessage.country && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 33\n      }\n    }, \" \", this.state.errorMessage.country, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-6 col-xl-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: languageType.COUNTRY_CODE,\n      compulsory: true,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/countryCode.svg\",\n      color: \"#333333\",\n      width: \"20px\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control gray_bg\",\n      placeholder: \"Country Code\",\n      value: countryCode,\n      maxLength: \"10\",\n      onChange: e => {\n        let errorMessage = {};\n        if (!isValidString(e.target.value)) errorMessage[\"countryCode\"] = null;\n        this.setState({\n          countryCode: e.target.value,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 31\n      }\n    }), this.state.errorMessage.countryCode && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 33\n      }\n    }, \" \", this.state.errorMessage.countryCode, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: languageType.MOBILE_NO,\n      compulsory: true,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/call_phone.svg\",\n      color: \"#333333\",\n      width: \"18px\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: languageType.MOBILE_NO,\n      maxLength: \"10\",\n      value: phoneNo,\n      onChange: e => {\n        let errorMessage = {};\n\n        if (e.target.value.trim() === \"\") {\n          this.setState({\n            phoneNo: e.target.value\n          });\n        }\n\n        if (!isNumeric(e.target.value)) {\n          errorMessage[\"phoneNo\"] = null;\n          return false;\n        }\n\n        this.setState({\n          phoneNo: e.target.value,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 31\n      }\n    }), this.state.errorMessage.phoneNo && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 33\n      }\n    }, \" \", this.state.errorMessage.phoneNo, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group custom-form-top-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: languageType.ADDRESS,\n      compulsory: true,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/addressIcon.svg\",\n      color: \"#333333\",\n      width: \"21px\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: languageType.ADDRESS,\n      value: address,\n      maxLength: \"500\",\n      onChange: e => {\n        let errorMessage = {};\n        if (!isValidString(e.target.value)) errorMessage[\"address\"] = null;\n        this.setState({\n          address: e.target.value,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 31\n      }\n    }), this.state.errorMessage.address && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 33\n      }\n    }, \" \", this.state.errorMessage.address, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: languageType.CITY_TEXT,\n      compulsory: true,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/education.png\",\n      color: \"#333333\",\n      width: \"21px\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: languageType.CITY_TEXT,\n      value: city,\n      maxLength: \"100\",\n      onChange: e => {\n        let errorMessage = {};\n        if (!isValidString(e.target.value)) errorMessage[\"city\"] = null;\n        this.setState({\n          city: e.target.value,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 35\n      }\n    }), this.state.errorMessage.city && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 37\n      }\n    }, \" \", this.state.errorMessage.city, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: languageType.POST_CODE,\n      compulsory: true,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/postalCode.svg\",\n      color: \"#333333\",\n      width: \"21px\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: languageType.POST_CODE,\n      value: postalCode,\n      maxLength: \"10\",\n      onChange: e => {\n        let errorMessage = {};\n\n        if (e.target.value.trim() === \"\") {\n          this.setState({\n            postalCode: e.target.value\n          });\n        }\n\n        if (!isNumeric(e.target.value)) {\n          errorMessage[\"postalCode\"] = null;\n          return false;\n        }\n\n        this.setState({\n          postalCode: e.target.value,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 35\n      }\n    }), this.state.errorMessage.postalCode && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 37\n      }\n    }, \" \", this.state.errorMessage.postalCode, \" \"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 ExcelArea_userResumeTopMob\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ExcelArea_userResume\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"proposal-team-link-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"EXCEL_BULK_TextGreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 33\n      }\n    }, languageType.EXCEL_BULK_LOAD), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://dhihitu47nqhv.cloudfront.net/icons/excelIcon.svg\",\n      alt: \"\",\n      height: 32,\n      width: 32,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"bulkBold_textUser_resume\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 33\n      }\n    }, languageType.USER_RESUME_BULK))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ExcelArea_userResume\",\n      style: {\n        marginTop: \"10px\",\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"bulkBold_textUser_resume2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 31\n      }\n    }, languageType.UPGRADE_SERVICE))))))), /*#__PURE__*/React.createElement(\"div\", {\n      hidden: isSkeletonLoading,\n      className: \"collapse animaton-height show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1005,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"post_form post_form_resumePage\",\n      style: {\n        padding: \"0px 15px 0px 0px\",\n        maxWidth: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addMore_detail create_freelancer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: languageType.EDUCATION_TEXT,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/educationIcon.svg\",\n      color: \"#333333\",\n      width: \"21px\",\n      primary: true,\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1027,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1028,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1029,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 33\n      }\n    }, languageType.YEAR_FROM), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 33\n      }\n    }, languageType.YEAR_TO), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 33\n      }\n    }, languageType.QUALIFICATION_TEXT), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 33\n      }\n    }, languageType.AREA_TO_STUDY), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1038,\n        columnNumber: 33\n      }\n    }, languageType.SCHOOL_NAME), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      style: {\n        width: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 33\n      }\n    }, languageType.ACTION))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 29\n      }\n    }, this.state.educations.map((el, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0  customer-col-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: `educationFromYear${el.id}`,\n      name: `educationFromYear${el.id}`,\n      placeHolder: \"From Year\",\n      value: el.fromYear,\n      enableAutoCompleteSearch: true,\n      noborder: true,\n      selectItem: value => {\n        el.fromYear = value;\n        this.setState({\n          educations: this.state.educations\n        });\n      },\n      items: GetSpecificYearsList(1980, new Date().getFullYear()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1048,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0 customer-col-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1067,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: `educationToYear${el.id}`,\n      name: `educationToYear${el.id}`,\n      placeHolder: \"To Year\",\n      value: el.toYear,\n      enableAutoCompleteSearch: true,\n      noborder: true,\n      selectItem: value => {\n        if (value > el.fromYear) {\n          el.toYear = value;\n          this.setState({\n            educations: this.state.educations\n          });\n        } else {\n          notifications.showWarning(\"To year should be greater than from year\");\n        }\n      },\n      items: GetSpecificYearsList(1980, new Date().getFullYear()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0\",\n      style: {\n        minWidth: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: `qualification${el.id}`,\n      name: `qualification${el.id}`,\n      placeHolder: \"Qualification\",\n      enableAutoCompleteSearch: true,\n      value: el.qualification,\n      noborder: true,\n      selectItem: value => {\n        el.qualification = value;\n        this.setState({\n          educations: this.state.educations\n        });\n      },\n      items: languageReducer.educationType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1113,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.areaOfStudy,\n      placeholder: \"Enter department\",\n      maxLength: \"100\",\n      onChange: e => {\n        let errorMessage = {};\n        el.areaOfStudy = e.target.value;\n        this.setState({\n          educations: this.state.educations,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1114,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1131,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.schoolName,\n      maxLength: \"500\",\n      placeholder: \"Enter school name\",\n      onChange: e => {\n        let errorMessage = {};\n        el.schoolName = e.target.value;\n        this.setState({\n          educations: this.state.educations,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1149,\n        columnNumber: 35\n      }\n    }, i == 0 ? /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        let educations = this.state.educations;\n        educations.push({\n          id: v4(),\n          fromYear: \"\",\n          toYear: \"\",\n          areaOfStudy: \"\",\n          qualification: \"\",\n          shoolName: \"\"\n        });\n        this.setState({\n          educations: educations\n        });\n      },\n      className: \"fa fa-plus customer-table-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 39\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        let educationList = this.state.educations.filter(x => x.id !== el.id);\n        this.setState({\n          educations: educationList\n        });\n      },\n      className: \"fa fa-trash customer-table-icon\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1170,\n        columnNumber: 39\n      }\n    })))))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1193,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addMore_detail create_freelancer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1194,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: \"Employment History \",\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/employment.png\",\n      color: \"#333333\",\n      width: \"21px\",\n      primary: true,\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1195,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1205,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1206,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1207,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1208,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1209,\n        columnNumber: 35\n      }\n    }, languageType.YEAR_FROM), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1210,\n        columnNumber: 35\n      }\n    }, languageType.YEAR_TO), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1211,\n        columnNumber: 35\n      }\n    }, languageType.COMPANY_NAME), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1214,\n        columnNumber: 35\n      }\n    }, languageType.DEPARTMENT_TEXT), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 35\n      }\n    }, languageType.DUTY_OF_WORK), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1220,\n        columnNumber: 35\n      }\n    }, languageType.CURRENT_STATUS), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      style: {\n        width: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1223,\n        columnNumber: 35\n      }\n    }, languageType.ACTION))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1228,\n        columnNumber: 31\n      }\n    }, this.state.employments.map((el, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1230,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0  customer-col-width1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1231,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: `employmentYearFrom${el.id}`,\n      name: `employmentYearFrom${el.id}`,\n      placeHolder: \"Year From\",\n      enableAutoCompleteSearch: true,\n      noborder: true,\n      value: el.fromYear,\n      selectItem: value => {\n        el.fromYear = value;\n        this.setState({\n          employments: this.state.employments\n        });\n      },\n      items: GetSpecificYearsList(1980, new Date().getFullYear()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1232,\n        columnNumber: 39\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0  customer-col-width1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1251,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: `employmentToYear${el.id}`,\n      name: `employmentToYear${el.id}`,\n      placeHolder: \"Year To\",\n      enableAutoCompleteSearch: true,\n      noborder: true,\n      value: el.toYear,\n      selectItem: value => {\n        if (value > el.fromYear) {\n          el.toYear = value;\n          this.setState({\n            employments: this.state.employments\n          });\n        } else {\n          notifications.showWarning(\"To year should be greater than from year\");\n        }\n      },\n      items: GetSpecificYearsList(1980, new Date().getFullYear()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 39\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0\",\n      style: {\n        width: \"140px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1278,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.company,\n      placeholder: \"Enter company \",\n      maxLength: \"500\",\n      onChange: e => {\n        let errorMessage = {};\n        el.company = e.target.value;\n        this.setState({\n          employments: this.state.employments,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1282,\n        columnNumber: 39\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0\",\n      style: {\n        width: \"140px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1299,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.department,\n      placeholder: \"Enter Department\",\n      maxLength: \"500\",\n      onChange: e => {\n        let errorMessage = {};\n        el.department = e.target.value;\n        this.setState({\n          employments: this.state.employments,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1303,\n        columnNumber: 39\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1320,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.dutyOfWork,\n      maxLength: \"500\",\n      placeholder: \"Enter Duty\",\n      onChange: e => {\n        let errorMessage = {};\n        el.dutyOfWork = e.target.value;\n        this.setState({\n          employments: this.state.employments,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1321,\n        columnNumber: 39\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"customer-col-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1338,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: \"currentStatus\",\n      name: \"DropdownList\",\n      value: el.status,\n      enableAutoCompleteSearch: true,\n      noborder: true,\n      selectItem: value => {\n        el.status = value;\n        this.setState({\n          employments: this.state.employments\n        });\n      },\n      items: [{\n        text: \"Working\",\n        value: \"Working\"\n      }, {\n        text: \"Resigned\",\n        value: \"Resigned\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1339,\n        columnNumber: 39\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1360,\n        columnNumber: 37\n      }\n    }, i == 0 ? /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        let employments = this.state.employments;\n        employments.push({\n          id: v4(),\n          fromYear: \"\",\n          toYear: \"\",\n          company: \"\",\n          department: \"\",\n          dutyOfWork: \"\",\n          status: \"\"\n        });\n        this.setState({\n          employments: employments\n        });\n      },\n      className: \"fa fa-plus customer-table-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1362,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        let employmentList = this.state.employments.filter(x => x.id !== el.id);\n        this.setState({\n          employments: employmentList\n        });\n      },\n      className: \"fa fa-trash customer-table-icon\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1382,\n        columnNumber: 41\n      }\n    })))))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1403,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addMore_detail create_freelancer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1405,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: \"Certification \",\n      color: \"#333333\",\n      width: \"21px\",\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/trophy.png\",\n      primary: true,\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1406,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1416,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1417,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1418,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1419,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1420,\n        columnNumber: 33\n      }\n    }, languageType.YEAR_ISSUED), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1421,\n        columnNumber: 33\n      }\n    }, languageType.CERTIFICATE_TEXT), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1424,\n        columnNumber: 33\n      }\n    }, languageType.LEVEL_RESULT), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1425,\n        columnNumber: 33\n      }\n    }, languageType.ISSUED_BY), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      style: {\n        width: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1426,\n        columnNumber: 33\n      }\n    }, languageType.ACTION))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1431,\n        columnNumber: 29\n      }\n    }, this.state.certifications.map((el, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1433,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-left p-0 customer-col-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1434,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(DropdownList, {\n      id: `YearIssued${el.id}`,\n      name: `YearIssued${el.id}`,\n      placeHolder: \"Year Issued\",\n      enableAutoCompleteSearch: true,\n      value: el.yearIssued,\n      noborder: true,\n      selectItem: value => {\n        el.yearIssued = value;\n        this.setState({\n          certifications: this.state.certifications\n        });\n      },\n      items: GetSpecificYearsList(1980, new Date().getFullYear()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1435,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1455,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.certificate,\n      maxLength: \"500\",\n      onChange: e => {\n        let errorMessage = {};\n        el.certificate = e.target.value;\n        this.setState({\n          certifications: this.state.certifications,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1456,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1472,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.level,\n      maxLength: \"50\",\n      onChange: e => {\n        let errorMessage = {};\n        el.level = e.target.value;\n        this.setState({\n          certifications: this.state.certifications,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1473,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1489,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: el.issuedBy,\n      maxLength: \"100\",\n      onChange: e => {\n        let errorMessage = {};\n        el.issuedBy = e.target.value;\n        this.setState({\n          certifications: this.state.certifications,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1490,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1506,\n        columnNumber: 35\n      }\n    }, i == 0 ? /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        let certifications = this.state.certifications;\n        certifications.push({\n          id: v4(),\n          yearIssued: \"\",\n          certificate: \"\",\n          level: \"\",\n          issuedBy: \"\"\n        });\n        this.setState({\n          certifications: certifications\n        });\n      },\n      className: \"fa fa-plus customer-table-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1508,\n        columnNumber: 39\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        let certificationList = this.state.certifications.filter(x => x.id !== el.id);\n        this.setState({\n          certifications: certificationList\n        });\n      },\n      className: \"fa fa-trash customer-table-icon\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1526,\n        columnNumber: 39\n      }\n    }))))))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1551,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addMore_detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1552,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1553,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: languageType.INTRODUCTION_TITLE_TEXT,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/favorite_page.svg\",\n      color: \"#333333\",\n      width: \"22px\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1554,\n        columnNumber: 27\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      maxLength: \"100\",\n      value: introductionTitle,\n      onChange: e => {\n        let errorMessage = {};\n        if (!isValidString(e.target.value)) errorMessage[\"introductionTitle\"] = null;\n        this.setState({\n          introductionTitle: e.target.value,\n          errorMessage: errorMessage\n        });\n      },\n      placeholder: languageType.INTRODUCTION_TITLE_TEXT,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1563,\n        columnNumber: 27\n      }\n    }), this.state.errorMessage.introductionTitle && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1582,\n        columnNumber: 29\n      }\n    }, \" \", this.state.errorMessage.introductionTitle, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1588,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      title: languageType.SELF_INTRO,\n      icon: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/experience.png\",\n      color: \"#333333\",\n      width: \"26px\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1589,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      rows: \"5\",\n      placeholder: languageType.ENTER_SELF_INTRO,\n      value: selfIntroduction,\n      maxLength: \"1000\",\n      onChange: e => {\n        let errorMessage = {};\n        if (!isValidString(e.target.value)) errorMessage[\"selfIntroduction\"] = null;\n        this.setState({\n          selfIntroduction: e.target.value,\n          errorMessage: errorMessage\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1599,\n        columnNumber: 27\n      }\n    }), this.state.errorMessage.selfIntroduction && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1617,\n        columnNumber: 29\n      }\n    }, \" \", this.state.errorMessage.selfIntroduction, \" \"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1625,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1626,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"resume-view-pdf-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1627,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      onClick: () => {\n        this.handlePrintAble();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1628,\n        columnNumber: 25\n      }\n    }, languageType.VIEW_IN_PDF)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-freelancer-bottom-steps\",\n      style: {\n        paddingRight: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1636,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => {},\n      className: \"create-freelancer-bottom-steps-back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1640,\n        columnNumber: 25\n      }\n    }, languageType.SAVE), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: loading,\n      onClick: e => {},\n      className: \"create-freelancer-bottom-steps-skip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1646,\n        columnNumber: 25\n      }\n    }, \"Offer\", \" \", loading ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-spinner fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1653,\n        columnNumber: 29\n      }\n    }) : \"\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1663,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1667,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1668,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1669,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    languageReducer: state.languageReducer,\n    languageType: state.languageReducer.languageType\n  };\n}\n\nexport default connect(mapStateToProps)(ResumePage);","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/talentSearch/resumePage.js"],"names":["React","Component","DropdownList","v4","CountryList","isNumeric","isValidString","notifications","request","ENDPOINT","Heading","Label","Skeleton","connect","SubHeader","GetSpecificYearsList","GET_IMAGE_PREFIX","GET_IMAGE_PREFIX1","getOptions","postMultipartFile","postOptions","ResumePage","constructor","props","onSelectCountry","country","setState","onSubmitProfessionalArea","onResumeValidation","selfIntroduction","introductionTitle","wishedWorkingConditionCountry","wishedWorkingConditionCity","wishedWorkingConditionAreaOfWork","wishedWorkingConditionFromSalary","wishedWorkingConditionToSalary","state","loading","CertificateArray","certifications","map","item","yearIssued","certificate","level","issuedBy","object","instruction","type","yearStart","toString","yearEnd","qualification","studyDepartment","schoolName","companyName","workDepartment","dutyOfWork","status","push","EmploymentArray","employments","fromYear","toYear","company","department","EducationArray","educations","areaOfStudy","shoolName","param","individualFreelancerId","userId","userResumes","wishedWorkingCondition","wishedCountry","wishedCity","areaOfWork","wishedMinSalary","wishedMaxSalary","result","success","handleNext","localStorage","setItem","JSON","stringify","step","window","scrollTo","top","behavior","showError","message","getFreelancerDetail","isSkeletonLoading","length","certificatesArray","EducationsArray","employmentArray","id","setTimeout","countries","countryId","find","name","bindCities","printable","handlePrintAble","bindCountry","array","data","index","element","alert","cities","printContents","document","getElementById","innerHTML","originalContents","body","print","languageProficiency","portfolio","employmentHistory","languageTests","wouldLikeToGetJobProposal","countryList","errorMessage","programmingLanguage","language","proficiency","selectedImg","languageType","formIsValid","REQUIRED_MESSAGE","showWarning","componentDidMount","render","programmingLanguageLevel","languageReducer","imgUrl","professionalFields","firstName","lastName","countryCode","phoneNo","address","city","postalCode","USER_RESUME_REGISTRATION_TEXT","maxWidth","URL","createObjectURL","profilePicture","uploading1","width","ADD_PHOTO","e","target","files","match","invalidFile","size","updatesProfile","IMAGE_UPLOADING_SIZE_TEXT","FIRST_NAME","value","EX_JOHN","LAST_NAME","EX_CARRY","COUNTRY_TEXT","text","COUNTRY_CODE","MOBILE_NO","trim","ADDRESS","CITY_TEXT","POST_CODE","EXCEL_BULK_LOAD","USER_RESUME_BULK","marginTop","textAlign","UPGRADE_SERVICE","padding","EDUCATION_TEXT","YEAR_FROM","YEAR_TO","QUALIFICATION_TEXT","AREA_TO_STUDY","SCHOOL_NAME","ACTION","el","i","Date","getFullYear","minWidth","educationType","educationList","filter","x","COMPANY_NAME","DEPARTMENT_TEXT","DUTY_OF_WORK","CURRENT_STATUS","employmentList","YEAR_ISSUED","CERTIFICATE_TEXT","LEVEL_RESULT","ISSUED_BY","certificationList","INTRODUCTION_TITLE_TEXT","SELF_INTRO","ENTER_SELF_INTRO","VIEW_IN_PDF","paddingRight","SAVE","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DropdownList from \"../../components/dropdowns/dropdownList\";\nimport v4 from \"uuid\";\nimport { CountryList } from \"../../utils/countrylist\";\nimport { isNumeric, isValidString } from \"../../utils/validationConfig\";\nimport notifications from \"../../utils/notifications\";\nimport request from \"../../utils/request\";\nimport { ENDPOINT } from \"../../utils/endpoint\";\nimport Heading from \"../../components/postProject/heading\";\nimport Label from \"../../components/postProject/label\";\nimport Skeleton from \"../../components/skeleton/skeleton\";\nimport { connect } from \"react-redux\";\nimport SubHeader from \"../../components/subHeader\";\nimport { GetSpecificYearsList } from \"../../utils/years\";\nimport \"./resumePage.scss\";\nimport {\n  GET_IMAGE_PREFIX,\n  GET_IMAGE_PREFIX1,\n} from \"../../store/constants/constant\";\n\n// import './documentType.scss'\nimport {\n  getOptions,\n  postMultipartFile,\n  postOptions,\n} from \"../../utils/httpConfig\";\nimport \"./talentSearch.scss\";\nclass ResumePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      certifications: [],\n      languageProficiency: [],\n      portfolio: [],\n      certifications: [],\n      educations: [],\n      employments: [],\n      employmentHistory: [],\n      selfIntroduction: \"\",\n      introductionTitle: \"\",\n      languageTests: [],\n      wouldLikeToGetJobProposal: false,\n      countryList: CountryList,\n      country: \"\",\n      errorMessage: {},\n      loading: false,\n      cities: [],\n      countries: [],\n      programmingLanguage: [{ id: v4(), language: \"\", proficiency: \"\" }],\n      isSkeletonLoading: false,\n      wishedWorkingConditionCountry: \"\",\n      wishedWorkingConditionCity: \"\",\n      wishedWorkingConditionAreaOfWork: \"\",\n      wishedWorkingConditionFromSalary: \"\",\n      wishedWorkingConditionToSalary: \"\",\n      selectedImg: \"\", \n    };\n\n    /* hhhhhhhhhhhhhhhh */\n    this.state.certifications.push({\n      id: v4(),\n      yearIssued: \"\",\n      certificate: \"\",\n      level: \"\",\n      issuedBy: \"\",\n    });\n    this.state.educations.push({\n      id: v4(),\n      fromYear: \"\",\n      toYear: \"\",\n      areaOfStudy: \"\",\n      qualification: \"\",\n      shoolName: \"\",\n    });\n    this.state.employments.push({\n      id: v4(),\n      fromYear: \"\",\n      toYear: \"\",\n      company: \"\",\n      department: \"\",\n      dutyOfWork: \"\",\n      status: \"\",\n    });\n  }\n  onSelectCountry = (country) => {\n    this.setState({\n      country: country,\n    });\n  };\n\n  onResumeValidation() {\n    let { languageType } = this.props;\n    let errorMessage = {};\n    let formIsValid = true;\n\n    if (!isValidString(this.state.selfIntroduction)) {\n      formIsValid = false;\n      errorMessage[\"selfIntroduction\"] = languageType.REQUIRED_MESSAGE;\n      notifications.showWarning(\"self Introduction is Required \");\n    } else if (!isValidString(this.state.introductionTitle)) {\n      formIsValid = false;\n      errorMessage[\"introductionTitle\"] = languageType.REQUIRED_MESSAGE;\n      notifications.showWarning(\"Introduction Title is Required \");\n    } else if (!isValidString(this.state.wishedWorkingConditionCountry)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionCountry\"] =\n        languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionCity)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionCity\"] =\n        languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionAreaOfWork)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionAreaOfWork\"] =\n        languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionFromSalary)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionFromSalary\"] =\n        languageType.REQUIRED_MESSAGE;\n    } else if (!isValidString(this.state.wishedWorkingConditionToSalary)) {\n      formIsValid = false;\n      errorMessage[\"wishedWorkingConditionToSalary\"] =\n        languageType.REQUIRED_MESSAGE;\n    }\n    // else if (!isValidString(this.state.programmingLanguage)) {\n    //   formIsValid = false;\n    //   errorMessage[\"programmingLanguage\"] = languageType.REQUIRED_MESSAGE;\n    // }\n    // else if (!isValidString(this.state.programmingLanguageLevel)) {\n    //   formIsValid = false;\n    //   errorMessage[\"programmingLanguageLevel\"] = languageType.REQUIRED_MESSAGE;\n    // }\n\n    this.setState({ errorMessage: errorMessage });\n    return formIsValid;\n  }\n  onSubmitProfessionalArea = async () => {\n    if (this.onResumeValidation()) {\n      let {\n        selfIntroduction,\n        introductionTitle,\n        wishedWorkingConditionCountry,\n        wishedWorkingConditionCity,\n        wishedWorkingConditionAreaOfWork,\n        wishedWorkingConditionFromSalary,\n        wishedWorkingConditionToSalary,\n      } = this.state;\n\n      /* hhhhhhhhhhhhhhhh */\n\n      this.setState({ loading: true });\n      let CertificateArray = [];\n      this.state.certifications.map((item) => {\n        if (\n          (item.yearIssued && item.certificate) ||\n          item.level ||\n          item.issuedBy\n        ) {\n          let object = {\n            instruction: \"\",\n            type: \"Certificate\",\n            yearStart: item.yearIssued.toString(),\n            yearEnd: item.yearIssued.toString(),\n            qualification: \"\",\n            studyDepartment: \"\",\n            schoolName: \"\",\n            companyName: \"\",\n            workDepartment: \"\",\n            dutyOfWork: \"\",\n            status: \"\",\n            certificate: item.certificate,\n            level: item.level,\n            issuedBy: item.issuedBy,\n          };\n          CertificateArray.push(object);\n        }\n      });\n\n      let EmploymentArray = [];\n      this.state.employments.map((item) => {\n        if (\n          (item.fromYear && item.toYear && item.company) ||\n          item.department ||\n          item.dutyOfWork ||\n          item.status\n        ) {\n          let object = {\n            instruction: \"\",\n            type: \"Employment\",\n            yearStart: item.fromYear.toString(),\n            yearEnd: item.toYear.toString(),\n            qualification: \"\",\n            studyDepartment: \"\",\n            schoolName: \"\",\n            companyName: item.company,\n            workDepartment: item.department,\n            dutyOfWork: item.dutyOfWork,\n            status: item.status,\n            certificate: \"\",\n            level: \"\",\n            issuedBy: \"\",\n          };\n          EmploymentArray.push(object);\n        }\n      });\n      let EducationArray = [];\n      this.state.educations.map((item) => {\n        if (\n          (item.fromYear && item.toYear) ||\n          item.areaOfStudy ||\n          item.qualification ||\n          item.shoolName\n        ) {\n          let object = {\n            instruction: \"\",\n            type: \"Education\",\n            yearStart: item.fromYear.toString(),\n            yearEnd: item.toYear.toString(),\n            qualification: item.qualification,\n            studyDepartment: item.areaOfStudy,\n            schoolName: item.shoolName,\n            companyName: \"\",\n            workDepartment: \"\",\n            dutyOfWork: \"\",\n            status: \"\",\n            certificate: \"\",\n            level: \"\",\n            issuedBy: \"\",\n          };\n          EducationArray.push(object);\n        }\n      });\n\n      let param = {\n        individualFreelancerId: this.props.userId,\n        userResumes: [\n          ...EducationArray,\n          ...CertificateArray,\n          ...EmploymentArray,\n        ],\n        selfIntroduction: selfIntroduction,\n        introductionTitle: introductionTitle,\n        wishedWorkingCondition: {\n          wishedCountry: wishedWorkingConditionCountry,\n          wishedCity: wishedWorkingConditionCity,\n          areaOfWork: wishedWorkingConditionAreaOfWork,\n          wishedMinSalary: wishedWorkingConditionFromSalary,\n          wishedMaxSalary: wishedWorkingConditionToSalary,\n        },\n      };\n\n      let result = await request(\n        ENDPOINT[\"UpdateFreelancerResume\"],\n        postOptions(param)\n      );\n      if (result.success) {\n        this.props.handleNext(\"FreelancerProfileConfirmation\");\n        localStorage.setItem(\n          \"IndividaulFreelancerRegistrationInfo\",\n          JSON.stringify({\n            step: \"FreelancerProfileConfirmation\",\n            userId: result.result.individualFreelancerId,\n          })\n        );\n        window.scrollTo({\n          top: \"0\",\n          behavior: \"smooth\",\n        });\n      } else notifications.showError(result.message);\n    }\n  };\n  componentDidMount() {\n    this.bindCountry();\n    this.getFreelancerDetail();\n  }\n\n  getFreelancerDetail = async () => {\n    if (this.props.userId) {\n      this.setState({ isSkeletonLoading: true });\n      let result = await request(\n        `${ENDPOINT[\"GetIndividualFreelancer\"]}?individualFreelancerId=${this.props.userId}`,\n        getOptions()\n      );\n      if (result.success && result.result) {\n        if (result.result.wishedWorkingCondition) {\n          this.setState({\n            selfIntroduction: result.result.selfIntroduction,\n            introductionTitle: result.result.introductionTitle,\n            wishedWorkingConditionCountry:\n              result.result.wishedWorkingCondition.wishedCountry,\n            wishedWorkingConditionCity:\n              result.result.wishedWorkingCondition.wishedCity,\n            wishedWorkingConditionAreaOfWork:\n              result.result.wishedWorkingCondition.areaOfWork,\n            wishedWorkingConditionFromSalary:\n              result.result.wishedWorkingCondition.wishedMinSalary,\n            wishedWorkingConditionToSalary:\n              result.result.wishedWorkingCondition.wishedMaxSalary,\n          });\n        }\n\n        this.setState({ isSkeletonLoading: false });\n        if (result.result.userResumes && result.result.userResumes.length > 0) {\n          let certificatesArray = [];\n          let EducationsArray = [];\n          let employmentArray = [];\n          result.result.userResumes.map((item) => {\n            if (item.type === \"Certificate\") {\n              certificatesArray.push({\n                id: v4(),\n                yearIssued: item.yearStart || item.yearEnd,\n                certificate: item.certificate,\n                level: item.level,\n                issuedBy: item.issuedBy,\n              });\n            }\n            if (item.type === \"Employment\") {\n              employmentArray.push({\n                id: v4(),\n                fromYear: item.yearStart,\n                toYear: item.yearEnd,\n                company: item.companyName,\n                department: item.workDepartment,\n                dutyOfWork: item.dutyOfWork,\n                status: item.status,\n              });\n            }\n            if (item.type === \"Education\") {\n              EducationsArray.push({\n                id: v4(),\n                fromYear: item.yearStart,\n                toYear: item.yearEnd,\n                areaOfStudy: item.studyDepartment,\n                qualification: item.qualification,\n                shoolName: item.schoolName,\n              });\n            }\n          });\n          if (certificatesArray.length > 0) {\n            this.setState({\n              certifications: certificatesArray,\n            });\n          }\n          if (EducationsArray.length > 0) {\n            this.setState({\n              educations: EducationsArray,\n            });\n          }\n          if (employmentArray.length > 0) {\n            this.setState({\n              employments: employmentArray,\n            });\n          }\n        }\n\n        /* userResumes: [{instruction: \"\", type: \"Education\", yearStart: \"1981\", yearEnd: \"1985\",…},…]\n0: {instruction */\n        // console.log(result,\"result\")\n        if (result.result.wishedWorkingCondition) {\n          setTimeout(() => {\n            if (this.state.countries && this.state.countries.length > 0) {\n              let countryId = this.state.countries.find(\n                (item) =>\n                  item.name ===\n                  result.result.wishedWorkingCondition.wishedCountry\n              );\n              if (countryId) {\n                this.bindCities(countryId.id);\n                this.setState({\n                  wishedWorkingConditionCity:\n                    result.result.wishedWorkingCondition.wishedCity,\n                });\n              }\n            }\n          }, 1000);\n        }\n      } else {\n        this.setState({ isSkeletonLoading: false });\n      }\n    }\n\n    /* printable */\n\n    if (this.props.printable) {\n      this.handlePrintAble();\n    }\n  };\n  bindCountry = async () => {\n    let array = [];\n    let result = await request(\n      `${ENDPOINT[\"GeneralSettings\"]}?settingName=Countries`,\n      getOptions({})\n    );\n    if (result.success) {\n      if (result.result.data.length > 0) {\n        for (\n          let index = 0;\n          index < result.result.data[0].data.length;\n          index++\n        ) {\n          const element = result.result.data[0].data[index];\n          array.push({\n            id: element.id,\n            name: element.name,\n          });\n        }\n        this.setState({ countries: array });\n      } else {\n        alert(\"No Country\");\n      }\n    } else {\n      alert(\"No Country\");\n    }\n  };\n  bindCities = async (countryId) => {\n    let array = [];\n    let result = await request(\n      `${ENDPOINT[\"GeneralSettings\"]}?settingName=city_country_` + countryId,\n      getOptions({})\n    );\n    if (result.success) {\n      if (result.result.data.length > 0) {\n        for (\n          let index = 0;\n          index < result.result.data[0].data.length;\n          index++\n        ) {\n          const element = result.result.data[0].data[index];\n          array.push({\n            id: element.id,\n            name: element.name,\n          });\n        }\n        this.setState({ cities: array });\n      } else {\n        alert(\"No City\");\n      }\n    } else {\n      alert(\"No City\");\n    }\n  };\n  handlePrintAble = () => {\n    /* printable-area */\n    var printContents = document.getElementById(\"printable-area\").innerHTML;\n    var originalContents = document.body.innerHTML;\n\n    document.body.innerHTML = printContents;\n\n    window.print();\n    document.body.innerHTML = originalContents;\n  };\n  render() {\n    let {\n      selfIntroduction,\n      introductionTitle,\n      programmingLanguageLevel,\n      loading,\n      isSkeletonLoading,\n    } = this.state;\n    let { languageReducer, languageType } = this.props;\n    let {\n      imgUrl,\n      professionalFields,\n      firstName,\n      lastName,\n      country,\n      countryCode,\n      phoneNo,\n      address,\n      city,\n      postalCode,\n      selectedImg,\n    } = this.state;\n    return (\n      <>\n        <SubHeader />\n        <section className=\"talent-search-page\">\n          <div className=\"bcknd_container\">\n            <div className=\"row\">\n              <div className=\"col-12 col-md-1 col-lg-2\"></div>\n              <div className=\"col-12 col-md-10 col-lg-8\">\n                <div\n                  id=\"printable-area\"\n                  className=\"hourly_limit resume-registration-new   project_post card_sec\"\n                >\n                  <Skeleton count={5} isSkeletonLoading={isSkeletonLoading} />\n                  <div hidden={isSkeletonLoading} className=\"position_rel Img_heading_userResume\">\n                    <Heading\n                      heading={languageType.USER_RESUME_REGISTRATION_TEXT}\n                      icon={\n                        \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/resume1.png\"\n                      }\n                      color=\"#333333\"\n                      fontSize=\"26px\"\n                      fontWeight=\"600\"\n                      fontFamily=\"Raleway\"\n                    />\n                    <div className=\"download_sampleExcel_pc\">\n                    <i class=\"fas fa-cloud-download-alt\"></i>  Download Sample Excel form\n                    </div>\n                    <div className=\"download_sampleExcel_mobile\">\n                    <i class=\"fas fa-cloud-download-alt\"></i> \n                    </div>\n                  </div>\n                  <form className=\"post_form\" style={{ maxWidth: \"100%\" }}>\n                    <div className=\"row\">\n                      <div className=\"col-md-3\">\n                        <div className=\"save_cancel profile_userResume_mobile\">\n                          <span className=\"profile_box\">\n                            {selectedImg && selectedImg !== null && (\n                              <img\n                                src={\n                                  this.state.selectedImg\n                                    ? URL.createObjectURL(\n                                        this.state.selectedImg\n                                      )\n                                    : this.state.profilePicture\n                                }\n                                alt=\"profile\"\n                              />\n                            )}\n                            {((selectedImg && selectedImg !== null) ||\n                              this.state.profilePicture) &&\n                              !this.state.uploading1 && (\n                                <div\n                                  onClick={() => {\n                                    this.setState({\n                                      selectedImg: null,\n                                      profilePicture: \"\",\n                                      imgUrl: {},\n                                    });\n                                  }}\n                                  className=\"trash-bin-icon-for-image-change\"\n                                >\n                                  <i className=\"fa fa-trash\"></i>\n                                </div>\n                              )}\n                          </span>\n                          <div className=\"form-group upload_file\">\n                            <label\n                              htmlFor=\"addAphoto\"\n                              style={{ width: \"124px\" }}\n                              className=\"btn create-freelancer-file-btn\"\n                            >\n                              <i\n                                className=\"fa fa-plus-circle\"\n                                aria-hidden=\"true\"\n                              />\n                              {languageType.ADD_PHOTO}\n                            </label>\n                            <input\n                              type=\"file\"\n                              className=\"form-control-file\"\n                              id=\"addAphoto\"\n                              onChange={async (e) => {\n                                let errorMessage = {};\n                                if (\n                                  e.target.files[0] &&\n                                  e.target.files[0].name &&\n                                  !e.target.files[0].name.match(\n                                    /\\.(jpg|jpeg|png|PNG|gif)$/\n                                  )\n                                ) {\n                                  this.setState({\n                                    invalidFile: \"Please select valid image\",\n                                  });\n                                  return false;\n                                }\n                                let size = e.target.files[0]\n                                  ? e.target.files[0].size\n                                  : 0;\n                                if (size < 1048576) {\n                                  this.setState({\n                                    selectedImg: e.target.files[0],\n                                  });\n                                  // this.uploadImage(e.target.files[0],\"imgUrl\")\n                                  if (this.state.selectedImg !== null)\n                                    errorMessage[\"selectedImg\"] = null;\n\n                                  this.setState({\n                                    invalidFile: null,\n                                    errorMessage: errorMessage,\n                                  });\n                                  if (this.props.userId) {\n                                    this.setState({ updatesProfile: true });\n                                  }\n                                } else {\n                                  notifications.showWarning(\n                                    languageType.IMAGE_UPLOADING_SIZE_TEXT\n                                  );\n                                  return false;\n                                }\n                              }}\n                            />\n                            {this.state.invalidFile && (\n                              <p className=\"text-danger\">\n                                {\" \"}\n                                {this.state.invalidFile}{\" \"}\n                              </p>\n                            )}\n                            {this.state.errorMessage.selectedImg && (\n                              <p className=\"text-danger\">\n                                {\" \"}\n                                {this.state.errorMessage.selectedImg}{\" \"}\n                              </p>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-md-9\">\n                        {/* <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />\n              </label> */}\n                        <div className=\"row\">\n                          <div className=\"col-12 col-md-6\">\n                            <Label\n                              title={languageType.FIRST_NAME}\n                              compulsory={true}\n                              icon={\n                                \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/nameIcon.svg\"\n                              }\n                              color=\"#333333\"\n                              width=\"20px\"\n                              primary={true}\n                            ></Label>\n                            <div className=\"form-group\">\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={firstName}\n                                maxLength=\"100\"\n                                onChange={(e) => {\n                                  let errorMessage = {};\n\n                                  if (!isValidString(e.target.value))\n                                    errorMessage[\"firstName\"] = null;\n\n                                  this.setState({\n                                    firstName: e.target.value,\n                                    errorMessage: errorMessage,\n                                  });\n                                }}\n                                placeholder={languageType.EX_JOHN}\n                              />\n                              {this.state.errorMessage.firstName && (\n                                <p className=\"text-danger\">\n                                  {\" \"}\n                                  {this.state.errorMessage.firstName}{\" \"}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n                          <div\n                            className=\"col-12 col-md-6\" \n                          >\n                            <Label\n                              title={languageType.LAST_NAME}\n                              compulsory={true}\n                              icon={\n                                \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/nameIcon.svg\"\n                              }\n                              color=\"#333333\"\n                              width=\"20px\"\n                              primary={true}\n                            ></Label>\n                            <div className=\"form-group\">\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={lastName}\n                                maxLength=\"100\"\n                                onChange={(e) => {\n                                  let errorMessage = {};\n\n                                  if (!isValidString(e.target.value))\n                                    errorMessage[\"lastName\"] = null;\n\n                                  this.setState({\n                                    lastName: e.target.value,\n                                    errorMessage: errorMessage,\n                                  });\n                                }}\n                                placeholder={languageType.EX_CARRY}\n                              />\n                              {this.state.errorMessage.lastName && (\n                                <p className=\"text-danger\">\n                                  {\" \"}\n                                  {this.state.errorMessage.lastName}{\" \"}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-md-6 col-lg-6 col-xl-3\">\n                            <div className=\"form-group\">\n                              <Label\n                                title={languageType.COUNTRY_TEXT}\n                                compulsory={true}\n                                icon={\n                                  \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/languages_world_icon.png\"\n                                }\n                                color=\"#333333\"\n                                width=\"21px\"\n                                prefixBoxInValid={\n                                  this.state.errorMessage[\"country\"]\n                                    ? true\n                                    : false\n                                }\n                                primary={true}\n                              ></Label>\n                              <DropdownList\n                                id={`CountryList}`}\n                                gray_bg \n                                name={`CountryList`}\n                                className={`${ this.state.country ? \"countryListActive\" : \"countryListnotactive\" } \"countryList_userResume\"`}\n                                enableAutoComplete\n                                enableAutoCompleteSearch\n                                placeHolder={languageType.COUNTRY_TEXT}\n                                value={country} \n                                selectItem={this.onSelectCountry}\n                                items={CountryList.map((country) => ({\n                                  text: country.name,\n                                  value: country.name,\n                                }))}\n                                onChange={(e) => {\n                                  let errorMessage = {};\n\n                                  if (!isValidString(e.target.value))\n                                    errorMessage[\"country\"] = null;\n                                  this.setState({\n                                    country: e.target.value,\n                                    errorMessage: errorMessage,\n                                  });\n                                }}\n                              />\n                              {this.state.errorMessage.country && (\n                                <p className=\"text-danger\">\n                                  {\" \"}\n                                  {this.state.errorMessage.country}{\" \"}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"col-md-6 col-lg-6 col-xl-3\">\n                            <div className=\"form-group\">\n                              <Label\n                                title={languageType.COUNTRY_CODE}\n                                compulsory={true}\n                                icon={\n                                  \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/countryCode.svg\"\n                                }\n                                color=\"#333333\"\n                                width=\"20px\"\n                                primary={true}\n                              ></Label>\n                              <input\n                                type=\"text\"\n                                className=\"form-control gray_bg\"\n                                placeholder=\"Country Code\"\n                                value={countryCode}\n                                maxLength=\"10\"\n                                onChange={(e) => {\n                                  let errorMessage = {};\n\n                                  if (!isValidString(e.target.value))\n                                    errorMessage[\"countryCode\"] = null;\n                                  this.setState({\n                                    countryCode: e.target.value,\n                                    errorMessage: errorMessage,\n                                  });\n                                }}\n                              />\n                              {this.state.errorMessage.countryCode && (\n                                <p className=\"text-danger\">\n                                  {\" \"}\n                                  {this.state.errorMessage.countryCode}{\" \"}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"col-md-6 col-lg-6\">\n                            <div className=\"form-group\">\n                              <Label\n                                title={languageType.MOBILE_NO}\n                                compulsory={true}\n                                icon={\n                                  \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/call_phone.svg\"\n                                }\n                                color=\"#333333\"\n                                width=\"18px\"\n                                primary={true}\n                              ></Label>\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder={languageType.MOBILE_NO}\n                                maxLength=\"10\"\n                                value={phoneNo}\n                                onChange={(e) => {\n                                  let errorMessage = {};\n\n                                  if (e.target.value.trim() === \"\") {\n                                    this.setState({ phoneNo: e.target.value });\n                                  }\n\n                                  if (!isNumeric(e.target.value)) {\n                                    errorMessage[\"phoneNo\"] = null;\n                                    return false;\n                                  }\n\n                                  this.setState({\n                                    phoneNo: e.target.value,\n                                    errorMessage: errorMessage,\n                                  });\n                                }}\n                              />\n                              {this.state.errorMessage.phoneNo && (\n                                <p className=\"text-danger\">\n                                  {\" \"}\n                                  {this.state.errorMessage.phoneNo}{\" \"}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n                          {/* <div\n                            className=\"col-md-2\" \n                          > */}\n                            {/* <div className=\"form-group\">\n                              <div className=\"\">\n                                <button\n                                  type=\"button\"\n                                  className=\"btn cancel_btn verify_btn\"\n                                  style={{ position: \"relative\", top: \"24px\" }}\n                                >\n                                  Verify\n                                </button>\n                              </div>\n                            </div> */}\n                          {/* </div> */}\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-md-8\">\n                            <div className=\"form-group custom-form-top-margin\">\n                              <Label\n                                title={languageType.ADDRESS}\n                                compulsory={true}\n                                icon={\n                                  \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/addressIcon.svg\"\n                                }\n                                color=\"#333333\"\n                                width=\"21px\"\n                                primary={true}\n                              ></Label>\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder={languageType.ADDRESS}\n                                value={address}\n                                maxLength=\"500\"\n                                onChange={(e) => {\n                                  let errorMessage = {};\n                                  if (!isValidString(e.target.value))\n                                    errorMessage[\"address\"] = null;\n                                  this.setState({\n                                    address: e.target.value,\n                                    errorMessage: errorMessage,\n                                  });\n                                }}\n                              />\n                              {this.state.errorMessage.address && (\n                                <p className=\"text-danger\">\n                                  {\" \"}\n                                  {this.state.errorMessage.address}{\" \"}\n                                </p>\n                              )}\n                            </div>\n                            <div className=\"row\">\n                              <div className=\"col-md-7\">\n                                <div className=\"form-group\">\n                                  <Label\n                                    title={languageType.CITY_TEXT}\n                                    compulsory={true}\n                                    icon={\n                                      \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/education.png\"\n                                    }\n                                    color=\"#333333\"\n                                    width=\"21px\"\n                                    primary={true}\n                                  ></Label>\n                                  <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder={languageType.CITY_TEXT}\n                                    value={city}\n                                    maxLength=\"100\"\n                                    onChange={(e) => {\n                                      let errorMessage = {};\n                                      if (!isValidString(e.target.value))\n                                        errorMessage[\"city\"] = null;\n                                      this.setState({\n                                        city: e.target.value,\n                                        errorMessage: errorMessage,\n                                      });\n                                    }}\n                                  />\n                                  {this.state.errorMessage.city && (\n                                    <p className=\"text-danger\">\n                                      {\" \"}\n                                      {this.state.errorMessage.city}{\" \"}\n                                    </p>\n                                  )}\n                                </div>\n                              </div>\n                              <div className=\"col-md-5\">\n                                <div className=\"form-group\">\n                                  <Label\n                                    title={languageType.POST_CODE}\n                                    compulsory={true}\n                                    icon={\n                                      \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/postalCode.svg\"\n                                    }\n                                    color=\"#333333\"\n                                    width=\"21px\"\n                                    primary={true}\n                                  ></Label>\n                                  <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder={languageType.POST_CODE}\n                                    value={postalCode}\n                                    maxLength=\"10\"\n                                    onChange={(e) => {\n                                      let errorMessage = {};\n                                      if (e.target.value.trim() === \"\") {\n                                        this.setState({\n                                          postalCode: e.target.value,\n                                        });\n                                      }\n\n                                      if (!isNumeric(e.target.value)) {\n                                        errorMessage[\"postalCode\"] = null;\n                                        return false;\n                                      }\n\n                                      this.setState({\n                                        postalCode: e.target.value,\n                                        errorMessage: errorMessage,\n                                      });\n                                    }}\n                                  />\n                                  {this.state.errorMessage.postalCode && (\n                                    <p className=\"text-danger\">\n                                      {\" \"}\n                                      {this.state.errorMessage.postalCode}{\" \"}\n                                    </p>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-4 ExcelArea_userResumeTopMob\">\n                            <div className=\"ExcelArea_userResume\">\n                              <div \n                                className=\"proposal-team-link-area\"\n                              >\n                                <b\n                                  className=\"EXCEL_BULK_TextGreen\" \n                                >\n                                  {languageType.EXCEL_BULK_LOAD}\n                                </b>\n                                <img\n                                  src={ \n                                    \"https://dhihitu47nqhv.cloudfront.net/icons/excelIcon.svg\" \n                                  }\n                                  alt=\"\"\n                                  height={32}\n                                  width={32}\n                                />\n                              </div>\n\n                              <div>\n                                <a className=\"bulkBold_textUser_resume\">\n                                  {languageType.USER_RESUME_BULK}\n                                </a>\n                              </div>\n                            </div>\n\n                            <div\n                              className=\"ExcelArea_userResume\"\n                              style={{\n                                marginTop: \"10px\",\n                                textAlign:'center'\n                              }}\n                            >\n                              <a className=\"bulkBold_textUser_resume2\">\n                                {languageType.UPGRADE_SERVICE}\n                              </a>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                  <div\n                    hidden={isSkeletonLoading}\n                    className=\"collapse animaton-height show\"\n                  >\n                    <form\n                      className=\"post_form post_form_resumePage\"\n                      style={{ padding: \"0px 15px 0px 0px\", maxWidth: \"100%\" }}\n                    >\n                      <>\n                        {/*Education*/}\n                        <div className=\"addMore_detail create_freelancer\">\n                          <Label\n                            title={languageType.EDUCATION_TEXT}\n                            icon={\n                              \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/educationIcon.svg\"\n                            }\n                            color=\"#333333\"\n                            width=\"21px\"\n                            primary={true}\n                            bold={true}\n                          ></Label>\n                          <div className=\"table-responsive\">\n                          <table className=\"table text-center\">\n                            <thead>\n                              <tr>\n                                <th scope=\"col\">{languageType.YEAR_FROM}</th>\n                                <th scope=\"col\">{languageType.YEAR_TO}</th>\n                                <th scope=\"col\">\n                                  {languageType.QUALIFICATION_TEXT}\n                                </th>\n                                <th scope=\"col\">\n                                  {languageType.AREA_TO_STUDY}\n                                </th>\n                                <th scope=\"col\">{languageType.SCHOOL_NAME}</th>\n                                <th scope=\"col\" style={{ width: \"50px\" }}>\n                                  {languageType.ACTION}\n                                </th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {this.state.educations.map((el, i) => (\n                                <tr key={i}>\n                                  <td className=\"text-left p-0  customer-col-width\">\n                                    <DropdownList\n                                      id={`educationFromYear${el.id}`}\n                                      name={`educationFromYear${el.id}`}\n                                      placeHolder=\"From Year\"\n                                      value={el.fromYear}\n                                      enableAutoCompleteSearch\n                                      noborder\n                                      selectItem={(value) => {\n                                        el.fromYear = value;\n                                        this.setState({\n                                          educations: this.state.educations,\n                                        });\n                                      }}\n                                      items={GetSpecificYearsList(\n                                        1980,\n                                        new Date().getFullYear()\n                                      )}\n                                    />\n                                  </td>\n                                  <td className=\"text-left p-0 customer-col-width\">\n                                    <DropdownList\n                                      id={`educationToYear${el.id}`}\n                                      name={`educationToYear${el.id}`}\n                                      placeHolder=\"To Year\"\n                                      value={el.toYear}\n                                      enableAutoCompleteSearch\n                                      noborder\n                                      selectItem={(value) => {\n                                        if (value > el.fromYear) {\n                                          el.toYear = value;\n                                          this.setState({\n                                            educations: this.state.educations,\n                                          });\n                                        } else {\n                                          notifications.showWarning(\n                                            \"To year should be greater than from year\"\n                                          );\n                                        }\n                                      }}\n                                      items={GetSpecificYearsList(\n                                        1980,\n                                        new Date().getFullYear()\n                                      )}\n                                    />\n                                  </td>\n                                  <td\n                                    className=\"text-left p-0\"\n                                    style={{ minWidth: \"200px\" }}\n                                  >\n                                    <DropdownList\n                                      id={`qualification${el.id}`}\n                                      name={`qualification${el.id}`}\n                                      placeHolder=\"Qualification\"\n                                      enableAutoCompleteSearch\n                                      value={el.qualification}\n                                      noborder\n                                      selectItem={(value) => {\n                                        el.qualification = value;\n                                        this.setState({\n                                          educations: this.state.educations,\n                                        });\n                                      }}\n                                      items={languageReducer.educationType}\n                                    />\n                                  </td>\n                                  <td>\n                                    <input\n                                      type=\"text\"\n                                      className=\"form-control\"\n                                      value={el.areaOfStudy}\n                                      placeholder=\"Enter department\"\n                                      maxLength=\"100\"\n                                      onChange={(e) => {\n                                        let errorMessage = {};\n                                        el.areaOfStudy = e.target.value;\n\n                                        this.setState({\n                                          educations: this.state.educations,\n                                          errorMessage: errorMessage,\n                                        });\n                                      }}\n                                    />\n                                  </td>\n                                  <td>\n                                    <input\n                                      type=\"text\"\n                                      className=\"form-control\"\n                                      value={el.schoolName}\n                                      maxLength=\"500\"\n                                      placeholder=\"Enter school name\"\n                                      onChange={(e) => {\n                                        let errorMessage = {};\n                                        el.schoolName = e.target.value;\n\n                                        this.setState({\n                                          educations: this.state.educations,\n                                          errorMessage: errorMessage,\n                                        });\n                                      }}\n                                    />\n                                  </td>\n                                  <td>\n                                    {i == 0 ? (\n                                      <i\n                                        onClick={() => {\n                                          let educations =\n                                            this.state.educations;\n                                          educations.push({\n                                            id: v4(),\n                                            fromYear: \"\",\n                                            toYear: \"\",\n                                            areaOfStudy: \"\",\n                                            qualification: \"\",\n                                            shoolName: \"\",\n                                          });\n                                          this.setState({\n                                            educations: educations,\n                                          });\n                                        }}\n                                        className=\"fa fa-plus customer-table-icon\"\n                                      ></i>\n                                    ) : (\n                                      <i\n                                        onClick={() => {\n                                          let educationList =\n                                            this.state.educations.filter(\n                                              (x) => x.id !== el.id\n                                            );\n                                          this.setState({\n                                            educations: educationList,\n                                          });\n                                        }}\n                                        className=\"fa fa-trash customer-table-icon\"\n                                        aria-hidden=\"true\"\n                                      ></i>\n                                    )}\n                                  </td>\n                                </tr>\n                              ))}\n                            </tbody>\n                          </table>\n                          </div>\n                        </div>\n\n                        {/*Employment*/}\n                        <br />\n                        <div className=\"addMore_detail create_freelancer\">\n                          <Label\n                            title={\"Employment History \"}\n                            icon={\n                              \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/employment.png\"\n                            }\n                            color=\"#333333\"\n                            width=\"21px\"\n                            primary={true}\n                            bold={true}\n                          ></Label>\n                          <div className=\"table-responsive\">\n                            <table className=\"table text-center\">\n                              <thead>\n                                <tr>\n                                  <th scope=\"col\">{languageType.YEAR_FROM}</th>\n                                  <th scope=\"col\">{languageType.YEAR_TO}</th>\n                                  <th scope=\"col\">\n                                    {languageType.COMPANY_NAME}\n                                  </th>\n                                  <th scope=\"col\">\n                                    {languageType.DEPARTMENT_TEXT}\n                                  </th>\n                                  <th scope=\"col\">\n                                    {languageType.DUTY_OF_WORK}\n                                  </th>\n                                  <th scope=\"col\">\n                                    {languageType.CURRENT_STATUS}\n                                  </th>\n                                  <th scope=\"col\" style={{ width: \"50px\" }}>\n                                    {languageType.ACTION}\n                                  </th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {this.state.employments.map((el, i) => (\n                                  <tr key={i}>\n                                    <td className=\"text-left p-0  customer-col-width1\">\n                                      <DropdownList\n                                        id={`employmentYearFrom${el.id}`}\n                                        name={`employmentYearFrom${el.id}`}\n                                        placeHolder=\"Year From\"\n                                        enableAutoCompleteSearch\n                                        noborder\n                                        value={el.fromYear}\n                                        selectItem={(value) => {\n                                          el.fromYear = value;\n                                          this.setState({\n                                            employments: this.state.employments,\n                                          });\n                                        }}\n                                        items={GetSpecificYearsList(\n                                          1980,\n                                          new Date().getFullYear()\n                                        )}\n                                      />\n                                    </td>\n                                    <td className=\"text-left p-0  customer-col-width1\">\n                                      <DropdownList\n                                        id={`employmentToYear${el.id}`}\n                                        name={`employmentToYear${el.id}`}\n                                        placeHolder=\"Year To\"\n                                        enableAutoCompleteSearch\n                                        noborder\n                                        value={el.toYear}\n                                        selectItem={(value) => {\n                                          if (value > el.fromYear) {\n                                            el.toYear = value;\n                                            this.setState({\n                                              employments:\n                                                this.state.employments,\n                                            });\n                                          } else {\n                                            notifications.showWarning(\n                                              \"To year should be greater than from year\"\n                                            );\n                                          }\n                                        }}\n                                        items={GetSpecificYearsList(\n                                          1980,\n                                          new Date().getFullYear()\n                                        )}\n                                      />\n                                    </td>\n                                    <td\n                                      className=\"text-left p-0\"\n                                      style={{ width: \"140px\" }}\n                                    >\n                                      <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        value={el.company}\n                                        placeholder=\"Enter company \"\n                                        maxLength=\"500\"\n                                        onChange={(e) => {\n                                          let errorMessage = {};\n                                          el.company = e.target.value;\n\n                                          this.setState({\n                                            employments: this.state.employments,\n                                            errorMessage: errorMessage,\n                                          });\n                                        }}\n                                      />\n                                    </td>\n                                    <td\n                                      className=\"text-left p-0\"\n                                      style={{ width: \"140px\" }}\n                                    >\n                                      <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        value={el.department}\n                                        placeholder=\"Enter Department\"\n                                        maxLength=\"500\"\n                                        onChange={(e) => {\n                                          let errorMessage = {};\n                                          el.department = e.target.value;\n\n                                          this.setState({\n                                            employments: this.state.employments,\n                                            errorMessage: errorMessage,\n                                          });\n                                        }}\n                                      />\n                                    </td>\n                                    <td className=\"text-left p-0\">\n                                      <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        value={el.dutyOfWork}\n                                        maxLength=\"500\"\n                                        placeholder=\"Enter Duty\"\n                                        onChange={(e) => {\n                                          let errorMessage = {};\n                                          el.dutyOfWork = e.target.value;\n\n                                          this.setState({\n                                            employments: this.state.employments,\n                                            errorMessage: errorMessage,\n                                          });\n                                        }}\n                                      />\n                                    </td>\n                                    <td className=\"customer-col-width\">\n                                      <DropdownList\n                                        id=\"currentStatus\"\n                                        name=\"DropdownList\"\n                                        value={el.status}\n                                        enableAutoCompleteSearch\n                                        noborder\n                                        selectItem={(value) => {\n                                          el.status = value;\n                                          this.setState({\n                                            employments: this.state.employments,\n                                          });\n                                        }}\n                                        items={[\n                                          { text: \"Working\", value: \"Working\" },\n                                          {\n                                            text: \"Resigned\",\n                                            value: \"Resigned\",\n                                          },\n                                        ]}\n                                      />\n                                    </td>\n                                    <td>\n                                      {i == 0 ? (\n                                        <i\n                                          onClick={() => {\n                                            let employments =\n                                              this.state.employments;\n                                            employments.push({\n                                              id: v4(),\n                                              fromYear: \"\",\n                                              toYear: \"\",\n                                              company: \"\",\n                                              department: \"\",\n                                              dutyOfWork: \"\",\n                                              status: \"\",\n                                            });\n                                            this.setState({\n                                              employments: employments,\n                                            });\n                                          }}\n                                          className=\"fa fa-plus customer-table-icon\"\n                                        ></i>\n                                      ) : (\n                                        <i\n                                          onClick={() => {\n                                            let employmentList =\n                                              this.state.employments.filter(\n                                                (x) => x.id !== el.id\n                                              );\n                                            this.setState({\n                                              employments: employmentList,\n                                            });\n                                          }}\n                                          className=\"fa fa-trash customer-table-icon\"\n                                          aria-hidden=\"true\"\n                                        ></i>\n                                      )}\n                                    </td>\n                                  </tr>\n                                ))}\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                        <br />\n                        {/*Certificate*/}\n                        <div className=\"addMore_detail create_freelancer\">\n                          <Label\n                            title={\"Certification \"}\n                            color=\"#333333\"\n                            width=\"21px\"\n                            icon={\n                              \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/trophy.png\"\n                            }\n                            primary={true}\n                            bold={true}\n                          ></Label>\n                          <div className=\"table-responsive\">\n                          <table className=\"table text-center\">\n                            <thead>\n                              <tr>\n                                <th scope=\"col\">{languageType.YEAR_ISSUED}</th>\n                                <th scope=\"col\">\n                                  {languageType.CERTIFICATE_TEXT}\n                                </th>\n                                <th scope=\"col\">{languageType.LEVEL_RESULT}</th>\n                                <th scope=\"col\">{languageType.ISSUED_BY}</th>\n                                <th scope=\"col\" style={{ width: \"50px\" }}>\n                                  {languageType.ACTION}\n                                </th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {this.state.certifications.map((el, i) => (\n                                <tr key={i}>\n                                  <td className=\"text-left p-0 customer-col-width\">\n                                    <DropdownList\n                                      id={`YearIssued${el.id}`}\n                                      name={`YearIssued${el.id}`}\n                                      placeHolder=\"Year Issued\"\n                                      enableAutoCompleteSearch\n                                      value={el.yearIssued}\n                                      noborder\n                                      selectItem={(value) => {\n                                        el.yearIssued = value;\n                                        this.setState({\n                                          certifications:\n                                            this.state.certifications,\n                                        });\n                                      }}\n                                      items={GetSpecificYearsList(\n                                        1980,\n                                        new Date().getFullYear()\n                                      )}\n                                    />\n                                  </td>\n                                  <td>\n                                    <input\n                                      type=\"text\"\n                                      className=\"form-control\"\n                                      value={el.certificate}\n                                      maxLength=\"500\"\n                                      onChange={(e) => {\n                                        let errorMessage = {};\n                                        el.certificate = e.target.value;\n                                        this.setState({\n                                          certifications:\n                                            this.state.certifications,\n                                          errorMessage: errorMessage,\n                                        });\n                                      }}\n                                    />\n                                  </td>\n                                  <td>\n                                    <input\n                                      type=\"text\"\n                                      className=\"form-control\"\n                                      value={el.level}\n                                      maxLength=\"50\"\n                                      onChange={(e) => {\n                                        let errorMessage = {};\n                                        el.level = e.target.value;\n                                        this.setState({\n                                          certifications:\n                                            this.state.certifications,\n                                          errorMessage: errorMessage,\n                                        });\n                                      }}\n                                    />\n                                  </td>\n                                  <td>\n                                    <input\n                                      type=\"text\"\n                                      className=\"form-control\"\n                                      value={el.issuedBy}\n                                      maxLength=\"100\"\n                                      onChange={(e) => {\n                                        let errorMessage = {};\n                                        el.issuedBy = e.target.value;\n                                        this.setState({\n                                          certifications:\n                                            this.state.certifications,\n                                          errorMessage: errorMessage,\n                                        });\n                                      }}\n                                    />\n                                  </td>\n                                  <td>\n                                    {i == 0 ? (\n                                      <i\n                                        onClick={() => {\n                                          let certifications =\n                                            this.state.certifications;\n                                          certifications.push({\n                                            id: v4(),\n                                            yearIssued: \"\",\n                                            certificate: \"\",\n                                            level: \"\",\n                                            issuedBy: \"\",\n                                          });\n                                          this.setState({\n                                            certifications: certifications,\n                                          });\n                                        }}\n                                        className=\"fa fa-plus customer-table-icon\"\n                                      ></i>\n                                    ) : (\n                                      <i\n                                        onClick={() => {\n                                          let certificationList =\n                                            this.state.certifications.filter(\n                                              (x) => x.id !== el.id\n                                            );\n                                          this.setState({\n                                            certifications: certificationList,\n                                          });\n                                        }}\n                                        className=\"fa fa-trash customer-table-icon\"\n                                        aria-hidden=\"true\"\n                                      ></i>\n                                    )}\n                                  </td>\n                                </tr>\n                              ))}\n                            </tbody>\n                          </table>\n                          </div>\n                        </div>\n\n                        {/*EmploymentHistory*/}\n                      </>\n\n                      <br />\n                      <div className=\"addMore_detail\">\n                        <div className=\"form-group\">\n                          <Label\n                          title ={languageType.INTRODUCTION_TITLE_TEXT}\n                          icon={\n                            \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/favorite_page.svg\"\n                          }\n                          color=\"#333333\"\n                          width=\"22px\" \n                          primary={true}\n                          > </Label>  \n                          <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                maxLength=\"100\"\n                                value={introductionTitle}\n                                onChange={(e) => {\n                                  let errorMessage = {};\n\n                                  if (!isValidString(e.target.value))\n                                    errorMessage[\"introductionTitle\"] = null;\n\n                                  this.setState({\n                                    introductionTitle: e.target.value,\n                                    errorMessage: errorMessage,\n                                  });\n                                }}\n                                placeholder={languageType.INTRODUCTION_TITLE_TEXT}\n                          />\n                          {this.state.errorMessage.introductionTitle && (\n                            <p className=\"text-danger\">\n                              {\" \"}\n                              {this.state.errorMessage.introductionTitle}{\" \"}\n                            </p>\n                          )}\n                        </div>\n                        <div className=\"form-group\">\n                          <Label\n                            title={languageType.SELF_INTRO}\n                            icon={\n                              \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/experience.png\"\n                            }\n                            color=\"#333333\"\n                            width=\"26px\"\n                            primary={true}\n                          ></Label>\n\n                          <textarea\n                            className=\"form-control\"\n                            rows=\"5\"\n                            placeholder={languageType.ENTER_SELF_INTRO}\n                            value={selfIntroduction}\n                            maxLength=\"1000\"\n                            onChange={(e) => {\n                              let errorMessage = {};\n\n                              if (!isValidString(e.target.value))\n                                errorMessage[\"selfIntroduction\"] = null;\n                              this.setState({\n                                selfIntroduction: e.target.value,\n                                errorMessage: errorMessage,\n                              });\n                            }}\n                          ></textarea>\n                          {this.state.errorMessage.selfIntroduction && (\n                            <p className=\"text-danger\">\n                              {\" \"}\n                              {this.state.errorMessage.selfIntroduction}{\" \"}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n\n                      <br />\n                      <br />\n                      <div className=\"resume-view-pdf-link\">\n                        <h3\n                          onClick={() => {\n                            this.handlePrintAble();\n                          }}\n                        >\n                          {languageType.VIEW_IN_PDF}\n                        </h3>\n                      </div>\n                      <div\n                        className=\"create-freelancer-bottom-steps\"\n                        style={{ paddingRight: \"0px\" }}\n                      >\n                        <button\n                          onClick={(e) => {}}\n                          className=\"create-freelancer-bottom-steps-back\"\n                        >\n                          {languageType.SAVE}\n                        </button>\n                        <button\n                          disabled={loading}\n                          onClick={(e) => {}}\n                          className=\"create-freelancer-bottom-steps-skip\"\n                        >\n                          Offer{\" \"}\n                          {loading ? (\n                            <i className=\"fa fa-spinner fa-spin\"></i>\n                          ) : (\n                            \"\"\n                          )}\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-12 col-md-2\"></div>\n            </div>\n          </div>\n        </section>\n        <br />\n        <br />\n        <br />\n      </>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    languageReducer: state.languageReducer,\n    languageType: state.languageReducer.languageType,\n  };\n}\n\nexport default connect(mapStateToProps)(ResumePage);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/freelancer/contractDetail/sharedComponents/workReport.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../contractDetail.scss\";\nimport Format from \"../../../../components/numberFormat\";\nimport { UserView } from \"../../../../components/freelancer/userView\";\nimport request from \"../../../../utils/request\";\nimport { ENDPOINT } from \"../../../../utils/endpoint\";\nimport { getOptions, postOptions } from \"../../../../utils/httpConfig\";\nimport Skeleton from \"../../../../components/skeleton/skeleton\";\nimport AtivitiesReportTableView from \"../sharedComponents/ativitiesTableView\";\nimport ScreenShotsCapturedView from \"../sharedComponents/screenshotsCaptuedView\";\n\nfunction WorkReport(props) {\n  var _props$location;\n\n  const [unpaidAmount, setUnpaidAmount] = useState(0.0);\n  const [isActiveReportViewTable, setIsActiveReportViewScreenshots] = useState(false);\n  const [isSkeletonLoading, setIsSkeletonLoading] = useState(false);\n  const [timeSummary, setTimeSummary] = useState({});\n  useEffect(() => {\n    var _props$contractDetail;\n\n    getTimeSummary((_props$contractDetail = props.contractDetail) === null || _props$contractDetail === void 0 ? void 0 : _props$contractDetail.projectContractId);\n  }, [props.contractDetail]);\n\n  const getTimeSummary = async projectContractId => {\n    if (projectContractId) {\n      setIsSkeletonLoading(true);\n      let result = await request(`${ENDPOINT[\"GetTimeSummary\"]}?contractId=${projectContractId}`, getOptions({}));\n\n      if (result.success) {\n        setTimeSummary(result.result);\n        setIsSkeletonLoading(false);\n      } else {\n        setIsSkeletonLoading(false);\n      }\n    }\n  };\n\n  const onReportViewChange = () => {\n    setIsActiveReportViewScreenshots(!isActiveReportViewTable);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(Skeleton, {\n    count: 5,\n    isSkeletonLoading: isSkeletonLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    hidden: isSkeletonLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserView, Object.assign({\n    projectDetail: props.projectDetail,\n    unpaidAmount: /*#__PURE__*/React.createElement(Format, {\n      number: unpaidAmount,\n      currency: props.projectDetail.currencyCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }),\n    contractDetail: props.contractDetail,\n    timeAndPaymentsTab: true,\n    userProfile: props === null || props === void 0 ? void 0 : props.userProfile\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), props.projectDetail.projectType === \"FreeContract\" || props.projectDetail.projectType === \"Hourly\" ? isActiveReportViewTable ? /*#__PURE__*/React.createElement(AtivitiesReportTableView, {\n    onReportViewChange: onReportViewChange,\n    isReportTableViewActive: isActiveReportViewTable,\n    contractData: (_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.state,\n    timeSummary: timeSummary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(ScreenShotsCapturedView, {\n    onReportViewChange: onReportViewChange,\n    isReportTableViewActive: isActiveReportViewTable,\n    contractData: props.contractDetail,\n    timeSummary: timeSummary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }) : ''));\n}\n\nexport default WorkReport;","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/freelancer/contractDetail/sharedComponents/workReport.js"],"names":["React","useEffect","useState","Format","UserView","request","ENDPOINT","getOptions","postOptions","Skeleton","AtivitiesReportTableView","ScreenShotsCapturedView","WorkReport","props","unpaidAmount","setUnpaidAmount","isActiveReportViewTable","setIsActiveReportViewScreenshots","isSkeletonLoading","setIsSkeletonLoading","timeSummary","setTimeSummary","getTimeSummary","contractDetail","projectContractId","result","success","onReportViewChange","projectDetail","currencyCode","userProfile","projectType","location","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../contractDetail.scss\";\nimport Format from \"../../../../components/numberFormat\";\nimport { UserView } from \"../../../../components/freelancer/userView\";\nimport request from \"../../../../utils/request\";\nimport { ENDPOINT } from \"../../../../utils/endpoint\";\nimport { getOptions, postOptions } from \"../../../../utils/httpConfig\";\nimport Skeleton from \"../../../../components/skeleton/skeleton\";\nimport AtivitiesReportTableView from \"../sharedComponents/ativitiesTableView\";\nimport ScreenShotsCapturedView from \"../sharedComponents/screenshotsCaptuedView\";\n\nfunction WorkReport(props) {\n  const [unpaidAmount, setUnpaidAmount] = useState(0.0);\n  const [isActiveReportViewTable, setIsActiveReportViewScreenshots] =\n    useState(false);\n  const [isSkeletonLoading, setIsSkeletonLoading] = useState(false);\n  const [timeSummary, setTimeSummary] = useState({});\n\n  useEffect(() => {\n    getTimeSummary(props.contractDetail?.projectContractId);\n  }, [props.contractDetail]);\n\n  const getTimeSummary = async (projectContractId) => {\n    if (projectContractId) {\n      setIsSkeletonLoading(true);\n      let result = await request(\n        `${ENDPOINT[\"GetTimeSummary\"]}?contractId=${projectContractId}`,\n        getOptions({})\n      );\n      if (result.success) {\n        setTimeSummary(result.result);\n        setIsSkeletonLoading(false);\n      } else {\n        setIsSkeletonLoading(false);\n      }\n    }\n  };\n  const onReportViewChange = () => {\n    setIsActiveReportViewScreenshots(!isActiveReportViewTable);\n  };\n\n  return (\n    <>\n      {\" \"}\n      <Skeleton count={5} isSkeletonLoading={isSkeletonLoading} />\n      <div hidden={isSkeletonLoading}>\n        <UserView\n          projectDetail={props.projectDetail}\n          unpaidAmount={\n            <Format\n              number={unpaidAmount}\n              currency={props.projectDetail.currencyCode}\n            />\n          }\n          contractDetail={props.contractDetail}\n          timeAndPaymentsTab={true}\n          userProfile={props?.userProfile}\n          {...props}\n        />\n        {(props.projectDetail.projectType === \"FreeContract\" ||\n          props.projectDetail.projectType === \"Hourly\") ?\n        isActiveReportViewTable ? (\n          <AtivitiesReportTableView\n            onReportViewChange={onReportViewChange}\n            isReportTableViewActive={isActiveReportViewTable}\n            contractData={props.location?.state}\n            timeSummary={timeSummary}\n          />\n        ) : (\n          <ScreenShotsCapturedView\n            onReportViewChange={onReportViewChange}\n            isReportTableViewActive={isActiveReportViewTable}\n            contractData={props.contractDetail}\n            timeSummary={timeSummary}\n          />\n        ):''}\n      </div>\n    </>\n  );\n}\n\nexport default WorkReport;\n"]},"metadata":{},"sourceType":"module"}
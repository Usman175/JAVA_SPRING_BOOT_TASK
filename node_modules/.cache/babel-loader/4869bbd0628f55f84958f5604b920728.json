{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/container/client/clientRegistration/clientRegistration.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Heading from \"../../../components/freelancerCreation/heading\";\nimport DropdownList from \"../../../components/dropdowns/dropdownList\";\nimport { CountryList } from \"../../../utils/countrylist\";\nimport Label from \"../../../components/postProject/label\";\nimport { isNumeric, isValidString } from \"../../../utils/validationConfig\";\nimport OptionalInfo from \"../../../components/registration/optionalInfo\";\nimport FileUploadLoader from \"../../../components/loader/fileUpload\";\nimport request from \"../../../utils/request\";\nimport { selectSubScopes } from \"../../../utils/helpers\";\nimport notifications from \"../../../utils/notifications\";\nimport { ENDPOINT } from \"../../../utils/endpoint\";\nimport { updateClientRegisterValue } from \"../../../store/action/Client/registerClient\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getOptions, postMultipartFile, postOptions, postMultipartFileNew } from \"../../../utils/httpConfig\";\nimport { stockMarketsList } from \"../../../utils/stockMarkets\";\nimport Skeleton from \"../../../components/skeleton/skeleton\";\nimport { uploadImage, deleteImage } from \"../../../services/uploadImages\";\nimport { uploadVideo } from \"../../../services/uploadVideo\";\nimport { getProfileImage } from \"../../../utils/getProfileUrl\";\nimport \"./clientRegistration.scss\";\n\nfunction ClientRegistrationStep(props) {\n  var _props$location3, _props$location3$stat;\n\n  const [errorMessage, setErrorMessage] = useState({});\n  const [subScope, setSubScope] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [isSkeletonLoading, setIsSkeletonLoading] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState(\"\");\n  const dispatch = useDispatch();\n  const [fileUploading, setFileUploading] = useState({\n    userProfileUrl: false\n  });\n  const [cities, setCities] = useState([]);\n  const [workingConditions, setWorkingConditions] = useState({\n    wishedWorkingConditionCountry: \"\",\n    wishedWorkingConditionCity: \"\",\n    wishedWorkingConditionAreaOfWork: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const languageType = useSelector(state => state.languageReducer.languageType);\n  const languageReducer = useSelector(state => state.languageReducer);\n  const lookUpData = useSelector(state => state.lookUp.lookUpData);\n  const clientRegistration = useSelector(state => state.clientRegistration);\n  useEffect(() => {\n    getClientDetail();\n  }, [props.clientId]); // set default country and country code by location\n\n  React.useEffect(() => {\n    if (lookUpData === null || lookUpData === void 0 ? void 0 : lookUpData.country) {\n      handleUpdateClientRegistrationValue(lookUpData === null || lookUpData === void 0 ? void 0 : lookUpData.country, \"country\");\n\n      if (lookUpData === null || lookUpData === void 0 ? void 0 : lookUpData.shortCode) {\n        let shortCode = CountryList.find(item => item.name === (lookUpData === null || lookUpData === void 0 ? void 0 : lookUpData.country));\n\n        if (shortCode) {\n          handleUpdateClientRegistrationValue(shortCode.dial_code, \"countryCode\");\n        }\n      }\n    }\n  }, [lookUpData]);\n\n  const getClientDetail = async () => {\n    if (props.clientId) {\n      setIsSkeletonLoading(true);\n      let result = await request(`${ENDPOINT[\"GetUserClient\"]}?clientId=${props.clientId}`, getOptions());\n\n      if (result.success) {\n        var _clientDetail$service, _clientDetail$service2;\n\n        let clientDetail = result.result;\n        setIsSkeletonLoading(false);\n        handleUpdateClientRegistrationValue(clientDetail.userProfileUrl, \"userProfileUrl\");\n        handleUpdateClientRegistrationValue(clientDetail.firstName, \"firstName\");\n        handleUpdateClientRegistrationValue(clientDetail.lastName, \"lastName\");\n        handleUpdateClientRegistrationValue(clientDetail.companyName, \"companyName\");\n        handleUpdateClientRegistrationValue(clientDetail.phoneNo, \"phoneNo\");\n        handleUpdateClientRegistrationValue(clientDetail.userTitle, \"userTitle\");\n        handleUpdateClientRegistrationValue(clientDetail.professionalOverview, \"professionalOverview\");\n        handleUpdateClientRegistrationValue(clientDetail.serviceScopes && ((_clientDetail$service = clientDetail.serviceScopes[0]) === null || _clientDetail$service === void 0 ? void 0 : _clientDetail$service.serviceScope), \"businessType\");\n        setSubScope(selectSubScopes(clientDetail.serviceScopes && ((_clientDetail$service2 = clientDetail.serviceScopes[0]) === null || _clientDetail$service2 === void 0 ? void 0 : _clientDetail$service2.serviceScope), languageReducer.projectScopes));\n        handleOptionalInfoFromResponse(clientDetail.linkedInProfileUrl, clientDetail.annualSales, clientDetail.noOfEmployee, clientDetail.website || \"\", clientDetail.portfolios, clientDetail.officePhotos, clientDetail.awardCertificates, clientDetail.introductionVideo);\n      } else {\n        setIsSkeletonLoading(false);\n      }\n    }\n  };\n\n  const handleOptionalInfoFromResponse = (linkedInProfileUrl, annualSales, noOfEmployee, website, portfolios, officePhotos, awardCertificates, introductionVideo) => {\n    let optionalInfo = clientRegistration.optionalInfo;\n    let obj = {\n      type: \"optionalInfo\",\n      value: { ...optionalInfo,\n        linkedInProfileUrl,\n        annualSales,\n        noOfEmployee,\n        website,\n        portfolio: portfolios && portfolios.length > 0 ? portfolios.map(item => ({\n          fileName: item.portfolioImage.split(\"/\")[item.portfolioImage.split(\"/\").length - 1].substr(item.portfolioImage.split(\"/\")[item.portfolioImage.split(\"/\").length - 1].length - 12),\n          portfolioImage: item.portfolioImage,\n          description: item.description\n        })) : clientRegistration.optionalInfo.portfolio,\n        officePhoto: officePhotos && officePhotos.length > 0 ? officePhotos.map(item => ({\n          fileName: item.split(\"/\")[item.split(\"/\").length - 1].substr(item.split(\"/\")[item.split(\"/\").length - 1].length - 12),\n          fileDetail: item\n        })) : clientRegistration.optionalInfo.officePhoto,\n        certificates: awardCertificates && awardCertificates.length > 0 ? awardCertificates.map(item => ({\n          fileName: item.split(\"/\")[item.split(\"/\").length - 1].substr(item.split(\"/\")[item.split(\"/\").length - 1].length - 12),\n          fileDetail: item\n        })) : clientRegistration.optionalInfo.certificates,\n        introductionVideo: introductionVideo ? {\n          fileName: introductionVideo.split(\"/\")[introductionVideo.split(\"/\").length - 1].substr(introductionVideo.split(\"/\")[introductionVideo.split(\"/\").length - 1].length - 12),\n          fileDetail: introductionVideo\n        } : \"\"\n      }\n    };\n    dispatch(updateClientRegisterValue(obj));\n  };\n\n  React.useEffect(() => {\n    var _props$location, _props$location$state, _JSON$parse, _JSON$parse$user;\n\n    if ((_props$location = props.location) === null || _props$location === void 0 ? void 0 : (_props$location$state = _props$location.state) === null || _props$location$state === void 0 ? void 0 : _props$location$state.phoneVerified) {\n      let obj = {\n        type: \"phoneVerified\",\n        value: true\n      };\n      dispatch(updateClientRegisterValue(obj));\n    }\n\n    getLocation();\n\n    if ((_JSON$parse = JSON.parse(localStorage.MY_AUTH)) === null || _JSON$parse === void 0 ? void 0 : (_JSON$parse$user = _JSON$parse.user) === null || _JSON$parse$user === void 0 ? void 0 : _JSON$parse$user.profileImage) {\n      var _JSON$parse2, _JSON$parse2$user;\n\n      handleUpdateClientRegistrationValue((_JSON$parse2 = JSON.parse(localStorage.MY_AUTH)) === null || _JSON$parse2 === void 0 ? void 0 : (_JSON$parse2$user = _JSON$parse2.user) === null || _JSON$parse2$user === void 0 ? void 0 : _JSON$parse2$user.profileImage, \"userProfileUrl\");\n    }\n  }, []);\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition => {\n        let longitude = showPosition.coords.longitude;\n        let latitude = showPosition.coords.latitude;\n        setCurrentLocation(`${latitude},${longitude}`);\n      });\n    } else {}\n  };\n\n  const bindCountry = async () => {\n    let array = [];\n    let result = await request(`${ENDPOINT[\"GeneralSettings\"]}?settingName=Countries`, getOptions({}));\n\n    if (result.success) {\n      if (result.result.data.length > 0) {\n        for (let index = 0; index < result.result.data[0].data.length; index++) {\n          const element = result.result.data[0].data[index];\n          array.push({\n            id: element.id,\n            name: element.name\n          });\n        } // setCountries(array);\n\n\n        const country = CountryList.find(cl => cl.code === lookUpData.shortCode);\n        handleUpdateClientRegistrationValue(country === null || country === void 0 ? void 0 : country.dial_code, \"countryCode\");\n        handleUpdateClientRegistrationValue(country === null || country === void 0 ? void 0 : country.name, \"country\");\n      } else {\n        alert(\"No Country\");\n      }\n    } else {\n      alert(\"No Country\");\n    }\n  };\n\n  const bindCities = async countryId => {\n    let array = [];\n    let result = await request(`${ENDPOINT[\"GeneralSettings\"]}?settingName=city_country_` + countryId, getOptions({}));\n\n    if (result.success) {\n      if (result.result.data.length > 0) {\n        for (let index = 0; index < result.result.data[0].data.length; index++) {\n          const element = result.result.data[0].data[index];\n          array.push({\n            id: element.id,\n            name: element.name\n          });\n        }\n\n        setCities(array);\n      } else {\n        alert(\"No City\");\n      }\n    } else {\n      alert(\"No City\");\n    }\n  };\n\n  const handleValidate = () => {\n    let formIsValid = true;\n    let errorMessage = {};\n\n    if (!clientRegistration.userProfileUrl) {\n      formIsValid = false;\n      errorMessage[\"userProfileUrl\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"198\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"User Photo is Required!\");\n    } else if (!clientRegistration.companyName) {\n      formIsValid = false;\n      errorMessage[\"companyName\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"Company name is Required!\");\n    } else if (!clientRegistration.firstName) {\n      formIsValid = false;\n      errorMessage[\"contactFirstName\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"Contact first name is Required!\");\n    } else if (!clientRegistration.lastName) {\n      formIsValid = false;\n      errorMessage[\"contactLastName\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"Contact last name is Required!\");\n    } else if (!clientRegistration.country) {\n      formIsValid = false;\n      errorMessage[\"country\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"Country is Required!\");\n    } else if (!clientRegistration.countryCode) {\n      formIsValid = false;\n      errorMessage[\"countryCode\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"country Code is Required!\");\n    } else if (!clientRegistration.phoneNo) {\n      formIsValid = false;\n      errorMessage[\"mobileNumber\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"Mobile number is Required!\");\n    } else if (!clientRegistration.phoneVerified) {\n      formIsValid = false;\n      errorMessage[\"mobileNumber\"] = \"Phone number verification Required\";\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"Phone number verification Required!\");\n    } else if (!clientRegistration.userTitle) {\n      formIsValid = false;\n      errorMessage[\"title\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"Title is Required!\");\n    } else if (!clientRegistration.businessType) {\n      formIsValid = false;\n      errorMessage[\"businessType\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"110\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"Business area is Required!\");\n    } else if (!clientRegistration.professionalOverview) {\n      formIsValid = false;\n      errorMessage[\"description\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"198\",\n        behavior: \"smooth\"\n      });\n      notifications.showWarning(\"Description is Required!\");\n    }\n\n    setErrorMessage(errorMessage);\n    return formIsValid;\n  };\n\n  const handleSubmit = async () => {\n    if (handleValidate()) {\n      var _clientRegistration$o, _clientRegistration$o2, _clientRegistration$o3, _clientRegistration$o4, _clientRegistration$o5, _clientRegistration$o6, _clientRegistration$o7, _clientRegistration$o8, _clientRegistration$o9;\n\n      const userData = JSON.parse(localStorage.getItem(\"MY_AUTH\"));\n      setLoading(true);\n      let params = {\n        clientId: props.clientId ? props.clientId : '',\n        userId: userData.user.userId,\n        emailId: userData.logindetails.emailId || userData.user.email,\n        companyName: clientRegistration.companyName,\n        firstName: clientRegistration.firstName,\n        lastName: clientRegistration.lastName,\n        country: clientRegistration.country,\n        phoneNo: clientRegistration.phoneNo,\n        userTitle: clientRegistration.userTitle,\n        professionalOverview: clientRegistration.professionalOverview,\n        userProfileUrl: clientRegistration.userProfileUrl,\n        website: clientRegistration.optionalInfo.website,\n        noOfEmployee: clientRegistration.optionalInfo.noOfEmployee,\n        annualSales: clientRegistration.optionalInfo.annualSales,\n        linkedInProfileUrl: clientRegistration.optionalInfo.linkedInProfileUrl,\n        addressInfo: {\n          addressId: lookUpData === null || lookUpData === void 0 ? void 0 : lookUpData.placeId,\n          addressInfoId: lookUpData === null || lookUpData === void 0 ? void 0 : lookUpData.placeId,\n          isMainAddress: true,\n          phoneNo: clientRegistration.phoneNo,\n          address: lookUpData === null || lookUpData === void 0 ? void 0 : lookUpData.address,\n          userCountry: lookUpData === null || lookUpData === void 0 ? void 0 : lookUpData.country,\n          userCountryCode: clientRegistration.countryCode,\n          userState: lookUpData.state,\n          userCity: lookUpData.city,\n          userPostalCode: \"\"\n        },\n        introductionVideo: (_clientRegistration$o = clientRegistration.optionalInfo) === null || _clientRegistration$o === void 0 ? void 0 : (_clientRegistration$o2 = _clientRegistration$o.introductionVideo) === null || _clientRegistration$o2 === void 0 ? void 0 : _clientRegistration$o2.fileDetail,\n        location: currentLocation,\n        awardCertificates: (clientRegistration === null || clientRegistration === void 0 ? void 0 : (_clientRegistration$o3 = clientRegistration.optionalInfo) === null || _clientRegistration$o3 === void 0 ? void 0 : _clientRegistration$o3.certificates[0].fileName) && (clientRegistration === null || clientRegistration === void 0 ? void 0 : (_clientRegistration$o4 = clientRegistration.optionalInfo) === null || _clientRegistration$o4 === void 0 ? void 0 : _clientRegistration$o4.certificates[0].fileDetail) ? clientRegistration === null || clientRegistration === void 0 ? void 0 : clientRegistration.optionalInfo.certificates.map(item => item.fileDetail) : [],\n        officePhotos: ((_clientRegistration$o5 = clientRegistration.optionalInfo) === null || _clientRegistration$o5 === void 0 ? void 0 : (_clientRegistration$o6 = _clientRegistration$o5.officePhoto[0]) === null || _clientRegistration$o6 === void 0 ? void 0 : _clientRegistration$o6.fileName) ? (_clientRegistration$o7 = clientRegistration.optionalInfo) === null || _clientRegistration$o7 === void 0 ? void 0 : _clientRegistration$o7.officePhoto.map(item => item.fileDetail) : [],\n        portfolios: (clientRegistration === null || clientRegistration === void 0 ? void 0 : (_clientRegistration$o8 = clientRegistration.optionalInfo) === null || _clientRegistration$o8 === void 0 ? void 0 : _clientRegistration$o8.portfolio[0].fileName) && (clientRegistration === null || clientRegistration === void 0 ? void 0 : (_clientRegistration$o9 = clientRegistration.optionalInfo) === null || _clientRegistration$o9 === void 0 ? void 0 : _clientRegistration$o9.portfolio[0].portfolioImage) ? clientRegistration === null || clientRegistration === void 0 ? void 0 : clientRegistration.optionalInfo.portfolio : [],\n        serviceScopes: [{\n          serviceScope: clientRegistration.businessType,\n          subServiceScope: []\n        }]\n      };\n\n      if (!props.clientId) {\n        let result = await request(ENDPOINT[\"CreateUserClient\"], postOptions(params));\n\n        if (result.success) {\n          notifications.showSuccess(\"Your information saved successfully !\");\n          localStorage.setItem(\"clientRegistrationInfo\", JSON.stringify({\n            step: \"ConfirmationStep\",\n            clientId: result.result\n          }));\n          setLoading(false);\n          props.handleNext(\"ConfirmationStep\", result.result);\n          window.scrollTo({\n            top: \"0\",\n            behavior: \"smooth\"\n          });\n        } else {\n          setLoading(false);\n          notifications.showError(result.message || \"Error while registering your account, Try again\");\n        }\n      } else {\n        let result = await request(ENDPOINT[\"UpdateUserClient\"], postOptions(params));\n\n        if (result.success) {\n          notifications.showSuccess(\"Your information updated successfully !\");\n          localStorage.setItem(\"clientRegistrationInfo\", JSON.stringify({\n            step: \"ConfirmationStep\",\n            clientId: result.result.clientId\n          }));\n          setLoading(false);\n          props.handleNext(\"ConfirmationStep\");\n          window.scrollTo({\n            top: \"0\",\n            behavior: \"smooth\"\n          });\n        } else {\n          setLoading(false);\n          notifications.showError(result.message || \"Error while update your account info, Try again\");\n        }\n      }\n    }\n  };\n\n  const handleOptionalInfo = (value, type) => {\n    let optionalInfo = clientRegistration.optionalInfo;\n\n    if (type === \"website\") {\n      let obj = {\n        type: \"optionalInfo\",\n        value: { ...optionalInfo,\n          website: value\n        }\n      };\n      dispatch(updateClientRegisterValue(obj));\n    }\n\n    if (type === \"noOfEmployee\") {\n      let obj = {\n        type: \"optionalInfo\",\n        value: { ...optionalInfo,\n          noOfEmployee: value\n        }\n      };\n      dispatch(updateClientRegisterValue(obj));\n    }\n\n    if (type === \"annualSales\") {\n      let obj = {\n        type: \"optionalInfo\",\n        value: { ...optionalInfo,\n          annualSales: value\n        }\n      };\n      dispatch(updateClientRegisterValue(obj));\n    }\n\n    if (type === \"linkedInProfileUrl\") {\n      let obj = {\n        type: \"optionalInfo\",\n        value: { ...optionalInfo,\n          linkedInProfileUrl: value\n        }\n      };\n      dispatch(updateClientRegisterValue(obj));\n    }\n  };\n\n  const handleAddMorePortfolio = () => {\n    var _clientRegistration$o10, _clientRegistration$o11;\n\n    if ((clientRegistration === null || clientRegistration === void 0 ? void 0 : (_clientRegistration$o10 = clientRegistration.optionalInfo) === null || _clientRegistration$o10 === void 0 ? void 0 : (_clientRegistration$o11 = _clientRegistration$o10.portfolio) === null || _clientRegistration$o11 === void 0 ? void 0 : _clientRegistration$o11.length) < 5) {\n      let optionalInfo = clientRegistration.optionalInfo;\n      let obj = {\n        type: \"optionalInfo\",\n        value: { ...optionalInfo,\n          portfolio: optionalInfo.portfolio.concat([{\n            description: \"\",\n            portfolioImageFile: {},\n            fileName: \"\"\n          }])\n        }\n      };\n      console.log(obj, \"optionalInfo.portfolio\");\n      dispatch(updateClientRegisterValue(obj));\n    }\n  };\n\n  const handleRemoveMorePortfolio = async index => {\n    var _clientRegistration$o12;\n\n    let newPortfolio = [...(clientRegistration === null || clientRegistration === void 0 ? void 0 : (_clientRegistration$o12 = clientRegistration.optionalInfo) === null || _clientRegistration$o12 === void 0 ? void 0 : _clientRegistration$o12.portfolio)];\n\n    if (newPortfolio[index].portfolioImage) {\n      await deleteImage(newPortfolio[index].portfolioImage);\n    }\n\n    newPortfolio.splice(index, 1);\n    let obj = {\n      type: \"optionalInfo\",\n      value: { ...clientRegistration.optionalInfo,\n        portfolio: newPortfolio\n      }\n    };\n    dispatch(updateClientRegisterValue(obj));\n  };\n\n  const handleRemoveMoreCertificate = async index => {\n    var _clientRegistration$o13;\n\n    let newCertificates = [...(clientRegistration === null || clientRegistration === void 0 ? void 0 : (_clientRegistration$o13 = clientRegistration.optionalInfo) === null || _clientRegistration$o13 === void 0 ? void 0 : _clientRegistration$o13.certificates)];\n\n    if (newCertificates[index].fileDetail) {\n      await deleteImage(newCertificates[index].fileDetail);\n    }\n\n    newCertificates.splice(index, 1);\n    let obj = {\n      type: \"optionalInfo\",\n      value: { ...clientRegistration.optionalInfo,\n        certificates: newCertificates\n      }\n    };\n    dispatch(updateClientRegisterValue(obj));\n  };\n\n  const handleAddMoreCertificate = () => {\n    var _clientRegistration$o14;\n\n    if ((clientRegistration === null || clientRegistration === void 0 ? void 0 : (_clientRegistration$o14 = clientRegistration.optionalInfo) === null || _clientRegistration$o14 === void 0 ? void 0 : _clientRegistration$o14.certificates.length) < 5) {\n      let optionalInfo = clientRegistration.optionalInfo;\n      let obj = {\n        type: \"optionalInfo\",\n        value: { ...optionalInfo,\n          certificates: [...optionalInfo.certificates, ...[{\n            fileName: \"\",\n            fileDetail: \"\"\n          }]]\n        }\n      };\n      dispatch(updateClientRegisterValue(obj));\n    }\n  };\n\n  const handleAddMoreOfficePhoto = () => {\n    var _clientRegistration$o15, _clientRegistration$o16;\n\n    if ((clientRegistration === null || clientRegistration === void 0 ? void 0 : (_clientRegistration$o15 = clientRegistration.optionalInfo) === null || _clientRegistration$o15 === void 0 ? void 0 : (_clientRegistration$o16 = _clientRegistration$o15.officePhoto) === null || _clientRegistration$o16 === void 0 ? void 0 : _clientRegistration$o16.length) < 5) {\n      let optionalInfo = clientRegistration.optionalInfo;\n      let obj = {\n        type: \"optionalInfo\",\n        value: { ...optionalInfo,\n          officePhoto: [...optionalInfo.officePhoto, ...[{\n            fileName: \"\",\n            fileDetail: \"\"\n          }]]\n        }\n      };\n      dispatch(updateClientRegisterValue(obj));\n    }\n  };\n\n  const handleRemoveMoreOfficePhoto = async index => {\n    var _clientRegistration$o17;\n\n    let newOfficePhoto = [...(clientRegistration === null || clientRegistration === void 0 ? void 0 : (_clientRegistration$o17 = clientRegistration.optionalInfo) === null || _clientRegistration$o17 === void 0 ? void 0 : _clientRegistration$o17.officePhoto)];\n\n    if (newOfficePhoto[index].fileDetail) {\n      await deleteImage(newOfficePhoto[index].fileDetail);\n    }\n\n    newOfficePhoto.splice(index, 1);\n    let obj = {\n      type: \"optionalInfo\",\n      value: { ...clientRegistration.optionalInfo,\n        officePhoto: newOfficePhoto\n      }\n    };\n    dispatch(updateClientRegisterValue(obj));\n  };\n\n  const handleUpdatePortfolioDes = (value, index) => {\n    var _clientRegistration$o18;\n\n    let newPortfolio = [...(clientRegistration === null || clientRegistration === void 0 ? void 0 : (_clientRegistration$o18 = clientRegistration.optionalInfo) === null || _clientRegistration$o18 === void 0 ? void 0 : _clientRegistration$o18.portfolio)];\n    let objPor = {\n      fileName: newPortfolio[index].fileName,\n      portfolioImageFile: newPortfolio[index].portfolioImageFile,\n      description: value\n    };\n    newPortfolio.splice(index, 1, objPor);\n    let obj = {\n      type: \"optionalInfo\",\n      value: { ...clientRegistration.optionalInfo,\n        portfolio: newPortfolio\n      }\n    };\n    dispatch(updateClientRegisterValue(obj));\n  };\n\n  const handlePortfolioUpdate = async (file, index, name) => {\n    if (file || name) {\n      var _clientRegistration$o19;\n\n      let newPortfolio = [...(clientRegistration === null || clientRegistration === void 0 ? void 0 : (_clientRegistration$o19 = clientRegistration.optionalInfo) === null || _clientRegistration$o19 === void 0 ? void 0 : _clientRegistration$o19.portfolio)];\n      setUploading(true);\n      let response = await uploadImage(file, \"portfolio\");\n\n      if (response.success) {\n        setUploading(false);\n        let objPor = {\n          description: newPortfolio[index].description,\n          portfolioImage: response.result.s3Key,\n          fileName: name\n        };\n        newPortfolio.splice(index, 1, objPor);\n        let obj = {\n          type: \"optionalInfo\",\n          value: { ...clientRegistration.optionalInfo,\n            portfolio: newPortfolio\n          }\n        };\n        dispatch(updateClientRegisterValue(obj));\n      } else {\n        notifications.showError(response || \"Error uploading image.\");\n        setUploading(false);\n      }\n    }\n  };\n\n  const handleAddCertificatePhoto = async (file, index, name) => {\n    if (file || name) {\n      var _clientRegistration$o20;\n\n      let newCertificates = [...(clientRegistration === null || clientRegistration === void 0 ? void 0 : (_clientRegistration$o20 = clientRegistration.optionalInfo) === null || _clientRegistration$o20 === void 0 ? void 0 : _clientRegistration$o20.certificates)];\n      setUploading(true);\n      let response = await uploadImage(file, \"portfolio\");\n\n      if (response.success) {\n        setUploading(false);\n        let objPor = {\n          fileDetail: response.result.s3Key,\n          fileName: name\n        };\n        newCertificates.splice(index, 1, objPor);\n        let obj = {\n          type: \"optionalInfo\",\n          value: { ...clientRegistration.optionalInfo,\n            certificates: newCertificates\n          }\n        };\n        dispatch(updateClientRegisterValue(obj));\n      } else {\n        notifications.showError(response || \"Error uploading image.\");\n        setUploading(false);\n      }\n    }\n  };\n\n  const handleOfficePhotoUpdate = async (file, index, name) => {\n    if (file || name) {\n      var _clientRegistration$o21;\n\n      let newOfficePhoto = [...(clientRegistration === null || clientRegistration === void 0 ? void 0 : (_clientRegistration$o21 = clientRegistration.optionalInfo) === null || _clientRegistration$o21 === void 0 ? void 0 : _clientRegistration$o21.officePhoto)];\n      setUploading(true);\n      let response = await uploadImage(file, \"photos\");\n\n      if (response.success) {\n        setUploading(false);\n        let objPor = {\n          fileDetail: response.result.s3Key,\n          fileName: name\n        };\n        newOfficePhoto.splice(index, 1, objPor);\n        let obj = {\n          type: \"optionalInfo\",\n          value: { ...clientRegistration.optionalInfo,\n            officePhoto: newOfficePhoto\n          }\n        };\n        dispatch(updateClientRegisterValue(obj));\n      } else {\n        notifications.showError(response || \"Error uploading image.\");\n        setUploading(false);\n      }\n    }\n  };\n\n  const handleIntroductionVideo = async (file, name) => {\n    setUploading(true);\n    let response = await uploadImage(file, \"profilevideo\");\n\n    if (response) {\n      setUploading(false);\n      let introductionVideo = {\n        fileName: name,\n        fileDetail: response.result.s3Key\n      };\n      let obj = {\n        type: \"optionalInfo\",\n        value: { ...clientRegistration.optionalInfo,\n          introductionVideo: introductionVideo\n        }\n      };\n      dispatch(updateClientRegisterValue(obj));\n    } else {\n      notifications.showError(response || \"Error uploading video.\");\n      setUploading(false);\n    }\n  };\n\n  const handleUpdateClientRegistrationValue = (value, type) => {\n    let obj = {\n      type: type,\n      value: value\n    };\n    dispatch(updateClientRegisterValue(obj));\n  };\n\n  async function createFile(url, fileName) {\n    let response = await fetch(url);\n    let data = await response.blob();\n    let metadata = {\n      type: \"image/jpeg\"\n    };\n    let file = new File([data], fileName, metadata);\n    return file;\n  }\n\n  const handleUploadImage = async file => {\n    setFileUploading({ ...fileUploading,\n      userProfileUrl: true\n    });\n    let response = await uploadImage(file, \"profileimage\");\n\n    if (response.success) {\n      handleUpdateClientRegistrationValue(response.result.s3Key, \"userProfileUrl\");\n      setFileUploading({ ...fileUploading,\n        userProfileUrl: false\n      });\n    } else {\n      notifications.showError(response || \"Error uploading image.\");\n      setFileUploading({ ...fileUploading,\n        userProfileUrl: false\n      });\n    }\n  };\n\n  const handleDeleteImage = async key => {\n    if (key.slice(0, 5) != \"https\") {\n      await deleteImage(key);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Skeleton, {\n    count: 10,\n    isSkeletonLoading: isSkeletonLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    hidden: isSkeletonLoading,\n    className: \"card_sec company-register-page post_form\",\n    style: {\n      padding: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-profile-pic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 17\n    }\n  }, clientRegistration.userProfileUrl ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      cursor: \"pointer\"\n    },\n    src: getProfileImage(clientRegistration === null || clientRegistration === void 0 ? void 0 : clientRegistration.userProfileUrl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 23\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => {\n      handleDeleteImage(clientRegistration === null || clientRegistration === void 0 ? void 0 : clientRegistration.userProfileUrl);\n      handleUpdateClientRegistrationValue(\"\", \"userProfileUrl\");\n    },\n    className: \"trash-bin-icon-for-image-change\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"upload-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 23\n    }\n  }, languageType.USER_PHOTO), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"user-photo\",\n    id: \"upload-photo\",\n    accept: \"jpg jpeg png PNG gif\",\n    onChange: e => {\n      let errorMessage = {};\n      let size = e.target.files[0] ? e.target.files[0].size : 0;\n\n      if (size < 1048576) {\n        handleUploadImage(e.target.files[0]);\n        setErrorMessage({ ...errorMessage,\n          userProfileUrl: null\n        });\n      } else {\n        notifications.showWarning(\"Please select a file size of less than 1 MB.\");\n      }\n\n      setErrorMessage({ ...errorMessage,\n        userProfileUrl: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 23\n    }\n  }))), fileUploading.userProfileUrl && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 19\n    }\n  }, \"Uploading \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-spinner fa-spin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 879,\n      columnNumber: 31\n    }\n  })), errorMessage.userProfileUrl && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 19\n    }\n  }, errorMessage.userProfileUrl)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"company-name\",\n    class: \"col-sm-4 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-label-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: 32,\n    src: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/company_chair.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 23\n    }\n  })), languageType.COMPANY_NAME), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    class: \"form-control \",\n    id: \"company-name\",\n    value: clientRegistration === null || clientRegistration === void 0 ? void 0 : clientRegistration.companyName,\n    name: \"company-name\",\n    placeholder: languageType.COMPANY_NAME,\n    onChange: e => {\n      handleUpdateClientRegistrationValue(e.currentTarget.value, \"companyName\");\n      setErrorMessage({ ...errorMessage,\n        companyName: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 21\n    }\n  }), errorMessage.companyName && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 23\n    }\n  }, errorMessage.companyName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 924,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"first-name\",\n    class: \"col-sm-4 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-label-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: 20,\n    src: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/add_contact_person.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 23\n    }\n  })), languageType.CONTACT_PERSON), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 936,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 937,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6 col-md-6 pr-lg-1 mb-2 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: languageType.FIRST_NAME,\n    className: \"form-control \",\n    id: \"first-name\",\n    name: \"first-name\",\n    value: clientRegistration === null || clientRegistration === void 0 ? void 0 : clientRegistration.firstName,\n    onChange: e => {\n      handleUpdateClientRegistrationValue(e.currentTarget.value, \"firstName\");\n      setErrorMessage({ ...errorMessage,\n        contactFirstName: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 25\n    }\n  }), errorMessage.contactFirstName && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 27\n    }\n  }, errorMessage.contactFirstName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6 col-md-6 pl-lg-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 963,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: languageType.LAST_NAME,\n    className: \"form-control \",\n    id: \"last-name\",\n    name: \"last-name\",\n    value: clientRegistration === null || clientRegistration === void 0 ? void 0 : clientRegistration.lastName,\n    onChange: e => {\n      handleUpdateClientRegistrationValue(e.currentTarget.value, \"lastName\");\n      setErrorMessage({ ...errorMessage,\n        contactLastName: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 25\n    }\n  }), errorMessage.contactLastName && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 27\n    }\n  }, errorMessage.contactLastName))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"country\",\n    class: \"col-sm-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-label-icon text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: 20,\n    src: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/call_phone.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 996,\n      columnNumber: 19\n    }\n  })), languageType.MOBILE_NO), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-sm-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1006,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4 mb-2 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DropdownList, {\n    id: `CountryList}`,\n    gray_bg: true,\n    style: {\n      background: \"#f3f2f2\"\n    },\n    name: `CountryList`,\n    enableAutoComplete: true,\n    enableAutoCompleteSearch: true,\n    placeHolder: \"Country\",\n    value: clientRegistration === null || clientRegistration === void 0 ? void 0 : clientRegistration.country,\n    selectItem: value => {\n      handleUpdateClientRegistrationValue(value, \"country\");\n      setErrorMessage({ ...errorMessage,\n        country: null\n      });\n    },\n    items: CountryList.map(country => ({\n      text: country.name,\n      value: country.name\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008,\n      columnNumber: 21\n    }\n  }), errorMessage[\"country\"] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1027,\n      columnNumber: 23\n    }\n  }, errorMessage[\"country\"])), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-2 mb-2 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"+82\",\n    className: \"form-control gray_bg  readonly\",\n    id: \"country-code\",\n    value: clientRegistration === null || clientRegistration === void 0 ? void 0 : clientRegistration.countryCode,\n    onChange: e => {\n      handleUpdateClientRegistrationValue(e.target.value, \"countryCode\");\n      setErrorMessage({ ...errorMessage,\n        countryCode: null\n      });\n    },\n    name: \"country-code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1053,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    class: \"form-control custom-form-control\",\n    name: \"mobile-number\",\n    id: \"mobile-number\",\n    placeholder: languageType.MOBILE_NO,\n    value: clientRegistration === null || clientRegistration === void 0 ? void 0 : clientRegistration.phoneNo,\n    onChange: e => {\n      handleUpdateClientRegistrationValue(e.target.value, \"phoneNo\");\n      setErrorMessage({ ...errorMessage,\n        mobileNumber: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1054,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1072,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      var _props$location2, _props$location2$stat;\n\n      if ((_props$location2 = props.location) === null || _props$location2 === void 0 ? void 0 : (_props$location2$stat = _props$location2.state) === null || _props$location2$stat === void 0 ? void 0 : _props$location2$stat.phoneVerified) {} else {\n        props.history.push({\n          pathname: \"/mobile-verify\",\n          state: {\n            mobileNumber: clientRegistration === null || clientRegistration === void 0 ? void 0 : clientRegistration.phoneNo,\n            path: \"client-registration\",\n            country: clientRegistration.country,\n            countryCode: clientRegistration.countryCode\n          }\n        });\n      }\n    },\n    class: \"btn btn-dark\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1073,\n      columnNumber: 25\n    }\n  }, ((_props$location3 = props.location) === null || _props$location3 === void 0 ? void 0 : (_props$location3$stat = _props$location3.state) === null || _props$location3$stat === void 0 ? void 0 : _props$location3$stat.phoneVerified) ? \"Verifies\" : \"Verify\"))), errorMessage[\"mobileNumber\"] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1098,\n      columnNumber: 23\n    }\n  }, errorMessage[\"mobileNumber\"]))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"business-category\",\n    class: \"col-sm-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-label-icon text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: 25,\n    src: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/briefcase.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1109,\n      columnNumber: 19\n    }\n  })), languageType.BUSINESS_SCOPE), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-sm-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1120,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DropdownList, {\n    id: `business-category}`,\n    name: `business-category`,\n    enableAutoCompleteSearch: true,\n    enableAutoComplete: true,\n    placeHolder: languageType.BUSINESS_SCOPE,\n    value: clientRegistration === null || clientRegistration === void 0 ? void 0 : clientRegistration.businessType,\n    selectItem: value => {\n      handleUpdateClientRegistrationValue(value, \"businessType\");\n      setSubScope(selectSubScopes(value, languageReducer.projectScopes));\n      setErrorMessage({ ...errorMessage,\n        businessCategory: null\n      });\n    },\n    items: languageReducer.projectScopes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1121,\n      columnNumber: 21\n    }\n  }), errorMessage.businessType && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1144,\n      columnNumber: 23\n    }\n  }, errorMessage.businessType))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1150,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"org-title\",\n    class: \"col-sm-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-label-icon text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: 22,\n    src: \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/favorite_page.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1156,\n      columnNumber: 19\n    }\n  })), languageType.TITLE_TEXT_PROFILE), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-sm-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: languageType.DESCRIBE_YOURSELF_ORGANIZATION,\n    className: \"form-control\",\n    id: \"org-title\",\n    value: clientRegistration.userTitle,\n    name: \"org-title\",\n    onChange: e => {\n      handleUpdateClientRegistrationValue(e.target.value, \"userTitle\");\n      setErrorMessage({ ...errorMessage,\n        title: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1166,\n      columnNumber: 17\n    }\n  }), errorMessage.title && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1182,\n      columnNumber: 19\n    }\n  }, errorMessage.title), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: languageType.WRITE_INTRO_YOU_ORGANIZATION,\n    className: \"form-control mt-3\",\n    id: \"org-introduction\",\n    rows: \"5\",\n    name: \"org-introduction\",\n    value: clientRegistration === null || clientRegistration === void 0 ? void 0 : clientRegistration.professionalOverview,\n    onChange: e => {\n      handleUpdateClientRegistrationValue(e.target.value, \"professionalOverview\");\n      setErrorMessage({ ...errorMessage,\n        description: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1184,\n      columnNumber: 17\n    }\n  }), errorMessage.description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 19\n    }\n  }, errorMessage.description))), /*#__PURE__*/React.createElement(OptionalInfo, {\n    optionalInfo: clientRegistration === null || clientRegistration === void 0 ? void 0 : clientRegistration.optionalInfo,\n    handleOptionalInfo: handleOptionalInfo,\n    handleAddMorePortfolio: handleAddMorePortfolio,\n    handleRemoveMorePortfolio: handleRemoveMorePortfolio,\n    handleRemoveMoreCertificate: handleRemoveMoreCertificate,\n    handleAddMoreCertificate: handleAddMoreCertificate,\n    handleAddMoreOfficePhoto: handleAddMoreOfficePhoto,\n    handleRemoveMoreOfficePhoto: handleRemoveMoreOfficePhoto,\n    handleUpdatePortfolioDes: handleUpdatePortfolioDes,\n    handlePortfolioUpdate: handlePortfolioUpdate,\n    handleOfficePhotoUpdate: handleOfficePhotoUpdate,\n    handleAddCertificatePhoto: handleAddCertificatePhoto,\n    handleIntroductionVideo: handleIntroductionVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-right mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    className: \"btn btn-dark px-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 15\n    }\n  }, languageType.SAVE, \" \", loading ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-spinner fa-spin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1222,\n      columnNumber: 28\n    }\n  }) : \"\"))))), /*#__PURE__*/React.createElement(FileUploadLoader, {\n    title: \" Uploading new file...\",\n    show: uploading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1228,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ClientRegistrationStep;","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/container/client/clientRegistration/clientRegistration.jsx"],"names":["React","useState","useEffect","Heading","DropdownList","CountryList","Label","isNumeric","isValidString","OptionalInfo","FileUploadLoader","request","selectSubScopes","notifications","ENDPOINT","updateClientRegisterValue","useSelector","useDispatch","getOptions","postMultipartFile","postOptions","postMultipartFileNew","stockMarketsList","Skeleton","uploadImage","deleteImage","uploadVideo","getProfileImage","ClientRegistrationStep","props","errorMessage","setErrorMessage","subScope","setSubScope","uploading","setUploading","isSkeletonLoading","setIsSkeletonLoading","currentLocation","setCurrentLocation","dispatch","fileUploading","setFileUploading","userProfileUrl","cities","setCities","workingConditions","setWorkingConditions","wishedWorkingConditionCountry","wishedWorkingConditionCity","wishedWorkingConditionAreaOfWork","loading","setLoading","languageType","state","languageReducer","lookUpData","lookUp","clientRegistration","getClientDetail","clientId","country","handleUpdateClientRegistrationValue","shortCode","find","item","name","dial_code","result","success","clientDetail","firstName","lastName","companyName","phoneNo","userTitle","professionalOverview","serviceScopes","serviceScope","projectScopes","handleOptionalInfoFromResponse","linkedInProfileUrl","annualSales","noOfEmployee","website","portfolios","officePhotos","awardCertificates","introductionVideo","optionalInfo","obj","type","value","portfolio","length","map","fileName","portfolioImage","split","substr","description","officePhoto","fileDetail","certificates","location","phoneVerified","getLocation","JSON","parse","localStorage","MY_AUTH","user","profileImage","navigator","geolocation","getCurrentPosition","showPosition","longitude","coords","latitude","bindCountry","array","data","index","element","push","id","cl","code","alert","bindCities","countryId","handleValidate","formIsValid","REQUIRED_MESSAGE","window","scrollTo","top","behavior","showWarning","countryCode","businessType","handleSubmit","userData","getItem","params","userId","emailId","logindetails","email","addressInfo","addressId","placeId","addressInfoId","isMainAddress","address","userCountry","userCountryCode","userState","userCity","city","userPostalCode","subServiceScope","showSuccess","setItem","stringify","step","handleNext","showError","message","handleOptionalInfo","handleAddMorePortfolio","concat","portfolioImageFile","console","log","handleRemoveMorePortfolio","newPortfolio","splice","handleRemoveMoreCertificate","newCertificates","handleAddMoreCertificate","handleAddMoreOfficePhoto","handleRemoveMoreOfficePhoto","newOfficePhoto","handleUpdatePortfolioDes","objPor","handlePortfolioUpdate","file","response","s3Key","handleAddCertificatePhoto","handleOfficePhotoUpdate","handleIntroductionVideo","createFile","url","fetch","blob","metadata","File","handleUploadImage","handleDeleteImage","key","slice","padding","cursor","USER_PHOTO","e","size","target","files","COMPANY_NAME","currentTarget","CONTACT_PERSON","FIRST_NAME","contactFirstName","LAST_NAME","contactLastName","MOBILE_NO","background","text","mobileNumber","history","pathname","path","BUSINESS_SCOPE","businessCategory","TITLE_TEXT_PROFILE","DESCRIBE_YOURSELF_ORGANIZATION","title","WRITE_INTRO_YOU_ORGANIZATION","SAVE"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Heading from \"../../../components/freelancerCreation/heading\";\nimport DropdownList from \"../../../components/dropdowns/dropdownList\";\nimport { CountryList } from \"../../../utils/countrylist\";\nimport Label from \"../../../components/postProject/label\";\nimport { isNumeric, isValidString } from \"../../../utils/validationConfig\";\nimport OptionalInfo from \"../../../components/registration/optionalInfo\";\nimport FileUploadLoader from \"../../../components/loader/fileUpload\";\nimport request from \"../../../utils/request\";\nimport { selectSubScopes } from \"../../../utils/helpers\";\nimport notifications from \"../../../utils/notifications\";\nimport { ENDPOINT } from \"../../../utils/endpoint\";\nimport { updateClientRegisterValue } from \"../../../store/action/Client/registerClient\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getOptions,\n  postMultipartFile,\n  postOptions,\n  postMultipartFileNew,\n} from \"../../../utils/httpConfig\";\nimport { stockMarketsList } from \"../../../utils/stockMarkets\";\nimport Skeleton from \"../../../components/skeleton/skeleton\";\nimport { uploadImage, deleteImage } from \"../../../services/uploadImages\";\nimport { uploadVideo } from \"../../../services/uploadVideo\";\nimport { getProfileImage } from \"../../../utils/getProfileUrl\";\n\nimport \"./clientRegistration.scss\";\n\nfunction ClientRegistrationStep(props) {\n  const [errorMessage, setErrorMessage] = useState({});\n  const [subScope, setSubScope] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [isSkeletonLoading, setIsSkeletonLoading] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const [fileUploading, setFileUploading] = useState({\n    userProfileUrl: false,\n  });\n\n  const [cities, setCities] = useState([]);\n  const [workingConditions, setWorkingConditions] = useState({\n    wishedWorkingConditionCountry: \"\",\n    wishedWorkingConditionCity: \"\",\n    wishedWorkingConditionAreaOfWork: \"\",\n  });\n  const [loading, setLoading] = useState(false);\n\n  const languageType = useSelector(\n    (state) => state.languageReducer.languageType\n  );\n  const languageReducer = useSelector((state) => state.languageReducer);\n  const lookUpData = useSelector((state) => state.lookUp.lookUpData);\n  const clientRegistration = useSelector((state) => state.clientRegistration);\n\n  useEffect(() => {\n    getClientDetail();\n  }, [props.clientId]);\n\n  // set default country and country code by location\n  React.useEffect(() => {\n    if (lookUpData?.country) {\n      handleUpdateClientRegistrationValue(lookUpData?.country, \"country\");\n      if (lookUpData?.shortCode) {\n        let shortCode = CountryList.find(\n          (item) => item.name === lookUpData?.country\n        );\n        if (shortCode) {\n          handleUpdateClientRegistrationValue(\n            shortCode.dial_code,\n            \"countryCode\"\n          );\n        }\n      }\n    }\n  }, [lookUpData]);\n\n  const getClientDetail = async () => {\n    if (props.clientId) {\n      setIsSkeletonLoading(true);\n      let result = await request(\n        `${ENDPOINT[\"GetUserClient\"]}?clientId=${props.clientId}`,\n        getOptions()\n      );\n      if (result.success) {\n        let clientDetail = result.result;\n        setIsSkeletonLoading(false);\n        handleUpdateClientRegistrationValue(\n          clientDetail.userProfileUrl,\n          \"userProfileUrl\"\n        );\n        handleUpdateClientRegistrationValue(\n          clientDetail.firstName,\n          \"firstName\"\n        );\n        handleUpdateClientRegistrationValue(clientDetail.lastName, \"lastName\");\n        handleUpdateClientRegistrationValue(\n          clientDetail.companyName,\n          \"companyName\"\n        );\n        handleUpdateClientRegistrationValue(clientDetail.phoneNo, \"phoneNo\");\n        handleUpdateClientRegistrationValue(\n          clientDetail.userTitle,\n          \"userTitle\"\n        );\n        handleUpdateClientRegistrationValue(\n          clientDetail.professionalOverview,\n          \"professionalOverview\"\n        );\n        handleUpdateClientRegistrationValue(\n          clientDetail.serviceScopes &&\n            clientDetail.serviceScopes[0]?.serviceScope,\n          \"businessType\"\n        );\n        setSubScope(\n          selectSubScopes(\n            clientDetail.serviceScopes &&\n              clientDetail.serviceScopes[0]?.serviceScope,\n            languageReducer.projectScopes\n          )\n        );\n        handleOptionalInfoFromResponse(\n          clientDetail.linkedInProfileUrl,\n          clientDetail.annualSales,\n          clientDetail.noOfEmployee,\n          clientDetail.website || \"\",\n          clientDetail.portfolios,\n          clientDetail.officePhotos,\n          clientDetail.awardCertificates,\n          clientDetail.introductionVideo\n        );\n      } else {\n        setIsSkeletonLoading(false);\n      }\n    }\n  };\n\n  const handleOptionalInfoFromResponse = (\n    linkedInProfileUrl,\n    annualSales,\n    noOfEmployee,\n    website,\n    portfolios,\n    officePhotos,\n    awardCertificates,\n    introductionVideo\n  ) => {\n    let optionalInfo = clientRegistration.optionalInfo;\n    let obj = {\n      type: \"optionalInfo\",\n      value: {\n        ...optionalInfo,\n        linkedInProfileUrl,\n        annualSales,\n        noOfEmployee,\n        website,\n        portfolio:\n          portfolios && portfolios.length > 0\n            ? portfolios.map((item) => ({\n                fileName: item.portfolioImage\n                  .split(\"/\")\n                  [item.portfolioImage.split(\"/\").length - 1].substr(\n                    item.portfolioImage.split(\"/\")[\n                      item.portfolioImage.split(\"/\").length - 1\n                    ].length - 12\n                  ),\n                portfolioImage: item.portfolioImage,\n                description: item.description,\n              }))\n            : clientRegistration.optionalInfo.portfolio,\n        officePhoto:\n          officePhotos && officePhotos.length > 0\n            ? officePhotos.map((item) => ({\n                fileName: item\n                  .split(\"/\")\n                  [item.split(\"/\").length - 1].substr(\n                    item.split(\"/\")[item.split(\"/\").length - 1].length - 12\n                  ),\n                fileDetail: item,\n              }))\n            : clientRegistration.optionalInfo.officePhoto,\n        certificates:\n          awardCertificates && awardCertificates.length > 0\n            ? awardCertificates.map((item) => ({\n                fileName: item\n                  .split(\"/\")\n                  [item.split(\"/\").length - 1].substr(\n                    item.split(\"/\")[item.split(\"/\").length - 1].length - 12\n                  ),\n                fileDetail: item,\n              }))\n            : clientRegistration.optionalInfo.certificates,\n        introductionVideo: introductionVideo\n          ? {\n              fileName: introductionVideo\n                .split(\"/\")\n                [introductionVideo.split(\"/\").length - 1].substr(\n                  introductionVideo.split(\"/\")[\n                    introductionVideo.split(\"/\").length - 1\n                  ].length - 12\n                ),\n              fileDetail: introductionVideo,\n            }\n          : \"\",\n      },\n    };\n\n    dispatch(updateClientRegisterValue(obj));\n  };\n\n  React.useEffect(() => {\n    if (props.location?.state?.phoneVerified) {\n      let obj = {\n        type: \"phoneVerified\",\n        value: true,\n      };\n      dispatch(updateClientRegisterValue(obj));\n    }\n    getLocation();\n    if (JSON.parse(localStorage.MY_AUTH)?.user?.profileImage) {\n      handleUpdateClientRegistrationValue(\n        JSON.parse(localStorage.MY_AUTH)?.user?.profileImage,\n        \"userProfileUrl\"\n      );\n    }\n  }, []);\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((showPosition) => {\n        let longitude = showPosition.coords.longitude;\n        let latitude = showPosition.coords.latitude;\n        setCurrentLocation(`${latitude},${longitude}`);\n      });\n    } else {\n    }\n  };\n\n  const bindCountry = async () => {\n    let array = [];\n    let result = await request(\n      `${ENDPOINT[\"GeneralSettings\"]}?settingName=Countries`,\n      getOptions({})\n    );\n    if (result.success) {\n      if (result.result.data.length > 0) {\n        for (\n          let index = 0;\n          index < result.result.data[0].data.length;\n          index++\n        ) {\n          const element = result.result.data[0].data[index];\n          array.push({\n            id: element.id,\n            name: element.name,\n          });\n        }\n\n        // setCountries(array);\n        const country = CountryList.find(\n          (cl) => cl.code === lookUpData.shortCode\n        );\n        handleUpdateClientRegistrationValue(country?.dial_code, \"countryCode\");\n        handleUpdateClientRegistrationValue(country?.name, \"country\");\n      } else {\n        alert(\"No Country\");\n      }\n    } else {\n      alert(\"No Country\");\n    }\n  };\n  const bindCities = async (countryId) => {\n    let array = [];\n    let result = await request(\n      `${ENDPOINT[\"GeneralSettings\"]}?settingName=city_country_` + countryId,\n      getOptions({})\n    );\n    if (result.success) {\n      if (result.result.data.length > 0) {\n        for (\n          let index = 0;\n          index < result.result.data[0].data.length;\n          index++\n        ) {\n          const element = result.result.data[0].data[index];\n          array.push({\n            id: element.id,\n            name: element.name,\n          });\n        }\n        setCities(array);\n      } else {\n        alert(\"No City\");\n      }\n    } else {\n      alert(\"No City\");\n    }\n  };\n\n  const handleValidate = () => {\n    let formIsValid = true;\n    let errorMessage = {};\n    if (!clientRegistration.userProfileUrl) {\n      formIsValid = false;\n      errorMessage[\"userProfileUrl\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"198\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"User Photo is Required!\");\n    } else if (!clientRegistration.companyName) {\n      formIsValid = false;\n      errorMessage[\"companyName\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"Company name is Required!\");\n    } else if (!clientRegistration.firstName) {\n      formIsValid = false;\n      errorMessage[\"contactFirstName\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"Contact first name is Required!\");\n    } else if (!clientRegistration.lastName) {\n      formIsValid = false;\n      errorMessage[\"contactLastName\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"Contact last name is Required!\");\n    } else if (!clientRegistration.country) {\n      formIsValid = false;\n      errorMessage[\"country\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"Country is Required!\");\n    } else if (!clientRegistration.countryCode) {\n      formIsValid = false;\n      errorMessage[\"countryCode\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"country Code is Required!\");\n    } else if (!clientRegistration.phoneNo) {\n      formIsValid = false;\n      errorMessage[\"mobileNumber\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"Mobile number is Required!\");\n    } else if (!clientRegistration.phoneVerified) {\n      formIsValid = false;\n      errorMessage[\"mobileNumber\"] = \"Phone number verification Required\";\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"Phone number verification Required!\");\n    }  else if (!clientRegistration.userTitle) {\n      formIsValid = false;\n      errorMessage[\"title\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"100\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"Title is Required!\");\n    } else if (!clientRegistration.businessType) {\n      formIsValid = false;\n      errorMessage[\"businessType\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"110\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"Business area is Required!\");\n    } else if (!clientRegistration.professionalOverview) {\n      formIsValid = false;\n      errorMessage[\"description\"] = languageType.REQUIRED_MESSAGE;\n      window.scrollTo({\n        top: \"198\",\n        behavior: \"smooth\",\n      });\n      notifications.showWarning(\"Description is Required!\");\n    }\n    setErrorMessage(errorMessage);\n    return formIsValid;\n  };\n\n  const handleSubmit = async () => {\n    if (handleValidate()) {\n      const userData = JSON.parse(localStorage.getItem(\"MY_AUTH\"));\n      setLoading(true);\n      let params = {\n        clientId: props.clientId?props.clientId:'',\n        userId: userData.user.userId,\n        emailId: userData.logindetails.emailId || userData.user.email,\n        companyName: clientRegistration.companyName,\n        firstName: clientRegistration.firstName,\n        lastName: clientRegistration.lastName,\n        country: clientRegistration.country,\n        phoneNo: clientRegistration.phoneNo,\n        userTitle: clientRegistration.userTitle,\n        professionalOverview: clientRegistration.professionalOverview,\n        userProfileUrl: clientRegistration.userProfileUrl,\n        website: clientRegistration.optionalInfo.website,\n        noOfEmployee: clientRegistration.optionalInfo.noOfEmployee,\n        annualSales: clientRegistration.optionalInfo.annualSales,\n        linkedInProfileUrl: clientRegistration.optionalInfo.linkedInProfileUrl,\n        addressInfo: {\n          addressId: lookUpData?.placeId,\n          addressInfoId: lookUpData?.placeId,\n          isMainAddress: true,\n          phoneNo: clientRegistration.phoneNo,\n          address: lookUpData?.address,\n          userCountry: lookUpData?.country,\n          userCountryCode: clientRegistration.countryCode,\n          userState: lookUpData.state,\n          userCity: lookUpData.city,\n          userPostalCode: \"\",\n        },\n        introductionVideo:\n          clientRegistration.optionalInfo?.introductionVideo?.fileDetail,\n        location: currentLocation,\n        awardCertificates:\n          clientRegistration?.optionalInfo?.certificates[0].fileName &&\n          clientRegistration?.optionalInfo?.certificates[0].fileDetail\n            ? clientRegistration?.optionalInfo.certificates.map(\n                (item) => item.fileDetail\n              )\n            : [],\n        officePhotos: clientRegistration.optionalInfo?.officePhoto[0]?.fileName\n          ? clientRegistration.optionalInfo?.officePhoto.map(\n              (item) => item.fileDetail\n            )\n          : [],\n        portfolios:\n          clientRegistration?.optionalInfo?.portfolio[0].fileName &&\n          clientRegistration?.optionalInfo?.portfolio[0].portfolioImage\n            ? clientRegistration?.optionalInfo.portfolio\n            : [],\n        serviceScopes: [\n          {\n            serviceScope: clientRegistration.businessType,\n            subServiceScope: [],\n          },\n        ],\n      };\n\n      if (!props.clientId) {\n        let result = await request(\n          ENDPOINT[\"CreateUserClient\"],\n          postOptions(params)\n        );\n        if (result.success) {\n          notifications.showSuccess(\"Your information saved successfully !\");\n          localStorage.setItem(\n            \"clientRegistrationInfo\",\n            JSON.stringify({\n              step: \"ConfirmationStep\",\n              clientId: result.result,\n            })\n          );\n          setLoading(false);\n          props.handleNext(\"ConfirmationStep\", result.result);\n          window.scrollTo({\n            top: \"0\",\n            behavior: \"smooth\",\n          });\n        } else {\n          setLoading(false);\n          notifications.showError(\n            result.message || \"Error while registering your account, Try again\"\n          );\n        }\n      } else {\n        let result = await request(\n          ENDPOINT[\"UpdateUserClient\"],\n          postOptions(params)\n        );\n        if (result.success) {\n          notifications.showSuccess(\"Your information updated successfully !\");\n          localStorage.setItem(\n            \"clientRegistrationInfo\",\n            JSON.stringify({\n              step: \"ConfirmationStep\",\n              clientId: result.result.clientId,\n            })\n          );\n          setLoading(false);\n          props.handleNext(\"ConfirmationStep\");\n          window.scrollTo({\n            top: \"0\",\n            behavior: \"smooth\",\n          });\n        } else {\n          setLoading(false);\n          notifications.showError(\n            result.message || \"Error while update your account info, Try again\"\n          );\n        }\n      }\n    }\n  };\n\n  const handleOptionalInfo = (value, type) => {\n    let optionalInfo = clientRegistration.optionalInfo;\n    if (type === \"website\") {\n      let obj = {\n        type: \"optionalInfo\",\n        value: { ...optionalInfo, website: value },\n      };\n      dispatch(updateClientRegisterValue(obj));\n    }\n\n    if (type === \"noOfEmployee\") {\n      let obj = {\n        type: \"optionalInfo\",\n        value: { ...optionalInfo, noOfEmployee: value },\n      };\n      dispatch(updateClientRegisterValue(obj));\n    }\n    if (type === \"annualSales\") {\n      let obj = {\n        type: \"optionalInfo\",\n        value: { ...optionalInfo, annualSales: value },\n      };\n      dispatch(updateClientRegisterValue(obj));\n    }\n    if (type === \"linkedInProfileUrl\") {\n      let obj = {\n        type: \"optionalInfo\",\n        value: { ...optionalInfo, linkedInProfileUrl: value },\n      };\n      dispatch(updateClientRegisterValue(obj));\n    }\n  };\n  const handleAddMorePortfolio = () => {\n    if (clientRegistration?.optionalInfo?.portfolio?.length < 5) {\n      let optionalInfo = clientRegistration.optionalInfo;\n\n      let obj = {\n        type: \"optionalInfo\",\n        value: {\n          ...optionalInfo,\n          portfolio: optionalInfo.portfolio.concat([\n            { description: \"\", portfolioImageFile: {}, fileName: \"\" },\n          ]),\n        },\n      };\n      console.log(obj, \"optionalInfo.portfolio\");\n      dispatch(updateClientRegisterValue(obj));\n    }\n  };\n\n  const handleRemoveMorePortfolio = async (index) => {\n    let newPortfolio = [...clientRegistration?.optionalInfo?.portfolio];\n    if (newPortfolio[index].portfolioImage) {\n      await deleteImage(newPortfolio[index].portfolioImage);\n    }\n    newPortfolio.splice(index, 1);\n    let obj = {\n      type: \"optionalInfo\",\n      value: { ...clientRegistration.optionalInfo, portfolio: newPortfolio },\n    };\n    dispatch(updateClientRegisterValue(obj));\n  };\n\n  const handleRemoveMoreCertificate = async (index) => {\n    let newCertificates = [...clientRegistration?.optionalInfo?.certificates];\n    if (newCertificates[index].fileDetail) {\n      await deleteImage(newCertificates[index].fileDetail);\n    }\n    newCertificates.splice(index, 1);\n    let obj = {\n      type: \"optionalInfo\",\n      value: {\n        ...clientRegistration.optionalInfo,\n        certificates: newCertificates,\n      },\n    };\n    dispatch(updateClientRegisterValue(obj));\n  };\n\n  const handleAddMoreCertificate = () => {\n    if (clientRegistration?.optionalInfo?.certificates.length < 5) {\n      let optionalInfo = clientRegistration.optionalInfo;\n      let obj = {\n        type: \"optionalInfo\",\n        value: {\n          ...optionalInfo,\n          certificates: [\n            ...optionalInfo.certificates,\n            ...[{ fileName: \"\", fileDetail: \"\" }],\n          ],\n        },\n      };\n      dispatch(updateClientRegisterValue(obj));\n    }\n  };\n  const handleAddMoreOfficePhoto = () => {\n    if (clientRegistration?.optionalInfo?.officePhoto?.length < 5) {\n      let optionalInfo = clientRegistration.optionalInfo;\n      let obj = {\n        type: \"optionalInfo\",\n        value: {\n          ...optionalInfo,\n          officePhoto: [\n            ...optionalInfo.officePhoto,\n            ...[{ fileName: \"\", fileDetail: \"\" }],\n          ],\n        },\n      };\n      dispatch(updateClientRegisterValue(obj));\n    }\n  };\n  const handleRemoveMoreOfficePhoto = async (index) => {\n    let newOfficePhoto = [...clientRegistration?.optionalInfo?.officePhoto];\n    if (newOfficePhoto[index].fileDetail) {\n      await deleteImage(newOfficePhoto[index].fileDetail);\n    }\n    newOfficePhoto.splice(index, 1);\n    let obj = {\n      type: \"optionalInfo\",\n      value: {\n        ...clientRegistration.optionalInfo,\n        officePhoto: newOfficePhoto,\n      },\n    };\n    dispatch(updateClientRegisterValue(obj));\n  };\n  const handleUpdatePortfolioDes = (value, index) => {\n    let newPortfolio = [...clientRegistration?.optionalInfo?.portfolio];\n\n    let objPor = {\n      fileName: newPortfolio[index].fileName,\n      portfolioImageFile: newPortfolio[index].portfolioImageFile,\n      description: value,\n    };\n    newPortfolio.splice(index, 1, objPor);\n\n    let obj = {\n      type: \"optionalInfo\",\n      value: { ...clientRegistration.optionalInfo, portfolio: newPortfolio },\n    };\n    dispatch(updateClientRegisterValue(obj));\n  };\n\n  const handlePortfolioUpdate = async (file, index, name) => {\n    if (file || name) {\n      let newPortfolio = [...clientRegistration?.optionalInfo?.portfolio];\n      setUploading(true);\n      let response = await uploadImage(file, \"portfolio\");\n      if (response.success) {\n        setUploading(false);\n        let objPor = {\n          description: newPortfolio[index].description,\n          portfolioImage: response.result.s3Key,\n          fileName: name,\n        };\n\n        newPortfolio.splice(index, 1, objPor);\n\n        let obj = {\n          type: \"optionalInfo\",\n          value: {\n            ...clientRegistration.optionalInfo,\n            portfolio: newPortfolio,\n          },\n        };\n        dispatch(updateClientRegisterValue(obj));\n      } else {\n        notifications.showError(response || \"Error uploading image.\");\n        setUploading(false);\n      }\n    }\n  };\n\n  const handleAddCertificatePhoto = async (file, index, name) => {\n    if (file || name) {\n      let newCertificates = [...clientRegistration?.optionalInfo?.certificates];\n\n      setUploading(true);\n\n      let response = await uploadImage(file, \"portfolio\");\n      if (response.success) {\n        setUploading(false);\n        let objPor = {\n          fileDetail: response.result.s3Key,\n          fileName: name,\n        };\n\n        newCertificates.splice(index, 1, objPor);\n\n        let obj = {\n          type: \"optionalInfo\",\n          value: {\n            ...clientRegistration.optionalInfo,\n            certificates: newCertificates,\n          },\n        };\n        dispatch(updateClientRegisterValue(obj));\n      } else {\n        notifications.showError(response || \"Error uploading image.\");\n        setUploading(false);\n      }\n    }\n  };\n\n  const handleOfficePhotoUpdate = async (file, index, name) => {\n    if (file || name) {\n      let newOfficePhoto = [...clientRegistration?.optionalInfo?.officePhoto];\n      setUploading(true);\n      let response = await uploadImage(file, \"photos\");\n      if (response.success) {\n        setUploading(false);\n        let objPor = {\n          fileDetail: response.result.s3Key,\n          fileName: name,\n        };\n\n        newOfficePhoto.splice(index, 1, objPor);\n\n        let obj = {\n          type: \"optionalInfo\",\n          value: {\n            ...clientRegistration.optionalInfo,\n            officePhoto: newOfficePhoto,\n          },\n        };\n        dispatch(updateClientRegisterValue(obj));\n      } else {\n        notifications.showError(response || \"Error uploading image.\");\n        setUploading(false);\n      }\n    }\n  };\n\n  const handleIntroductionVideo = async (file, name) => {\n    setUploading(true);\n    let response = await uploadImage(file, \"profilevideo\");\n    if (response) {\n      setUploading(false);\n      let introductionVideo = {\n        fileName: name,\n        fileDetail: response.result.s3Key,\n      };\n      let obj = {\n        type: \"optionalInfo\",\n        value: {\n          ...clientRegistration.optionalInfo,\n          introductionVideo: introductionVideo,\n        },\n      };\n      dispatch(updateClientRegisterValue(obj));\n    } else {\n      notifications.showError(response || \"Error uploading video.\");\n      setUploading(false);\n    }\n  };\n\n  const handleUpdateClientRegistrationValue = (value, type) => {\n    let obj = {\n      type: type,\n      value: value,\n    };\n    dispatch(updateClientRegisterValue(obj));\n  };\n  async function createFile(url, fileName) {\n    let response = await fetch(url);\n    let data = await response.blob();\n    let metadata = {\n      type: \"image/jpeg\",\n    };\n    let file = new File([data], fileName, metadata);\n    return file;\n  }\n\n  const handleUploadImage = async (file) => {\n    setFileUploading({ ...fileUploading, userProfileUrl: true });\n    let response = await uploadImage(file, \"profileimage\");\n    if (response.success) {\n      handleUpdateClientRegistrationValue(\n        response.result.s3Key,\n        \"userProfileUrl\"\n      );\n      setFileUploading({ ...fileUploading, userProfileUrl: false });\n    } else {\n      notifications.showError(response || \"Error uploading image.\");\n      setFileUploading({ ...fileUploading, userProfileUrl: false });\n    }\n  };\n\n  const handleDeleteImage = async (key) => {\n    if (key.slice(0, 5) != \"https\") {\n      await deleteImage(key);\n    }\n  };\n\n\n  return (\n    <>\n      <Skeleton count={10} isSkeletonLoading={isSkeletonLoading} />\n      <section\n        hidden={isSkeletonLoading}\n        className=\"card_sec company-register-page post_form\"\n        style={{ padding: \"0px\" }}\n      >\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <div className=\"row mb-3\">\n              <div className=\"col-lg-3 col-md-4\">\n                <div className=\"user-profile-pic\">\n                  {clientRegistration.userProfileUrl ? (\n                    <>\n                      <img\n                        style={{ cursor: \"pointer\" }}\n                        src={getProfileImage(\n                          clientRegistration?.userProfileUrl\n                        )}\n                      />{\" \"}\n                      <div\n                        onClick={() => {\n                          handleDeleteImage(clientRegistration?.userProfileUrl);\n                          handleUpdateClientRegistrationValue(\n                            \"\",\n                            \"userProfileUrl\"\n                          );\n                        }}\n                        className=\"trash-bin-icon-for-image-change\"\n                      >\n                        <i className=\"fa fa-trash\"></i>\n                      </div>\n                    </>\n                  ) : (\n                    <>\n                      <label for=\"upload-photo\">\n                        {languageType.USER_PHOTO}\n                      </label>\n                      <input\n                        type=\"file\"\n                        name=\"user-photo\"\n                        id=\"upload-photo\"\n                        accept=\"jpg jpeg png PNG gif\"\n                        onChange={(e) => {\n                          let errorMessage = {};\n\n                          let size = e.target.files[0]\n                            ? e.target.files[0].size\n                            : 0;\n                          if (size < 1048576) {\n                            handleUploadImage(e.target.files[0]);\n                            setErrorMessage({\n                              ...errorMessage,\n                              userProfileUrl: null,\n                            });\n                          } else {\n                            notifications.showWarning(\n                              \"Please select a file size of less than 1 MB.\"\n                            );\n                          }\n                          setErrorMessage({\n                            ...errorMessage,\n                            userProfileUrl: null,\n                          });\n                        }}\n                      />\n                    </>\n                  )}\n                </div>\n                {fileUploading.userProfileUrl && (\n                  <div>\n                    Uploading <i className=\"fa fa-spinner fa-spin\"></i>\n                  </div>\n                )}\n                {errorMessage.userProfileUrl && (\n                  <div className=\"text-danger\">\n                    {errorMessage.userProfileUrl}\n                  </div>\n                )}\n              </div>\n              <div className=\"col-lg-9 col-md-8\">\n                <div className=\"form-group row mb-3\">\n                  <label for=\"company-name\" class=\"col-sm-4 col-form-label\">\n                    <span className=\"form-label-icon\">\n                      <img\n                        width={32}\n                        src={\n                          \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/company_chair.svg\"\n                        }\n                      />\n                    </span>\n                    {languageType.COMPANY_NAME}\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control \"\n                      id=\"company-name\"\n                      value={clientRegistration?.companyName}\n                      name=\"company-name\"\n                      placeholder={languageType.COMPANY_NAME}\n                      onChange={(e) => {\n                        handleUpdateClientRegistrationValue(\n                          e.currentTarget.value,\n                          \"companyName\"\n                        );\n                        setErrorMessage({ ...errorMessage, companyName: null });\n                      }}\n                    />\n                    {errorMessage.companyName && (\n                      <div className=\"text-danger\">\n                        {errorMessage.companyName}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label for=\"first-name\" class=\"col-sm-4 col-form-label\">\n                    <span className=\"form-label-icon\">\n                      <img\n                        width={20}\n                        src={\n                          \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/add_contact_person.svg\"\n                        }\n                      />\n                    </span>\n                    {languageType.CONTACT_PERSON}\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-6 col-md-6 pr-lg-1 mb-2 mb-md-0\">\n                        <input\n                          type=\"text\"\n                          placeholder={languageType.FIRST_NAME}\n                          className=\"form-control \"\n                          id=\"first-name\"\n                          name=\"first-name\"\n                          value={clientRegistration?.firstName}\n                          onChange={(e) => {\n                            handleUpdateClientRegistrationValue(\n                              e.currentTarget.value,\n                              \"firstName\"\n                            );\n                            setErrorMessage({\n                              ...errorMessage,\n                              contactFirstName: null,\n                            });\n                          }}\n                        />\n                        {errorMessage.contactFirstName && (\n                          <div className=\"text-danger\">\n                            {errorMessage.contactFirstName}\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"col-lg-6 col-md-6 pl-lg-1\">\n                        <input\n                          type=\"text\"\n                          placeholder={languageType.LAST_NAME}\n                          className=\"form-control \"\n                          id=\"last-name\"\n                          name=\"last-name\"\n                          value={clientRegistration?.lastName}\n                          onChange={(e) => {\n                            handleUpdateClientRegistrationValue(\n                              e.currentTarget.value,\n                              \"lastName\"\n                            );\n                            setErrorMessage({\n                              ...errorMessage,\n                              contactLastName: null,\n                            });\n                          }}\n                        />\n                        {errorMessage.contactLastName && (\n                          <div className=\"text-danger\">\n                            {errorMessage.contactLastName}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group row mb-3\">\n              <label for=\"country\" class=\"col-sm-3 col-form-label\">\n                <span className=\"form-label-icon text-left\">\n                  <img\n                    width={20}\n                    src={\n                      \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/call_phone.svg\"\n                    }\n                  />\n                </span>\n                {languageType.MOBILE_NO}\n              </label>\n              <div class=\"col-sm-9\">\n                <div className=\"row\">\n                  <div className=\"col-lg-4 mb-2 mb-md-0\">\n                    <DropdownList\n                      id={`CountryList}`}\n                      gray_bg\n                      style={{ background: \"#f3f2f2\" }}\n                      name={`CountryList`}\n                      enableAutoComplete\n                      enableAutoCompleteSearch\n                      placeHolder=\"Country\"\n                      value={clientRegistration?.country}\n                      selectItem={(value) => {\n                        handleUpdateClientRegistrationValue(value, \"country\");\n                        setErrorMessage({ ...errorMessage, country: null });\n                      }}\n                      items={CountryList.map((country) => ({\n                        text: country.name,\n                        value: country.name,\n                      }))}\n                    />\n                    {errorMessage[\"country\"] && (\n                      <div className=\"text-danger\">\n                        {errorMessage[\"country\"]}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"col-lg-2 mb-2 mb-md-0\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"+82\"\n                      className=\"form-control gray_bg  readonly\"\n                      id=\"country-code\"\n                      value={clientRegistration?.countryCode}\n                      onChange={(e) => {\n                        handleUpdateClientRegistrationValue(\n                          e.target.value,\n                          \"countryCode\"\n                        );\n                        setErrorMessage({\n                          ...errorMessage,\n                          countryCode: null,\n                        });\n                      }}\n                      name=\"country-code\"\n                    />\n                  </div>\n                  <div className=\"col-lg-6\">\n                    <div class=\"input-group\">\n                      <input\n                        type=\"text\"\n                        class=\"form-control custom-form-control\"\n                        name=\"mobile-number\"\n                        id=\"mobile-number\"\n                        placeholder={languageType.MOBILE_NO}\n                        value={clientRegistration?.phoneNo}\n                        onChange={(e) => {\n                          handleUpdateClientRegistrationValue(\n                            e.target.value,\n                            \"phoneNo\"\n                          );\n                          setErrorMessage({\n                            ...errorMessage,\n                            mobileNumber: null,\n                          });\n                        }}\n                      />\n                      <div class=\"input-group-append\">\n                        <button\n                          onClick={() => {\n                            if (props.location?.state?.phoneVerified) {\n                            } else {\n                              props.history.push({\n                                pathname: \"/mobile-verify\",\n                                state: {\n                                  mobileNumber: clientRegistration?.phoneNo,\n                                  path: \"client-registration\",\n                                  country: clientRegistration.country,\n                                  countryCode: clientRegistration.countryCode,\n                                },\n                              });\n                            }\n                          }}\n                          class=\"btn btn-dark\"\n                          type=\"button\"\n                        >\n                          {props.location?.state?.phoneVerified\n                            ? \"Verifies\"\n                            : \"Verify\"}\n                        </button>\n                      </div>\n                    </div>\n                    {errorMessage[\"mobileNumber\"] && (\n                      <div className=\"text-danger\">\n                        {errorMessage[\"mobileNumber\"]}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group row mb-3\">\n              <label for=\"business-category\" class=\"col-sm-3 col-form-label\">\n                <span className=\"form-label-icon text-left\">\n                  <img\n                    width={25}\n                    src={\n                      \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/briefcase.svg\"\n                    }\n                  />\n                </span>\n                {languageType.BUSINESS_SCOPE}\n              </label>\n              <div class=\"col-sm-9\">\n                <div className=\"row\">\n                  <div className=\"col-lg-6\">\n                    <DropdownList\n                      id={`business-category}`}\n                      name={`business-category`}\n                      enableAutoCompleteSearch\n                      enableAutoComplete\n                      placeHolder={languageType.BUSINESS_SCOPE}\n                      value={clientRegistration?.businessType}\n                      selectItem={(value) => {\n                        handleUpdateClientRegistrationValue(\n                          value,\n                          \"businessType\"\n                        );\n                        setSubScope(\n                          selectSubScopes(value, languageReducer.projectScopes)\n                        );\n                        setErrorMessage({\n                          ...errorMessage,\n                          businessCategory: null,\n                        });\n                      }}\n                      items={languageReducer.projectScopes}\n                    />\n                    {errorMessage.businessType && (\n                      <div className=\"text-danger\">\n                        {errorMessage.businessType}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <br />\n              </div>\n            </div>\n            <div className=\"form-group row mb-3\">\n              <label for=\"org-title\" class=\"col-sm-3 col-form-label\">\n                <span className=\"form-label-icon text-left\">\n                  <img\n                    width={22}\n                    src={\n                      \"https://jungleworksassetsbucket.s3.ap-northeast-2.amazonaws.com/bearoleImages/icons/favorite_page.svg\"\n                    }\n                  />\n                </span>\n                {languageType.TITLE_TEXT_PROFILE}\n              </label>\n              <div class=\"col-sm-9\">\n                <input\n                  type=\"text\"\n                  placeholder={languageType.DESCRIBE_YOURSELF_ORGANIZATION}\n                  className=\"form-control\"\n                  id=\"org-title\"\n                  value={clientRegistration.userTitle}\n                  name=\"org-title\"\n                  onChange={(e) => {\n                    handleUpdateClientRegistrationValue(\n                      e.target.value,\n                      \"userTitle\"\n                    );\n                    setErrorMessage({ ...errorMessage, title: null });\n                  }}\n                />\n                {errorMessage.title && (\n                  <div className=\"text-danger\">{errorMessage.title}</div>\n                )}\n                <textarea\n                  placeholder={languageType.WRITE_INTRO_YOU_ORGANIZATION}\n                  className=\"form-control mt-3\"\n                  id=\"org-introduction\"\n                  rows={\"5\"}\n                  name=\"org-introduction\"\n                  value={clientRegistration?.professionalOverview}\n                  onChange={(e) => {\n                    handleUpdateClientRegistrationValue(\n                      e.target.value,\n                      \"professionalOverview\"\n                    );\n                    setErrorMessage({ ...errorMessage, description: null });\n                  }}\n                ></textarea>\n                {errorMessage.description && (\n                  <div className=\"text-danger\">{errorMessage.description}</div>\n                )}\n              </div>\n            </div>\n            <OptionalInfo\n              optionalInfo={clientRegistration?.optionalInfo}\n              handleOptionalInfo={handleOptionalInfo}\n              handleAddMorePortfolio={handleAddMorePortfolio}\n              handleRemoveMorePortfolio={handleRemoveMorePortfolio}\n              handleRemoveMoreCertificate={handleRemoveMoreCertificate}\n              handleAddMoreCertificate={handleAddMoreCertificate}\n              handleAddMoreOfficePhoto={handleAddMoreOfficePhoto}\n              handleRemoveMoreOfficePhoto={handleRemoveMoreOfficePhoto}\n              handleUpdatePortfolioDes={handleUpdatePortfolioDes}\n              handlePortfolioUpdate={handlePortfolioUpdate}\n              handleOfficePhotoUpdate={handleOfficePhotoUpdate}\n              handleAddCertificatePhoto={handleAddCertificatePhoto}\n              handleIntroductionVideo={handleIntroductionVideo}\n            />\n            <div className=\"text-right mt-5\">\n              <button onClick={handleSubmit} className=\"btn btn-dark px-5\">\n                {languageType.SAVE}{\" \"}\n                {loading ? <i className=\"fa fa-spinner fa-spin\"></i> : \"\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n      <FileUploadLoader title={\" Uploading new file...\"} show={uploading} />\n    </>\n  );\n}\n\nexport default ClientRegistrationStep;\n"]},"metadata":{},"sourceType":"module"}
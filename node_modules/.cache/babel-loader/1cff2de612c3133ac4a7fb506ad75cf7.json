{"ast":null,"code":"var _jsxFileName = \"/var/www/php74/bearolefrontend/src/components/currencyDisplay/index.js\";\nimport { slice, subStr, toString, toInteger } from \"lodash\";\nimport React, { useState } from \"react\";\n\nconst cutEveryFourDigits = value => {\n  if (toString(value).length === 4) {\n    const valueString = toString(value);\n    const firstPart = slice(valueString, 0, 1)[0];\n    const secondPart = \"천\";\n    const thirdPart = valueString.substr(1);\n    const newValue = `${firstPart}${secondPart}${thirdPart} `;\n    return newValue;\n  } else return value;\n};\n\nconst getManwonAndRemainingWon = value => {\n  //condition 1,222,200======> 122만 2,200원\n  const manwon = `${toInteger(value / 10000)}만`;\n  const remaningwon = value % 10000;\n  return `${manwon}${!remaningwon ? \"원\" : `${remaningwon}원`}`;\n};\n\nconst resolveMan = value => {\n  //condition 22222 ======> 2만 2,200원\n  const man = toInteger(value / 10000);\n  const remainingMan = value % 10000; // what remained here is won\n\n  debugger;\n  return `${man ? `${cutEveryFourDigits(man)}만` : \"\"}${cutEveryFourDigits(remainingMan)}원`;\n};\n\nconst resolveSib = value => {\n  //condition 222220 ======> 2십2만 2,200원\n  const sib = toInteger(value / 100000);\n  const remainingSib = value % 100000;\n  return `${sib ? `${cutEveryFourDigits(sib)}` : \"\"}${resolveMan(remainingSib)}`;\n};\n\nconst resolveBaeg = value => {\n  //condition 2222200 ======> 2백2십2만 2,200원\n  const baeg = toInteger(value / 1000000);\n  const remainingBaeg = value % 1000000;\n  return `${baeg ? `${cutEveryFourDigits(baeg)}` : \"\"}${resolveSib(remainingBaeg)}`;\n};\n\nconst resolveCheon = value => {\n  //condition 22222200 ======> 2천2백2십2만 2,200원\n  const cheon = toInteger(value / 10000000);\n  const remainingCheon = value % 10000000;\n  return `${cheon ? `${cutEveryFourDigits(cheon)}천` : \"\"}${resolveBaeg(remainingCheon)}`;\n};\n\nconst resolveEog = value => {\n  //condition 122,222,200======> 1억2천2백2십2만 2,200원\n  const eog = toInteger(value / 100000000);\n  const remaningeog = value % 100000000;\n  return `${eog ? `${cutEveryFourDigits(eog)}억` : \"\"}${resolveCheon(remaningeog)}`;\n};\n\nconst CurrencyDisplay = () => {\n  const [currency, setCurrency] = useState(0);\n\n  const onChange = e => {\n    const value = toInteger(e.target.value);\n\n    if (value < 10000) {\n      setCurrency(`${value}원`);\n    } else if (value < 100000000) {\n      //manwon\n      setCurrency(getManwonAndRemainingWon(value));\n    } else if (value <= 1000000000000) {\n      setCurrency(resolveEog(value));\n    } else {\n      setCurrency(\"Invalid Amount entered\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-5 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"h1 ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, currency));\n};\n\nexport default CurrencyDisplay;","map":{"version":3,"sources":["/var/www/php74/bearolefrontend/src/components/currencyDisplay/index.js"],"names":["slice","subStr","toString","toInteger","React","useState","cutEveryFourDigits","value","length","valueString","firstPart","secondPart","thirdPart","substr","newValue","getManwonAndRemainingWon","manwon","remaningwon","resolveMan","man","remainingMan","resolveSib","sib","remainingSib","resolveBaeg","baeg","remainingBaeg","resolveCheon","cheon","remainingCheon","resolveEog","eog","remaningeog","CurrencyDisplay","currency","setCurrency","onChange","e","target"],"mappings":"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","sourcesContent":["import { slice, subStr, toString, toInteger } from \"lodash\";\nimport React, { useState } from \"react\";\n\nconst cutEveryFourDigits = (value) => {\n  if (toString(value).length === 4) {\n    const valueString = toString(value);\n    const firstPart = slice(valueString, 0, 1)[0];\n    const secondPart = \"천\";\n    const thirdPart = valueString.substr(1);\n    const newValue = `${firstPart}${secondPart}${thirdPart} `;\n    return newValue;\n  } else return value;\n};\n\nconst getManwonAndRemainingWon = (value) => {\n  //condition 1,222,200======> 122만 2,200원\n  const manwon = `${toInteger(value / 10000)}만`;\n  const remaningwon = value % 10000;\n  return `${manwon}${!remaningwon ? \"원\" : `${remaningwon}원`}`;\n};\n\nconst resolveMan = (value) => {\n  //condition 22222 ======> 2만 2,200원\n  const man = toInteger(value / 10000);\n  const remainingMan = value % 10000; // what remained here is won\n  debugger;\n\n  return `${man ? `${cutEveryFourDigits(man)}만` : \"\"}${cutEveryFourDigits(\n    remainingMan\n  )}원`;\n};\n\nconst resolveSib = (value) => {\n  //condition 222220 ======> 2십2만 2,200원\n  const sib = toInteger(value / 100000);\n  const remainingSib = value % 100000;\n  return `${sib ? `${cutEveryFourDigits(sib)}` : \"\"}${resolveMan(\n    remainingSib\n  )}`;\n};\n\nconst resolveBaeg = (value) => {\n  //condition 2222200 ======> 2백2십2만 2,200원\n  const baeg = toInteger(value / 1000000);\n  const remainingBaeg = value % 1000000;\n  return `${baeg ? `${cutEveryFourDigits(baeg)}` : \"\"}${resolveSib(\n    remainingBaeg\n  )}`;\n};\n\nconst resolveCheon = (value) => {\n  //condition 22222200 ======> 2천2백2십2만 2,200원\n  const cheon = toInteger(value / 10000000);\n  const remainingCheon = value % 10000000;\n  return `${cheon ? `${cutEveryFourDigits(cheon)}천` : \"\"}${resolveBaeg(\n    remainingCheon\n  )}`;\n};\n\nconst resolveEog = (value) => {\n  //condition 122,222,200======> 1억2천2백2십2만 2,200원\n  const eog = toInteger(value / 100000000);\n  const remaningeog = value % 100000000;\n\n  return `${eog ? `${cutEveryFourDigits(eog)}억` : \"\"}${resolveCheon(\n    remaningeog\n  )}`;\n};\n\nconst CurrencyDisplay = () => {\n  const [currency, setCurrency] = useState(0);\n\n  const onChange = (e) => {\n    const value = toInteger(e.target.value);\n    if (value < 10000) {\n      setCurrency(`${value}원`);\n    } else if (value < 100000000) {\n      //manwon\n      setCurrency(getManwonAndRemainingWon(value));\n    } else if (value <= 1000000000000) {\n      setCurrency(resolveEog(value));\n    } else {\n      setCurrency(\"Invalid Amount entered\");\n    }\n  };\n  return (\n    <div className=\"my-5 d-flex justify-content-center\">\n      <input type=\"text\" onChange={onChange} />\n      <p className=\"h1 ml-4\">{currency}</p>\n    </div>\n  );\n};\n\nexport default CurrencyDisplay;\n"]},"metadata":{},"sourceType":"module"}